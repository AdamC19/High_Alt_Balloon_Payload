ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 2


  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** 
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:Core/Src/printf.c **** // printf_config.h header file
  41:Core/Src/printf.c **** // default: undefined
  42:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:Core/Src/printf.c **** #include "printf_config.h"
  44:Core/Src/printf.c **** #endif
  45:Core/Src/printf.c **** 
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:Core/Src/printf.c **** // default: 32 byte
  50:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:Core/Src/printf.c **** #endif
  53:Core/Src/printf.c **** 
  54:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:Core/Src/printf.c **** // default: 32 byte
  57:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:Core/Src/printf.c **** #endif
  60:Core/Src/printf.c **** 
  61:Core/Src/printf.c **** // support for the floating point type (%f)
  62:Core/Src/printf.c **** // default: activated
  63:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #endif
  66:Core/Src/printf.c **** 
  67:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  68:Core/Src/printf.c **** // default: activated
  69:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #endif
  72:Core/Src/printf.c **** 
  73:Core/Src/printf.c **** // define the default floating point precision
  74:Core/Src/printf.c **** // default: 6 digits
  75:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:Core/Src/printf.c **** #endif
  78:Core/Src/printf.c **** 
  79:Core/Src/printf.c **** // define the largest float suitable to print with %f
  80:Core/Src/printf.c **** // default: 1e9
  81:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:Core/Src/printf.c **** #endif
  84:Core/Src/printf.c **** 
  85:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  86:Core/Src/printf.c **** // default: activated
  87:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 3


  88:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #endif
  90:Core/Src/printf.c **** 
  91:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  92:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:Core/Src/printf.c **** // default: activated
  94:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #endif
  97:Core/Src/printf.c **** 
  98:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:Core/Src/printf.c **** 
 100:Core/Src/printf.c **** // internal flag definitions
 101:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:Core/Src/printf.c **** 
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** // import float.h for DBL_MAX
 116:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:Core/Src/printf.c **** #include <float.h>
 118:Core/Src/printf.c **** #endif
 119:Core/Src/printf.c **** 
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** // output function type
 122:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:Core/Src/printf.c **** 
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 126:Core/Src/printf.c **** typedef struct {
 127:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 128:Core/Src/printf.c ****   void* arg;
 129:Core/Src/printf.c **** } out_fct_wrap_type;
 130:Core/Src/printf.c **** 
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** // internal buffer output
 133:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:Core/Src/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:Core/Src/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 4


 136:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  38              		.loc 1 136 5 is_stmt 1 view .LVU3
  39              		.loc 1 136 26 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 137:Core/Src/printf.c ****   }
 138:Core/Src/printf.c **** }
  42              		.loc 1 138 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 139:Core/Src/printf.c **** 
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** // internal null output
 142:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:Core/Src/printf.c **** {
  56              		.loc 1 143 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 144:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  61              		.loc 1 144 3 view .LVU7
  62              		.loc 1 144 20 view .LVU8
  63              		.loc 1 144 34 view .LVU9
  64              		.loc 1 144 45 view .LVU10
 145:Core/Src/printf.c **** }
  65              		.loc 1 145 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._out_fct,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_out_fct:
  77              	.LVL2:
  78              	.LFB3:
 146:Core/Src/printf.c **** 
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** // internal _putchar wrapper
 149:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:Core/Src/printf.c **** {
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:Core/Src/printf.c ****   if (character) {
 153:Core/Src/printf.c ****     _putchar(character);
 154:Core/Src/printf.c ****   }
 155:Core/Src/printf.c **** }
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 5


 156:Core/Src/printf.c **** 
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** // internal output function wrapper
 159:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:Core/Src/printf.c **** {
  79              		.loc 1 160 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  83              		.loc 1 161 3 view .LVU13
  84              		.loc 1 161 14 view .LVU14
 162:Core/Src/printf.c ****   if (character) {
  85              		.loc 1 162 3 view .LVU15
  86              		.loc 1 162 6 is_stmt 0 view .LVU16
  87 0000 20B1     		cbz	r0, .L7
 160:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  88              		.loc 1 160 1 view .LVU17
  89 0002 08B5     		push	{r3, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 164:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  93              		.loc 1 164 5 is_stmt 1 view .LVU18
  94              		.loc 1 164 33 is_stmt 0 view .LVU19
  95 0004 0A68     		ldr	r2, [r1]
  96              	.LVL3:
  97              		.loc 1 164 6 view .LVU20
  98 0006 4968     		ldr	r1, [r1, #4]
  99              	.LVL4:
 100              		.loc 1 164 6 view .LVU21
 101 0008 9047     		blx	r2
 102              	.LVL5:
 165:Core/Src/printf.c ****   }
 166:Core/Src/printf.c **** }
 103              		.loc 1 166 1 view .LVU22
 104 000a 08BD     		pop	{r3, pc}
 105              	.LVL6:
 106              	.L7:
 107              		.cfi_def_cfa_offset 0
 108              		.cfi_restore 3
 109              		.cfi_restore 14
 110              		.loc 1 166 1 view .LVU23
 111 000c 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE3:
 115              		.section	.text._atoi,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	_atoi:
 122              	.LVL7:
 123              	.LFB6:
 167:Core/Src/printf.c **** 
 168:Core/Src/printf.c **** 
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 6


 169:Core/Src/printf.c **** // internal secure strlen
 170:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:Core/Src/printf.c **** {
 173:Core/Src/printf.c ****   const char* s;
 174:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 176:Core/Src/printf.c **** }
 177:Core/Src/printf.c **** 
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 180:Core/Src/printf.c **** // \return true if char is a digit
 181:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 182:Core/Src/printf.c **** {
 183:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:Core/Src/printf.c **** }
 185:Core/Src/printf.c **** 
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 188:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 189:Core/Src/printf.c **** {
 124              		.loc 1 189 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              		.loc 1 189 1 is_stmt 0 view .LVU25
 130 0000 0146     		mov	r1, r0
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 131              		.loc 1 190 3 is_stmt 1 view .LVU26
 132              	.LVL8:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 133              		.loc 1 191 3 view .LVU27
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 134              		.loc 1 190 16 is_stmt 0 view .LVU28
 135 0002 0020     		movs	r0, #0
 136              	.LVL9:
 137              		.loc 1 191 9 view .LVU29
 138 0004 08E0     		b	.L11
 139              	.LVL10:
 140              	.L12:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 141              		.loc 1 192 5 is_stmt 1 view .LVU30
 142              		.loc 1 192 11 is_stmt 0 view .LVU31
 143 0006 00EB8000 		add	r0, r0, r0, lsl #2
 144              	.LVL11:
 145              		.loc 1 192 42 view .LVU32
 146 000a 531C     		adds	r3, r2, #1
 147 000c 0B60     		str	r3, [r1]
 148              		.loc 1 192 34 view .LVU33
 149 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 150              		.loc 1 192 17 view .LVU34
 151 0010 03EB4003 		add	r3, r3, r0, lsl #1
 152              		.loc 1 192 7 view .LVU35
 153 0014 A3F13000 		sub	r0, r3, #48
 154              	.LVL12:
 155              	.L11:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 7


 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 156              		.loc 1 191 10 is_stmt 1 view .LVU36
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 157              		.loc 1 191 21 is_stmt 0 view .LVU37
 158 0018 0A68     		ldr	r2, [r1]
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 191 10 view .LVU38
 160 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 161              	.LVL13:
 162              	.LBB20:
 163              	.LBI20:
 181:Core/Src/printf.c **** {
 164              		.loc 1 181 20 is_stmt 1 view .LVU39
 165              	.LBB21:
 183:Core/Src/printf.c **** }
 166              		.loc 1 183 3 view .LVU40
 183:Core/Src/printf.c **** }
 167              		.loc 1 183 22 is_stmt 0 view .LVU41
 168 001c 303B     		subs	r3, r3, #48
 169 001e DBB2     		uxtb	r3, r3
 170              	.LVL14:
 183:Core/Src/printf.c **** }
 171              		.loc 1 183 22 view .LVU42
 172              	.LBE21:
 173              	.LBE20:
 191:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 174              		.loc 1 191 10 view .LVU43
 175 0020 092B     		cmp	r3, #9
 176 0022 F0D9     		bls	.L12
 193:Core/Src/printf.c ****   }
 194:Core/Src/printf.c ****   return i;
 177              		.loc 1 194 3 is_stmt 1 view .LVU44
 195:Core/Src/printf.c **** }
 178              		.loc 1 195 1 is_stmt 0 view .LVU45
 179 0024 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE6:
 183              		.section	.text._out_rev,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	_out_rev:
 190              	.LVL15:
 191              	.LFB7:
 196:Core/Src/printf.c **** 
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:Core/Src/printf.c **** {
 192              		.loc 1 200 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 16, pretend = 0, frame = 8
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 200 1 is_stmt 0 view .LVU47
 197 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 198              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 8


 199              		.cfi_offset 4, -36
 200              		.cfi_offset 5, -32
 201              		.cfi_offset 6, -28
 202              		.cfi_offset 7, -24
 203              		.cfi_offset 8, -20
 204              		.cfi_offset 9, -16
 205              		.cfi_offset 10, -12
 206              		.cfi_offset 11, -8
 207              		.cfi_offset 14, -4
 208 0004 83B0     		sub	sp, sp, #12
 209              		.cfi_def_cfa_offset 48
 210 0006 0546     		mov	r5, r0
 211 0008 0E46     		mov	r6, r1
 212 000a 9346     		mov	fp, r2
 213 000c 1F46     		mov	r7, r3
 214 000e DDF830A0 		ldr	r10, [sp, #48]
 215 0012 0D9C     		ldr	r4, [sp, #52]
 216 0014 DDF83890 		ldr	r9, [sp, #56]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 217              		.loc 1 201 3 is_stmt 1 view .LVU48
 218              	.LVL16:
 202:Core/Src/printf.c **** 
 203:Core/Src/printf.c ****   // pad spaces up to given width
 204:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 219              		.loc 1 204 3 view .LVU49
 220              		.loc 1 204 6 is_stmt 0 view .LVU50
 221 0018 0F9B     		ldr	r3, [sp, #60]
 222              	.LVL17:
 223              		.loc 1 204 6 view .LVU51
 224 001a 13F0030F 		tst	r3, #3
 225 001e 19D1     		bne	.L15
 226              	.LBB22:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 227              		.loc 1 205 17 view .LVU52
 228 0020 A046     		mov	r8, r4
 229              	.LBE22:
 230 0022 0192     		str	r2, [sp, #4]
 231              	.LVL18:
 232              	.L14:
 233              	.LBB23:
 234              		.loc 1 205 28 is_stmt 1 discriminator 1 view .LVU53
 235 0024 C845     		cmp	r8, r9
 236 0026 09D2     		bcs	.L25
 206:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 237              		.loc 1 206 7 discriminator 3 view .LVU54
 238 0028 02F1010B 		add	fp, r2, #1
 239              	.LVL19:
 240              		.loc 1 206 7 is_stmt 0 discriminator 3 view .LVU55
 241 002c 3B46     		mov	r3, r7
 242 002e 3146     		mov	r1, r6
 243 0030 2020     		movs	r0, #32
 244 0032 A847     		blx	r5
 245              	.LVL20:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 246              		.loc 1 205 38 is_stmt 1 discriminator 3 view .LVU56
 247 0034 08F10108 		add	r8, r8, #1
 248              	.LVL21:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 9


 249              		.loc 1 206 7 is_stmt 0 discriminator 3 view .LVU57
 250 0038 5A46     		mov	r2, fp
 251 003a F3E7     		b	.L14
 252              	.LVL22:
 253              	.L25:
 254              		.loc 1 206 7 discriminator 3 view .LVU58
 255 003c DDF804B0 		ldr	fp, [sp, #4]
 256 0040 08E0     		b	.L15
 257              	.LVL23:
 258              	.L18:
 259              		.loc 1 206 7 discriminator 3 view .LVU59
 260              	.LBE23:
 207:Core/Src/printf.c ****     }
 208:Core/Src/printf.c ****   }
 209:Core/Src/printf.c **** 
 210:Core/Src/printf.c ****   // reverse string
 211:Core/Src/printf.c ****   while (len) {
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 261              		.loc 1 212 5 is_stmt 1 view .LVU60
 262 0042 013C     		subs	r4, r4, #1
 263              	.LVL24:
 264              		.loc 1 212 5 is_stmt 0 view .LVU61
 265 0044 02F10108 		add	r8, r2, #1
 266              	.LVL25:
 267              		.loc 1 212 5 view .LVU62
 268 0048 3B46     		mov	r3, r7
 269 004a 3146     		mov	r1, r6
 270 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 271 0050 A847     		blx	r5
 272              	.LVL26:
 273 0052 4246     		mov	r2, r8
 274              	.LVL27:
 275              	.L15:
 211:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 276              		.loc 1 211 10 is_stmt 1 view .LVU63
 277 0054 002C     		cmp	r4, #0
 278 0056 F4D1     		bne	.L18
 213:Core/Src/printf.c ****   }
 214:Core/Src/printf.c **** 
 215:Core/Src/printf.c ****   // append pad spaces up to given width
 216:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 279              		.loc 1 216 3 view .LVU64
 280              		.loc 1 216 6 is_stmt 0 view .LVU65
 281 0058 0F9B     		ldr	r3, [sp, #60]
 282 005a 13F0020F 		tst	r3, #2
 283 005e 03D1     		bne	.L19
 284              	.LVL28:
 285              	.L13:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 218:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:Core/Src/printf.c ****     }
 220:Core/Src/printf.c ****   }
 221:Core/Src/printf.c **** 
 222:Core/Src/printf.c ****   return idx;
 223:Core/Src/printf.c **** }
 286              		.loc 1 223 1 view .LVU66
 287 0060 1046     		mov	r0, r2
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 10


 288 0062 03B0     		add	sp, sp, #12
 289              		.cfi_remember_state
 290              		.cfi_def_cfa_offset 36
 291              		@ sp needed
 292 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 293              	.LVL29:
 294              	.L19:
 295              		.cfi_restore_state
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 296              		.loc 1 217 28 is_stmt 1 view .LVU67
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 297              		.loc 1 217 16 is_stmt 0 view .LVU68
 298 0068 A2EB0B03 		sub	r3, r2, fp
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 299              		.loc 1 217 28 view .LVU69
 300 006c 4B45     		cmp	r3, r9
 301 006e F7D2     		bcs	.L13
 218:Core/Src/printf.c ****     }
 302              		.loc 1 218 7 is_stmt 1 view .LVU70
 303 0070 541C     		adds	r4, r2, #1
 304              	.LVL30:
 218:Core/Src/printf.c ****     }
 305              		.loc 1 218 7 is_stmt 0 view .LVU71
 306 0072 3B46     		mov	r3, r7
 307 0074 3146     		mov	r1, r6
 308 0076 2020     		movs	r0, #32
 309 0078 A847     		blx	r5
 310              	.LVL31:
 311 007a 2246     		mov	r2, r4
 312 007c F4E7     		b	.L19
 313              		.cfi_endproc
 314              	.LFE7:
 316              		.section	.text._ntoa_format,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	_ntoa_format:
 323              	.LVL32:
 324              	.LFB8:
 224:Core/Src/printf.c **** 
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** // internal itoa format
 227:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:Core/Src/printf.c **** {
 325              		.loc 1 228 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 28, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		.loc 1 228 1 is_stmt 0 view .LVU73
 330 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 331              		.cfi_def_cfa_offset 28
 332              		.cfi_offset 4, -28
 333              		.cfi_offset 5, -24
 334              		.cfi_offset 6, -20
 335              		.cfi_offset 7, -16
 336              		.cfi_offset 8, -12
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 11


 337              		.cfi_offset 9, -8
 338              		.cfi_offset 14, -4
 339 0004 85B0     		sub	sp, sp, #20
 340              		.cfi_def_cfa_offset 48
 341 0006 9946     		mov	r9, r3
 342 0008 0C9D     		ldr	r5, [sp, #48]
 343 000a 0D9C     		ldr	r4, [sp, #52]
 344 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 345 0010 DDF840E0 		ldr	lr, [sp, #64]
 346 0014 119F     		ldr	r7, [sp, #68]
 347 0016 129E     		ldr	r6, [sp, #72]
 229:Core/Src/printf.c ****   // pad leading zeros
 230:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 348              		.loc 1 230 3 is_stmt 1 view .LVU74
 349              		.loc 1 230 6 is_stmt 0 view .LVU75
 350 0018 16F0020F 		tst	r6, #2
 351 001c 21D1     		bne	.L27
 231:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 352              		.loc 1 231 5 is_stmt 1 view .LVU76
 353              		.loc 1 231 8 is_stmt 0 view .LVU77
 354 001e 7FB1     		cbz	r7, .L30
 355              		.loc 1 231 15 discriminator 1 view .LVU78
 356 0020 16F0010F 		tst	r6, #1
 357 0024 0CD0     		beq	.L30
 358              		.loc 1 231 42 discriminator 2 view .LVU79
 359 0026 B8F1000F 		cmp	r8, #0
 360 002a 02D1     		bne	.L29
 361              		.loc 1 231 55 discriminator 3 view .LVU80
 362 002c 16F00C0F 		tst	r6, #12
 363 0030 06D0     		beq	.L30
 364              	.L29:
 232:Core/Src/printf.c ****       width--;
 365              		.loc 1 232 7 is_stmt 1 view .LVU81
 366              		.loc 1 232 12 is_stmt 0 view .LVU82
 367 0032 013F     		subs	r7, r7, #1
 368              	.LVL33:
 369              		.loc 1 232 12 view .LVU83
 370 0034 04E0     		b	.L30
 371              	.LVL34:
 372              	.L32:
 233:Core/Src/printf.c ****     }
 234:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:Core/Src/printf.c ****       buf[len++] = '0';
 373              		.loc 1 235 7 is_stmt 1 view .LVU84
 374              		.loc 1 235 18 is_stmt 0 view .LVU85
 375 0036 4FF0300C 		mov	ip, #48
 376 003a 05F804C0 		strb	ip, [r5, r4]
 377              		.loc 1 235 14 view .LVU86
 378 003e 0134     		adds	r4, r4, #1
 379              	.LVL35:
 380              	.L30:
 234:Core/Src/printf.c ****       buf[len++] = '0';
 381              		.loc 1 234 25 is_stmt 1 view .LVU87
 382 0040 7445     		cmp	r4, lr
 383 0042 01D2     		bcs	.L33
 234:Core/Src/printf.c ****       buf[len++] = '0';
 384              		.loc 1 234 25 is_stmt 0 discriminator 1 view .LVU88
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 12


 385 0044 1F2C     		cmp	r4, #31
 386 0046 F6D9     		bls	.L32
 387              	.L33:
 236:Core/Src/printf.c ****     }
 237:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 388              		.loc 1 237 53 is_stmt 1 view .LVU89
 389 0048 16F0010F 		tst	r6, #1
 390 004c 09D0     		beq	.L27
 391              		.loc 1 237 36 is_stmt 0 discriminator 1 view .LVU90
 392 004e BC42     		cmp	r4, r7
 393 0050 07D2     		bcs	.L27
 394              		.loc 1 237 53 discriminator 2 view .LVU91
 395 0052 1F2C     		cmp	r4, #31
 396 0054 05D8     		bhi	.L27
 238:Core/Src/printf.c ****       buf[len++] = '0';
 397              		.loc 1 238 7 is_stmt 1 view .LVU92
 398              	.LVL36:
 399              		.loc 1 238 18 is_stmt 0 view .LVU93
 400 0056 4FF0300C 		mov	ip, #48
 401 005a 05F804C0 		strb	ip, [r5, r4]
 402              		.loc 1 238 14 view .LVU94
 403 005e 0134     		adds	r4, r4, #1
 404              	.LVL37:
 405              		.loc 1 238 14 view .LVU95
 406 0060 F2E7     		b	.L33
 407              	.LVL38:
 408              	.L27:
 239:Core/Src/printf.c ****     }
 240:Core/Src/printf.c ****   }
 241:Core/Src/printf.c **** 
 242:Core/Src/printf.c ****   // handle hash
 243:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 409              		.loc 1 243 3 is_stmt 1 view .LVU96
 410              		.loc 1 243 6 is_stmt 0 view .LVU97
 411 0062 16F0100F 		tst	r6, #16
 412 0066 14D0     		beq	.L35
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 413              		.loc 1 244 5 is_stmt 1 view .LVU98
 414              		.loc 1 244 8 is_stmt 0 view .LVU99
 415 0068 16F4806F 		tst	r6, #1024
 416 006c 04D1     		bne	.L36
 417              		.loc 1 244 36 discriminator 1 view .LVU100
 418 006e 1CB1     		cbz	r4, .L36
 419              		.loc 1 244 43 discriminator 2 view .LVU101
 420 0070 7445     		cmp	r4, lr
 421 0072 22D0     		beq	.L37
 422              		.loc 1 244 61 discriminator 3 view .LVU102
 423 0074 BC42     		cmp	r4, r7
 424 0076 20D0     		beq	.L37
 425              	.LVL39:
 426              	.L36:
 245:Core/Src/printf.c ****       len--;
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 247:Core/Src/printf.c ****         len--;
 248:Core/Src/printf.c ****       }
 249:Core/Src/printf.c ****     }
 250:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 13


 427              		.loc 1 250 5 is_stmt 1 view .LVU103
 428              		.loc 1 250 8 is_stmt 0 view .LVU104
 429 0078 0F9B     		ldr	r3, [sp, #60]
 430 007a 102B     		cmp	r3, #16
 431 007c 36D0     		beq	.L47
 432              	.LVL40:
 433              	.L39:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 252:Core/Src/printf.c ****     }
 253:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 255:Core/Src/printf.c ****     }
 256:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 434              		.loc 1 256 10 is_stmt 1 view .LVU105
 435              		.loc 1 256 13 is_stmt 0 view .LVU106
 436 007e 0F9B     		ldr	r3, [sp, #60]
 437 0080 022B     		cmp	r3, #2
 438 0082 3ED0     		beq	.L48
 439              	.L40:
 440              	.LVL41:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 258:Core/Src/printf.c ****     }
 259:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 441              		.loc 1 259 5 is_stmt 1 view .LVU107
 442              		.loc 1 259 8 is_stmt 0 view .LVU108
 443 0084 1F2C     		cmp	r4, #31
 444 0086 0ED8     		bhi	.L41
 260:Core/Src/printf.c ****       buf[len++] = '0';
 445              		.loc 1 260 7 is_stmt 1 view .LVU109
 446              	.LVL42:
 447              		.loc 1 260 18 is_stmt 0 view .LVU110
 448 0088 4FF0300C 		mov	ip, #48
 449 008c 05F804C0 		strb	ip, [r5, r4]
 450              		.loc 1 260 14 view .LVU111
 451 0090 0134     		adds	r4, r4, #1
 452              	.LVL43:
 453              	.L35:
 261:Core/Src/printf.c ****     }
 262:Core/Src/printf.c ****   }
 263:Core/Src/printf.c **** 
 264:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 454              		.loc 1 264 3 is_stmt 1 view .LVU112
 455              		.loc 1 264 6 is_stmt 0 view .LVU113
 456 0092 1F2C     		cmp	r4, #31
 457 0094 07D8     		bhi	.L41
 265:Core/Src/printf.c ****     if (negative) {
 458              		.loc 1 265 5 is_stmt 1 view .LVU114
 459              		.loc 1 265 8 is_stmt 0 view .LVU115
 460 0096 B8F1000F 		cmp	r8, #0
 461 009a 3AD0     		beq	.L42
 266:Core/Src/printf.c ****       buf[len++] = '-';
 462              		.loc 1 266 7 is_stmt 1 view .LVU116
 463              	.LVL44:
 464              		.loc 1 266 18 is_stmt 0 view .LVU117
 465 009c 4FF02D0C 		mov	ip, #45
 466 00a0 05F804C0 		strb	ip, [r5, r4]
 467              		.loc 1 266 14 view .LVU118
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 14


 468 00a4 0134     		adds	r4, r4, #1
 469              	.LVL45:
 470              	.L41:
 267:Core/Src/printf.c ****     }
 268:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:Core/Src/printf.c ****     }
 271:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 273:Core/Src/printf.c ****     }
 274:Core/Src/printf.c ****   }
 275:Core/Src/printf.c **** 
 276:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 471              		.loc 1 276 3 is_stmt 1 view .LVU119
 472              		.loc 1 276 10 is_stmt 0 view .LVU120
 473 00a6 0396     		str	r6, [sp, #12]
 474 00a8 0297     		str	r7, [sp, #8]
 475 00aa 0194     		str	r4, [sp, #4]
 476 00ac 0095     		str	r5, [sp]
 477 00ae 4B46     		mov	r3, r9
 478 00b0 FFF7FEFF 		bl	_out_rev
 479              	.LVL46:
 277:Core/Src/printf.c **** }
 480              		.loc 1 277 1 view .LVU121
 481 00b4 05B0     		add	sp, sp, #20
 482              		.cfi_remember_state
 483              		.cfi_def_cfa_offset 28
 484              		@ sp needed
 485 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 486              	.LVL47:
 487              	.L37:
 488              		.cfi_restore_state
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 489              		.loc 1 245 7 is_stmt 1 view .LVU122
 246:Core/Src/printf.c ****         len--;
 490              		.loc 1 246 7 view .LVU123
 246:Core/Src/printf.c ****         len--;
 491              		.loc 1 246 10 is_stmt 0 view .LVU124
 492 00ba B4F1010C 		subs	ip, r4, #1
 493              	.LVL48:
 246:Core/Src/printf.c ****         len--;
 494              		.loc 1 246 10 view .LVU125
 495 00be 13D0     		beq	.L44
 246:Core/Src/printf.c ****         len--;
 496              		.loc 1 246 15 discriminator 1 view .LVU126
 497 00c0 0F9B     		ldr	r3, [sp, #60]
 498              	.LVL49:
 246:Core/Src/printf.c ****         len--;
 499              		.loc 1 246 15 discriminator 1 view .LVU127
 500 00c2 102B     		cmp	r3, #16
 501 00c4 0ED0     		beq	.L49
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 502              		.loc 1 245 10 view .LVU128
 503 00c6 6446     		mov	r4, ip
 504              	.LVL50:
 505              	.L38:
 253:Core/Src/printf.c ****       buf[len++] = 'X';
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 15


 506              		.loc 1 253 10 is_stmt 1 view .LVU129
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 507              		.loc 1 253 13 is_stmt 0 view .LVU130
 508 00c8 0F9B     		ldr	r3, [sp, #60]
 509 00ca 102B     		cmp	r3, #16
 510 00cc D7D1     		bne	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 511              		.loc 1 253 28 discriminator 1 view .LVU131
 512 00ce 16F0200F 		tst	r6, #32
 513 00d2 D4D0     		beq	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 514              		.loc 1 253 57 discriminator 2 view .LVU132
 515 00d4 1F2C     		cmp	r4, #31
 516 00d6 D2D8     		bhi	.L39
 254:Core/Src/printf.c ****     }
 517              		.loc 1 254 7 is_stmt 1 view .LVU133
 518              	.LVL51:
 254:Core/Src/printf.c ****     }
 519              		.loc 1 254 18 is_stmt 0 view .LVU134
 520 00d8 4FF0580C 		mov	ip, #88
 521 00dc 05F804C0 		strb	ip, [r5, r4]
 254:Core/Src/printf.c ****     }
 522              		.loc 1 254 14 view .LVU135
 523 00e0 0134     		adds	r4, r4, #1
 524              	.LVL52:
 254:Core/Src/printf.c ****     }
 525              		.loc 1 254 18 view .LVU136
 526 00e2 CFE7     		b	.L40
 527              	.LVL53:
 528              	.L49:
 247:Core/Src/printf.c ****       }
 529              		.loc 1 247 9 is_stmt 1 view .LVU137
 247:Core/Src/printf.c ****       }
 530              		.loc 1 247 12 is_stmt 0 view .LVU138
 531 00e4 023C     		subs	r4, r4, #2
 532              	.LVL54:
 247:Core/Src/printf.c ****       }
 533              		.loc 1 247 12 view .LVU139
 534 00e6 C7E7     		b	.L36
 535              	.LVL55:
 536              	.L44:
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 537              		.loc 1 245 10 view .LVU140
 538 00e8 6446     		mov	r4, ip
 539 00ea C5E7     		b	.L36
 540              	.LVL56:
 541              	.L47:
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 542              		.loc 1 250 23 discriminator 1 view .LVU141
 543 00ec 16F0200F 		tst	r6, #32
 544 00f0 EAD1     		bne	.L38
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 545              		.loc 1 250 53 discriminator 2 view .LVU142
 546 00f2 1F2C     		cmp	r4, #31
 547 00f4 E8D8     		bhi	.L38
 251:Core/Src/printf.c ****     }
 548              		.loc 1 251 7 is_stmt 1 view .LVU143
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 16


 549              	.LVL57:
 251:Core/Src/printf.c ****     }
 550              		.loc 1 251 18 is_stmt 0 view .LVU144
 551 00f6 4FF0780C 		mov	ip, #120
 552 00fa 05F804C0 		strb	ip, [r5, r4]
 251:Core/Src/printf.c ****     }
 553              		.loc 1 251 14 view .LVU145
 554 00fe 0134     		adds	r4, r4, #1
 555              	.LVL58:
 251:Core/Src/printf.c ****     }
 556              		.loc 1 251 18 view .LVU146
 557 0100 C0E7     		b	.L40
 558              	.LVL59:
 559              	.L48:
 256:Core/Src/printf.c ****       buf[len++] = 'b';
 560              		.loc 1 256 27 discriminator 1 view .LVU147
 561 0102 1F2C     		cmp	r4, #31
 562 0104 CFD8     		bhi	.L41
 257:Core/Src/printf.c ****     }
 563              		.loc 1 257 7 is_stmt 1 view .LVU148
 564              	.LVL60:
 257:Core/Src/printf.c ****     }
 565              		.loc 1 257 18 is_stmt 0 view .LVU149
 566 0106 4FF0620C 		mov	ip, #98
 567 010a 05F804C0 		strb	ip, [r5, r4]
 257:Core/Src/printf.c ****     }
 568              		.loc 1 257 14 view .LVU150
 569 010e 0134     		adds	r4, r4, #1
 570              	.LVL61:
 257:Core/Src/printf.c ****     }
 571              		.loc 1 257 14 view .LVU151
 572 0110 B8E7     		b	.L40
 573              	.L42:
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 574              		.loc 1 268 10 is_stmt 1 view .LVU152
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 575              		.loc 1 268 13 is_stmt 0 view .LVU153
 576 0112 16F0040F 		tst	r6, #4
 577 0116 05D0     		beq	.L43
 269:Core/Src/printf.c ****     }
 578              		.loc 1 269 7 is_stmt 1 view .LVU154
 579              	.LVL62:
 269:Core/Src/printf.c ****     }
 580              		.loc 1 269 18 is_stmt 0 view .LVU155
 581 0118 4FF02B0C 		mov	ip, #43
 582 011c 05F804C0 		strb	ip, [r5, r4]
 269:Core/Src/printf.c ****     }
 583              		.loc 1 269 14 view .LVU156
 584 0120 0134     		adds	r4, r4, #1
 585              	.LVL63:
 269:Core/Src/printf.c ****     }
 586              		.loc 1 269 14 view .LVU157
 587 0122 C0E7     		b	.L41
 588              	.L43:
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 589              		.loc 1 271 10 is_stmt 1 view .LVU158
 271:Core/Src/printf.c ****       buf[len++] = ' ';
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 17


 590              		.loc 1 271 13 is_stmt 0 view .LVU159
 591 0124 16F0080F 		tst	r6, #8
 592 0128 BDD0     		beq	.L41
 272:Core/Src/printf.c ****     }
 593              		.loc 1 272 7 is_stmt 1 view .LVU160
 594              	.LVL64:
 272:Core/Src/printf.c ****     }
 595              		.loc 1 272 18 is_stmt 0 view .LVU161
 596 012a 4FF0200C 		mov	ip, #32
 597 012e 05F804C0 		strb	ip, [r5, r4]
 272:Core/Src/printf.c ****     }
 598              		.loc 1 272 14 view .LVU162
 599 0132 0134     		adds	r4, r4, #1
 600              	.LVL65:
 272:Core/Src/printf.c ****     }
 601              		.loc 1 272 14 view .LVU163
 602 0134 B7E7     		b	.L41
 603              		.cfi_endproc
 604              	.LFE8:
 606              		.section	.text._ntoa_long,"ax",%progbits
 607              		.align	1
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 612              	_ntoa_long:
 613              	.LVL66:
 614              	.LFB9:
 278:Core/Src/printf.c **** 
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** // internal itoa for 'long' type
 281:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:Core/Src/printf.c **** {
 615              		.loc 1 282 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 24, pretend = 0, frame = 32
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		.loc 1 282 1 is_stmt 0 view .LVU165
 620 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 621              		.cfi_def_cfa_offset 20
 622              		.cfi_offset 4, -20
 623              		.cfi_offset 5, -16
 624              		.cfi_offset 6, -12
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 91B0     		sub	sp, sp, #68
 628              		.cfi_def_cfa_offset 88
 629 0004 169C     		ldr	r4, [sp, #88]
 630 0006 189D     		ldr	r5, [sp, #96]
 631 0008 1B9E     		ldr	r6, [sp, #108]
 283:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 632              		.loc 1 283 3 is_stmt 1 view .LVU166
 284:Core/Src/printf.c ****   size_t len = 0U;
 633              		.loc 1 284 3 view .LVU167
 634              	.LVL67:
 285:Core/Src/printf.c **** 
 286:Core/Src/printf.c ****   // no hash for 0 values
 287:Core/Src/printf.c ****   if (!value) {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 18


 635              		.loc 1 287 3 view .LVU168
 636              		.loc 1 287 6 is_stmt 0 view .LVU169
 637 000a 0CB9     		cbnz	r4, .L51
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 638              		.loc 1 288 5 is_stmt 1 view .LVU170
 639              		.loc 1 288 11 is_stmt 0 view .LVU171
 640 000c 26F01006 		bic	r6, r6, #16
 641              	.LVL68:
 642              	.L51:
 289:Core/Src/printf.c ****   }
 290:Core/Src/printf.c **** 
 291:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 292:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 643              		.loc 1 292 3 is_stmt 1 view .LVU172
 644              		.loc 1 292 6 is_stmt 0 view .LVU173
 645 0010 16F4806E 		ands	lr, r6, #1024
 646 0014 16D0     		beq	.L57
 647              		.loc 1 292 34 discriminator 1 view .LVU174
 648 0016 64B3     		cbz	r4, .L58
 649 0018 4FF0000E 		mov	lr, #0
 650 001c 12E0     		b	.L57
 651              	.LVL69:
 652              	.L62:
 653              	.LBB24:
 293:Core/Src/printf.c ****     do {
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 654              		.loc 1 295 18 discriminator 1 view .LVU175
 655 001e 0CF1300C 		add	ip, ip, #48
 656              	.LVL70:
 657              		.loc 1 295 18 discriminator 1 view .LVU176
 658 0022 5FFA8CFC 		uxtb	ip, ip
 659              	.LVL71:
 660              	.L55:
 661              		.loc 1 295 14 discriminator 8 view .LVU177
 662 0026 0EF10107 		add	r7, lr, #1
 663              	.LVL72:
 664              		.loc 1 295 18 discriminator 8 view .LVU178
 665 002a 0EF1400E 		add	lr, lr, #64
 666 002e EE44     		add	lr, sp, lr
 667 0030 0EF820CC 		strb	ip, [lr, #-32]
 296:Core/Src/printf.c ****       value /= base;
 668              		.loc 1 296 7 is_stmt 1 discriminator 8 view .LVU179
 669              		.loc 1 296 13 is_stmt 0 discriminator 8 view .LVU180
 670 0034 B4FBF5FC 		udiv	ip, r4, r5
 671              	.LVL73:
 672              		.loc 1 296 13 discriminator 8 view .LVU181
 673              	.LBE24:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 674              		.loc 1 297 20 is_stmt 1 discriminator 8 view .LVU182
 675 0038 AC42     		cmp	r4, r5
 676 003a 1BD3     		bcc	.L53
 677              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU183
 678 003c 1F2F     		cmp	r7, #31
 679 003e 19D8     		bhi	.L53
 680              	.LBB25:
 295:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 19


 681              		.loc 1 295 14 view .LVU184
 682 0040 BE46     		mov	lr, r7
 296:Core/Src/printf.c ****       value /= base;
 683              		.loc 1 296 13 view .LVU185
 684 0042 6446     		mov	r4, ip
 685              	.LVL74:
 686              	.L57:
 296:Core/Src/printf.c ****       value /= base;
 687              		.loc 1 296 13 view .LVU186
 688              	.LBE25:
 293:Core/Src/printf.c ****       const char digit = (char)(value % base);
 689              		.loc 1 293 5 is_stmt 1 view .LVU187
 690              	.LBB26:
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 691              		.loc 1 294 7 view .LVU188
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 692              		.loc 1 294 39 is_stmt 0 view .LVU189
 693 0044 B4FBF5FC 		udiv	ip, r4, r5
 694 0048 05FB1C4C 		mls	ip, r5, ip, r4
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 695              		.loc 1 294 18 view .LVU190
 696 004c 5FFA8CFC 		uxtb	ip, ip
 697              	.LVL75:
 295:Core/Src/printf.c ****       value /= base;
 698              		.loc 1 295 7 is_stmt 1 view .LVU191
 295:Core/Src/printf.c ****       value /= base;
 699              		.loc 1 295 18 is_stmt 0 view .LVU192
 700 0050 BCF1090F 		cmp	ip, #9
 701 0054 E3D9     		bls	.L62
 295:Core/Src/printf.c ****       value /= base;
 702              		.loc 1 295 85 discriminator 2 view .LVU193
 703 0056 16F0200F 		tst	r6, #32
 704 005a 08D0     		beq	.L59
 295:Core/Src/printf.c ****       value /= base;
 705              		.loc 1 295 85 view .LVU194
 706 005c 4127     		movs	r7, #65
 707              	.L56:
 295:Core/Src/printf.c ****       value /= base;
 708              		.loc 1 295 85 discriminator 7 view .LVU195
 709 005e BC44     		add	ip, ip, r7
 710              	.LVL76:
 295:Core/Src/printf.c ****       value /= base;
 711              		.loc 1 295 85 discriminator 7 view .LVU196
 712 0060 5FFA8CFC 		uxtb	ip, ip
 295:Core/Src/printf.c ****       value /= base;
 713              		.loc 1 295 18 discriminator 7 view .LVU197
 714 0064 ACF10A0C 		sub	ip, ip, #10
 715 0068 5FFA8CFC 		uxtb	ip, ip
 716 006c DBE7     		b	.L55
 717              	.LVL77:
 718              	.L59:
 295:Core/Src/printf.c ****       value /= base;
 719              		.loc 1 295 85 view .LVU198
 720 006e 6127     		movs	r7, #97
 721 0070 F5E7     		b	.L56
 722              	.LVL78:
 723              	.L58:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 20


 295:Core/Src/printf.c ****       value /= base;
 724              		.loc 1 295 85 view .LVU199
 725              	.LBE26:
 284:Core/Src/printf.c **** 
 726              		.loc 1 284 10 view .LVU200
 727 0072 2746     		mov	r7, r4
 728              	.LVL79:
 729              	.L53:
 298:Core/Src/printf.c ****   }
 299:Core/Src/printf.c **** 
 300:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 730              		.loc 1 300 3 is_stmt 1 view .LVU201
 731              		.loc 1 300 10 is_stmt 0 view .LVU202
 732 0074 0696     		str	r6, [sp, #24]
 733 0076 1A9C     		ldr	r4, [sp, #104]
 734 0078 0594     		str	r4, [sp, #20]
 735 007a 199C     		ldr	r4, [sp, #100]
 736 007c 0494     		str	r4, [sp, #16]
 737 007e 0395     		str	r5, [sp, #12]
 738 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 739 0084 0294     		str	r4, [sp, #8]
 740 0086 0197     		str	r7, [sp, #4]
 741 0088 08AC     		add	r4, sp, #32
 742 008a 0094     		str	r4, [sp]
 743 008c FFF7FEFF 		bl	_ntoa_format
 744              	.LVL80:
 301:Core/Src/printf.c **** }
 745              		.loc 1 301 1 view .LVU203
 746 0090 11B0     		add	sp, sp, #68
 747              		.cfi_def_cfa_offset 20
 748              		@ sp needed
 749 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 750              		.loc 1 301 1 view .LVU204
 751              		.cfi_endproc
 752              	.LFE9:
 754              		.global	__aeabi_uldivmod
 755              		.section	.text._ntoa_long_long,"ax",%progbits
 756              		.align	1
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 761              	_ntoa_long_long:
 762              	.LVL81:
 763              	.LFB10:
 302:Core/Src/printf.c **** 
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** // internal itoa for 'long long' type
 305:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:Core/Src/printf.c **** {
 764              		.loc 1 307 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 36, pretend = 0, frame = 48
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		.loc 1 307 1 is_stmt 0 view .LVU206
 769 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 770              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 21


 771              		.cfi_offset 4, -36
 772              		.cfi_offset 5, -32
 773              		.cfi_offset 6, -28
 774              		.cfi_offset 7, -24
 775              		.cfi_offset 8, -20
 776              		.cfi_offset 9, -16
 777              		.cfi_offset 10, -12
 778              		.cfi_offset 11, -8
 779              		.cfi_offset 14, -4
 780 0004 95B0     		sub	sp, sp, #84
 781              		.cfi_def_cfa_offset 120
 782 0006 0990     		str	r0, [sp, #36]
 783 0008 0A91     		str	r1, [sp, #40]
 784 000a 0B92     		str	r2, [sp, #44]
 785 000c 9846     		mov	r8, r3
 786 000e DDF878B0 		ldr	fp, [sp, #120]
 787 0012 DDF87C90 		ldr	r9, [sp, #124]
 788 0016 229D     		ldr	r5, [sp, #136]
 789 0018 239F     		ldr	r7, [sp, #140]
 790 001a 269E     		ldr	r6, [sp, #152]
 308:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 791              		.loc 1 308 3 is_stmt 1 view .LVU207
 309:Core/Src/printf.c ****   size_t len = 0U;
 792              		.loc 1 309 3 view .LVU208
 793              	.LVL82:
 310:Core/Src/printf.c **** 
 311:Core/Src/printf.c ****   // no hash for 0 values
 312:Core/Src/printf.c ****   if (!value) {
 794              		.loc 1 312 3 view .LVU209
 795              		.loc 1 312 6 is_stmt 0 view .LVU210
 796 001c 5BEA0902 		orrs	r2, fp, r9
 797              	.LVL83:
 798              		.loc 1 312 6 view .LVU211
 799 0020 01D1     		bne	.L64
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 800              		.loc 1 313 5 is_stmt 1 view .LVU212
 801              		.loc 1 313 11 is_stmt 0 view .LVU213
 802 0022 26F01006 		bic	r6, r6, #16
 803              	.LVL84:
 804              	.L64:
 314:Core/Src/printf.c ****   }
 315:Core/Src/printf.c **** 
 316:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 317:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 805              		.loc 1 317 3 is_stmt 1 view .LVU214
 806              		.loc 1 317 6 is_stmt 0 view .LVU215
 807 0026 16F48064 		ands	r4, r6, #1024
 808 002a 1ED0     		beq	.L70
 809              		.loc 1 317 34 discriminator 1 view .LVU216
 810 002c 5BEA0902 		orrs	r2, fp, r9
 811 0030 2FD0     		beq	.L71
 812 0032 0024     		movs	r4, #0
 813 0034 19E0     		b	.L70
 814              	.LVL85:
 815              	.L77:
 816              	.LBB27:
 318:Core/Src/printf.c ****     do {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 22


 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 817              		.loc 1 320 18 discriminator 1 view .LVU217
 818 0036 3032     		adds	r2, r2, #48
 819              	.LVL86:
 820              		.loc 1 320 18 discriminator 1 view .LVU218
 821 0038 D3B2     		uxtb	r3, r2
 822              	.LVL87:
 823              	.L68:
 824              		.loc 1 320 14 discriminator 8 view .LVU219
 825 003a 04F1010A 		add	r10, r4, #1
 826              	.LVL88:
 827              		.loc 1 320 18 discriminator 8 view .LVU220
 828 003e 04F15002 		add	r2, r4, #80
 829 0042 0DEB0204 		add	r4, sp, r2
 830 0046 04F8203C 		strb	r3, [r4, #-32]
 321:Core/Src/printf.c ****       value /= base;
 831              		.loc 1 321 7 is_stmt 1 discriminator 8 view .LVU221
 832              		.loc 1 321 13 is_stmt 0 discriminator 8 view .LVU222
 833 004a 2A46     		mov	r2, r5
 834 004c 3B46     		mov	r3, r7
 835 004e 5846     		mov	r0, fp
 836 0050 4946     		mov	r1, r9
 837 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 838              	.LVL89:
 839              		.loc 1 321 13 discriminator 8 view .LVU223
 840              	.LBE27:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 841              		.loc 1 322 20 is_stmt 1 discriminator 8 view .LVU224
 842 0056 AB45     		cmp	fp, r5
 843 0058 79EB0709 		sbcs	r9, r9, r7
 844 005c 1BD3     		bcc	.L66
 845              		.loc 1 322 20 is_stmt 0 discriminator 1 view .LVU225
 846 005e BAF11F0F 		cmp	r10, #31
 847 0062 18D8     		bhi	.L66
 848              	.LBB28:
 320:Core/Src/printf.c ****       value /= base;
 849              		.loc 1 320 14 view .LVU226
 850 0064 5446     		mov	r4, r10
 321:Core/Src/printf.c ****       value /= base;
 851              		.loc 1 321 13 view .LVU227
 852 0066 8346     		mov	fp, r0
 853 0068 8946     		mov	r9, r1
 854              	.LVL90:
 855              	.L70:
 321:Core/Src/printf.c ****       value /= base;
 856              		.loc 1 321 13 view .LVU228
 857              	.LBE28:
 318:Core/Src/printf.c ****       const char digit = (char)(value % base);
 858              		.loc 1 318 5 is_stmt 1 view .LVU229
 859              	.LBB29:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 860              		.loc 1 319 7 view .LVU230
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 861              		.loc 1 319 39 is_stmt 0 view .LVU231
 862 006a 2A46     		mov	r2, r5
 863 006c 3B46     		mov	r3, r7
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 23


 864 006e 5846     		mov	r0, fp
 865 0070 4946     		mov	r1, r9
 866 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 867              	.LVL91:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 868              		.loc 1 319 18 view .LVU232
 869 0076 D2B2     		uxtb	r2, r2
 870              	.LVL92:
 320:Core/Src/printf.c ****       value /= base;
 871              		.loc 1 320 7 is_stmt 1 view .LVU233
 320:Core/Src/printf.c ****       value /= base;
 872              		.loc 1 320 18 is_stmt 0 view .LVU234
 873 0078 092A     		cmp	r2, #9
 874 007a DCD9     		bls	.L77
 320:Core/Src/printf.c ****       value /= base;
 875              		.loc 1 320 85 discriminator 2 view .LVU235
 876 007c 16F0200F 		tst	r6, #32
 877 0080 05D0     		beq	.L72
 320:Core/Src/printf.c ****       value /= base;
 878              		.loc 1 320 85 view .LVU236
 879 0082 4123     		movs	r3, #65
 880              	.L69:
 320:Core/Src/printf.c ****       value /= base;
 881              		.loc 1 320 85 discriminator 7 view .LVU237
 882 0084 1344     		add	r3, r3, r2
 883 0086 DBB2     		uxtb	r3, r3
 320:Core/Src/printf.c ****       value /= base;
 884              		.loc 1 320 18 discriminator 7 view .LVU238
 885 0088 0A3B     		subs	r3, r3, #10
 886 008a DBB2     		uxtb	r3, r3
 887 008c D5E7     		b	.L68
 888              	.L72:
 320:Core/Src/printf.c ****       value /= base;
 889              		.loc 1 320 85 view .LVU239
 890 008e 6123     		movs	r3, #97
 891 0090 F8E7     		b	.L69
 892              	.LVL93:
 893              	.L71:
 320:Core/Src/printf.c ****       value /= base;
 894              		.loc 1 320 85 view .LVU240
 895              	.LBE29:
 309:Core/Src/printf.c **** 
 896              		.loc 1 309 10 view .LVU241
 897 0092 4FF0000A 		mov	r10, #0
 898              	.LVL94:
 899              	.L66:
 323:Core/Src/printf.c ****   }
 324:Core/Src/printf.c **** 
 325:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 900              		.loc 1 325 3 is_stmt 1 view .LVU242
 901              		.loc 1 325 10 is_stmt 0 view .LVU243
 902 0096 0696     		str	r6, [sp, #24]
 903 0098 259B     		ldr	r3, [sp, #148]
 904 009a 0593     		str	r3, [sp, #20]
 905 009c 249B     		ldr	r3, [sp, #144]
 906 009e 0493     		str	r3, [sp, #16]
 907 00a0 0395     		str	r5, [sp, #12]
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 24


 908 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 909 00a6 0293     		str	r3, [sp, #8]
 910 00a8 CDF804A0 		str	r10, [sp, #4]
 911 00ac 0CAB     		add	r3, sp, #48
 912 00ae 0093     		str	r3, [sp]
 913 00b0 4346     		mov	r3, r8
 914 00b2 0B9A     		ldr	r2, [sp, #44]
 915 00b4 0A99     		ldr	r1, [sp, #40]
 916 00b6 0998     		ldr	r0, [sp, #36]
 917 00b8 FFF7FEFF 		bl	_ntoa_format
 918              	.LVL95:
 326:Core/Src/printf.c **** }
 919              		.loc 1 326 1 view .LVU244
 920 00bc 15B0     		add	sp, sp, #84
 921              		.cfi_def_cfa_offset 36
 922              		@ sp needed
 923 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 924              		.loc 1 326 1 view .LVU245
 925              		.cfi_endproc
 926              	.LFE10:
 928              		.global	__aeabi_dcmpeq
 929              		.global	__aeabi_dcmpgt
 930              		.global	__aeabi_dcmplt
 931              		.global	__aeabi_i2d
 932              		.global	__aeabi_dmul
 933              		.global	__aeabi_dadd
 934              		.global	__aeabi_dsub
 935              		.global	__aeabi_d2iz
 936              		.global	__aeabi_ddiv
 937              		.global	__aeabi_dcmpge
 938              		.section	.text._etoa,"ax",%progbits
 939              		.align	1
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	_etoa:
 945              	.LVL96:
 946              	.LFB12:
 327:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:Core/Src/printf.c **** 
 329:Core/Src/printf.c **** 
 330:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:Core/Src/printf.c **** 
 332:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:Core/Src/printf.c **** #endif
 336:Core/Src/printf.c **** 
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 339:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:Core/Src/printf.c **** {
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:Core/Src/printf.c ****   size_t len  = 0U;
 343:Core/Src/printf.c ****   double diff = 0.0;
 344:Core/Src/printf.c **** 
 345:Core/Src/printf.c ****   // powers of 10
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 25


 346:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:Core/Src/printf.c **** 
 348:Core/Src/printf.c ****   // test for special values
 349:Core/Src/printf.c ****   if (value != value)
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:Core/Src/printf.c **** 
 356:Core/Src/printf.c ****   // test for very large values
 357:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:Core/Src/printf.c **** #else
 362:Core/Src/printf.c ****     return 0U;
 363:Core/Src/printf.c **** #endif
 364:Core/Src/printf.c ****   }
 365:Core/Src/printf.c **** 
 366:Core/Src/printf.c ****   // test for negative
 367:Core/Src/printf.c ****   bool negative = false;
 368:Core/Src/printf.c ****   if (value < 0) {
 369:Core/Src/printf.c ****     negative = true;
 370:Core/Src/printf.c ****     value = 0 - value;
 371:Core/Src/printf.c ****   }
 372:Core/Src/printf.c **** 
 373:Core/Src/printf.c ****   // set default precision, if not set explicitly
 374:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:Core/Src/printf.c ****   }
 377:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:Core/Src/printf.c ****     buf[len++] = '0';
 380:Core/Src/printf.c ****     prec--;
 381:Core/Src/printf.c ****   }
 382:Core/Src/printf.c **** 
 383:Core/Src/printf.c ****   int whole = (int)value;
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:Core/Src/printf.c ****   diff = tmp - frac;
 387:Core/Src/printf.c **** 
 388:Core/Src/printf.c ****   if (diff > 0.5) {
 389:Core/Src/printf.c ****     ++frac;
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 392:Core/Src/printf.c ****       frac = 0;
 393:Core/Src/printf.c ****       ++whole;
 394:Core/Src/printf.c ****     }
 395:Core/Src/printf.c ****   }
 396:Core/Src/printf.c ****   else if (diff < 0.5) {
 397:Core/Src/printf.c ****   }
 398:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:Core/Src/printf.c ****     ++frac;
 401:Core/Src/printf.c ****   }
 402:Core/Src/printf.c **** 
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 26


 403:Core/Src/printf.c ****   if (prec == 0U) {
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 407:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:Core/Src/printf.c ****       ++whole;
 409:Core/Src/printf.c ****     }
 410:Core/Src/printf.c ****   }
 411:Core/Src/printf.c ****   else {
 412:Core/Src/printf.c ****     unsigned int count = prec;
 413:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 414:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:Core/Src/printf.c ****       --count;
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 418:Core/Src/printf.c ****         break;
 419:Core/Src/printf.c ****       }
 420:Core/Src/printf.c ****     }
 421:Core/Src/printf.c ****     // add extra 0s
 422:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:Core/Src/printf.c ****       buf[len++] = '0';
 424:Core/Src/printf.c ****     }
 425:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:Core/Src/printf.c ****       // add decimal
 427:Core/Src/printf.c ****       buf[len++] = '.';
 428:Core/Src/printf.c ****     }
 429:Core/Src/printf.c ****   }
 430:Core/Src/printf.c **** 
 431:Core/Src/printf.c ****   // do whole part, number is reversed
 432:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 435:Core/Src/printf.c ****       break;
 436:Core/Src/printf.c ****     }
 437:Core/Src/printf.c ****   }
 438:Core/Src/printf.c **** 
 439:Core/Src/printf.c ****   // pad leading zeros
 440:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:Core/Src/printf.c ****       width--;
 443:Core/Src/printf.c ****     }
 444:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:Core/Src/printf.c ****       buf[len++] = '0';
 446:Core/Src/printf.c ****     }
 447:Core/Src/printf.c ****   }
 448:Core/Src/printf.c **** 
 449:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:Core/Src/printf.c ****     if (negative) {
 451:Core/Src/printf.c ****       buf[len++] = '-';
 452:Core/Src/printf.c ****     }
 453:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:Core/Src/printf.c ****     }
 456:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 458:Core/Src/printf.c ****     }
 459:Core/Src/printf.c ****   }
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 27


 460:Core/Src/printf.c **** 
 461:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:Core/Src/printf.c **** }
 463:Core/Src/printf.c **** 
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:Core/Src/printf.c **** {
 947              		.loc 1 468 1 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ args = 12, pretend = 0, frame = 48
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		.loc 1 468 1 is_stmt 0 view .LVU247
 952 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 953              		.cfi_def_cfa_offset 36
 954              		.cfi_offset 4, -36
 955              		.cfi_offset 5, -32
 956              		.cfi_offset 6, -28
 957              		.cfi_offset 7, -24
 958              		.cfi_offset 8, -20
 959              		.cfi_offset 9, -16
 960              		.cfi_offset 10, -12
 961              		.cfi_offset 11, -8
 962              		.cfi_offset 14, -4
 963 0004 2DED028B 		vpush.64	{d8}
 964              		.cfi_def_cfa_offset 44
 965              		.cfi_offset 80, -44
 966              		.cfi_offset 81, -40
 967 0008 93B0     		sub	sp, sp, #76
 968              		.cfi_def_cfa_offset 120
 969 000a 8246     		mov	r10, r0
 970 000c 0C46     		mov	r4, r1
 971 000e 9346     		mov	fp, r2
 972 0010 1D46     		mov	r5, r3
 973 0012 57EC106B 		vmov	r6, r7, d0
 974 0016 8DED080B 		vstr.64	d0, [sp, #32]
 469:Core/Src/printf.c ****   // check for NaN and special values
 470:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 975              		.loc 1 470 3 is_stmt 1 view .LVU248
 976              		.loc 1 470 6 is_stmt 0 view .LVU249
 977 001a 3246     		mov	r2, r6
 978              	.LVL97:
 979              		.loc 1 470 6 view .LVU250
 980 001c 3B46     		mov	r3, r7
 981              	.LVL98:
 982              		.loc 1 470 6 view .LVU251
 983 001e 3046     		mov	r0, r6
 984              	.LVL99:
 985              		.loc 1 470 6 view .LVU252
 986 0020 3946     		mov	r1, r7
 987              	.LVL100:
 988              		.loc 1 470 6 view .LVU253
 989 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 990              	.LVL101:
 991              		.loc 1 470 6 view .LVU254
 992 0026 0028     		cmp	r0, #0
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 28


 993 0028 00F00981 		beq	.L79
 994              		.loc 1 470 24 discriminator 1 view .LVU255
 995 002c 4FF0FF32 		mov	r2, #-1
 996 0030 B14B     		ldr	r3, .L120+72
 997 0032 3046     		mov	r0, r6
 998 0034 3946     		mov	r1, r7
 999 0036 FFF7FEFF 		bl	__aeabi_dcmpgt
 1000              	.LVL102:
 1001 003a 0028     		cmp	r0, #0
 1002 003c 40F0FF80 		bne	.L79
 1003              		.loc 1 470 45 discriminator 2 view .LVU256
 1004 0040 4FF0FF32 		mov	r2, #-1
 1005 0044 6FF48013 		mvn	r3, #1048576
 1006 0048 3046     		mov	r0, r6
 1007 004a 3946     		mov	r1, r7
 1008 004c FFF7FEFF 		bl	__aeabi_dcmplt
 1009              	.LVL103:
 1010 0050 0028     		cmp	r0, #0
 1011 0052 40F0F480 		bne	.L79
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:Core/Src/printf.c ****   }
 473:Core/Src/printf.c **** 
 474:Core/Src/printf.c ****   // determine the sign
 475:Core/Src/printf.c ****   const bool negative = value < 0;
 1012              		.loc 1 475 3 is_stmt 1 view .LVU257
 1013              	.LVL104:
 476:Core/Src/printf.c ****   if (negative) {
 1014              		.loc 1 476 3 view .LVU258
 1015              		.loc 1 476 6 is_stmt 0 view .LVU259
 1016 0056 0022     		movs	r2, #0
 1017 0058 0023     		movs	r3, #0
 1018 005a DDE90867 		ldrd	r6, [sp, #32]
 1019              		.loc 1 476 6 view .LVU260
 1020 005e 3046     		mov	r0, r6
 1021 0060 3946     		mov	r1, r7
 1022 0062 FFF7FEFF 		bl	__aeabi_dcmplt
 1023              	.LVL105:
 1024 0066 0028     		cmp	r0, #0
 1025 0068 40F0FC80 		bne	.L118
 1026 006c 9DED087B 		vldr.64	d7, [sp, #32]
 1027 0070 8DED067B 		vstr.64	d7, [sp, #24]
 1028              	.LVL106:
 1029              	.L83:
 477:Core/Src/printf.c ****     value = -value;
 478:Core/Src/printf.c ****   }
 479:Core/Src/printf.c **** 
 480:Core/Src/printf.c ****   // default precision
 481:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1030              		.loc 1 481 3 is_stmt 1 view .LVU261
 1031              		.loc 1 481 6 is_stmt 0 view .LVU262
 1032 0074 209B     		ldr	r3, [sp, #128]
 1033 0076 13F48063 		ands	r3, r3, #1024
 1034 007a 1193     		str	r3, [sp, #68]
 1035 007c 01D1     		bne	.L85
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1036              		.loc 1 482 10 view .LVU263
 1037 007e 0623     		movs	r3, #6
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 29


 1038 0080 1E93     		str	r3, [sp, #120]
 1039              	.LVL107:
 1040              	.L85:
 483:Core/Src/printf.c ****   }
 484:Core/Src/printf.c **** 
 485:Core/Src/printf.c ****   // determine the decimal exponent
 486:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:Core/Src/printf.c ****   union {
 1041              		.loc 1 487 3 is_stmt 1 view .LVU264
 488:Core/Src/printf.c ****     uint64_t U;
 489:Core/Src/printf.c ****     double   F;
 490:Core/Src/printf.c ****   } conv;
 491:Core/Src/printf.c **** 
 492:Core/Src/printf.c ****   conv.F = value;
 1042              		.loc 1 492 3 view .LVU265
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1043              		.loc 1 493 3 view .LVU266
 1044 0082 DDE90601 		ldrd	r0, [sp, #24]
 1045 0086 0246     		mov	r2, r0
 1046              		.loc 1 493 14 is_stmt 0 view .LVU267
 1047 0088 C1F30A50 		ubfx	r0, r1, #20, #11
 1048              	.LVL108:
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1049              		.loc 1 494 3 is_stmt 1 view .LVU268
 1050              		.loc 1 494 20 is_stmt 0 view .LVU269
 1051 008c C1F31303 		ubfx	r3, r1, #0, #20
 1052              		.loc 1 494 44 view .LVU270
 1053 0090 9046     		mov	r8, r2
 1054 0092 43F07F59 		orr	r9, r3, #1069547520
 1055 0096 49F44019 		orr	r9, r9, #3145728
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1056              		.loc 1 496 3 is_stmt 1 view .LVU271
 1057              		.loc 1 496 45 is_stmt 0 view .LVU272
 1058 009a A0F2FF30 		subw	r0, r0, #1023
 1059              	.LVL109:
 1060              		.loc 1 496 45 view .LVU273
 1061 009e FFF7FEFF 		bl	__aeabi_i2d
 1062              	.LVL110:
 1063              		.loc 1 496 45 view .LVU274
 1064 00a2 83A3     		adr	r3, .L120
 1065 00a4 D3E90023 		ldrd	r2, [r3]
 1066 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1067              	.LVL111:
 1068              		.loc 1 496 38 view .LVU275
 1069 00ac 82A3     		adr	r3, .L120+8
 1070 00ae D3E90023 		ldrd	r2, [r3]
 1071 00b2 FFF7FEFF 		bl	__aeabi_dadd
 1072              	.LVL112:
 1073 00b6 0646     		mov	r6, r0
 1074              	.LVL113:
 1075              		.loc 1 496 38 view .LVU276
 1076 00b8 0F46     		mov	r7, r1
 1077              		.loc 1 496 75 view .LVU277
 1078 00ba 0022     		movs	r2, #0
 1079 00bc 8F4B     		ldr	r3, .L120+76
 1080 00be 4046     		mov	r0, r8
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 30


 1081 00c0 4946     		mov	r1, r9
 1082 00c2 FFF7FEFF 		bl	__aeabi_dsub
 1083              	.LVL114:
 1084              		.loc 1 496 82 view .LVU278
 1085 00c6 7EA3     		adr	r3, .L120+16
 1086 00c8 D3E90023 		ldrd	r2, [r3]
 1087 00cc FFF7FEFF 		bl	__aeabi_dmul
 1088              	.LVL115:
 1089 00d0 0246     		mov	r2, r0
 1090 00d2 0B46     		mov	r3, r1
 1091              		.loc 1 496 65 view .LVU279
 1092 00d4 3046     		mov	r0, r6
 1093 00d6 3946     		mov	r1, r7
 1094 00d8 FFF7FEFF 		bl	__aeabi_dadd
 1095              	.LVL116:
 1096              		.loc 1 496 7 view .LVU280
 1097 00dc FFF7FEFF 		bl	__aeabi_d2iz
 1098              	.LVL117:
 1099 00e0 0646     		mov	r6, r0
 1100              	.LVL118:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1101              		.loc 1 498 3 is_stmt 1 view .LVU281
 1102              		.loc 1 498 23 is_stmt 0 view .LVU282
 1103 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1104              	.LVL119:
 1105              		.loc 1 498 23 view .LVU283
 1106 00e6 8046     		mov	r8, r0
 1107 00e8 8946     		mov	r9, r1
 1108 00ea 77A3     		adr	r3, .L120+24
 1109 00ec D3E90023 		ldrd	r2, [r3]
 1110 00f0 FFF7FEFF 		bl	__aeabi_dmul
 1111              	.LVL120:
 1112              		.loc 1 498 43 view .LVU284
 1113 00f4 0022     		movs	r2, #0
 1114 00f6 824B     		ldr	r3, .L120+80
 1115 00f8 FFF7FEFF 		bl	__aeabi_dadd
 1116              	.LVL121:
 1117              		.loc 1 498 8 view .LVU285
 1118 00fc FFF7FEFF 		bl	__aeabi_d2iz
 1119              	.LVL122:
 1120 0100 0746     		mov	r7, r0
 1121              	.LVL123:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1122              		.loc 1 499 3 is_stmt 1 view .LVU286
 1123              		.loc 1 499 28 is_stmt 0 view .LVU287
 1124 0102 73A3     		adr	r3, .L120+32
 1125 0104 D3E90023 		ldrd	r2, [r3]
 1126 0108 4046     		mov	r0, r8
 1127              	.LVL124:
 1128              		.loc 1 499 28 view .LVU288
 1129 010a 4946     		mov	r1, r9
 1130 010c FFF7FEFF 		bl	__aeabi_dmul
 1131              	.LVL125:
 1132 0110 8046     		mov	r8, r0
 1133 0112 8946     		mov	r9, r1
 1134              		.loc 1 499 55 view .LVU289
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 31


 1135 0114 3846     		mov	r0, r7
 1136 0116 FFF7FEFF 		bl	__aeabi_i2d
 1137              	.LVL126:
 1138 011a 6FA3     		adr	r3, .L120+40
 1139 011c D3E90023 		ldrd	r2, [r3]
 1140 0120 FFF7FEFF 		bl	__aeabi_dmul
 1141              	.LVL127:
 1142 0124 0246     		mov	r2, r0
 1143 0126 0B46     		mov	r3, r1
 1144              		.loc 1 499 16 view .LVU290
 1145 0128 4046     		mov	r0, r8
 1146 012a 4946     		mov	r1, r9
 1147 012c FFF7FEFF 		bl	__aeabi_dsub
 1148              	.LVL128:
 1149 0130 8046     		mov	r8, r0
 1150 0132 8946     		mov	r9, r1
 1151              	.LVL129:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1152              		.loc 1 500 3 is_stmt 1 view .LVU291
 1153              		.loc 1 500 16 is_stmt 0 view .LVU292
 1154 0134 0246     		mov	r2, r0
 1155 0136 0B46     		mov	r3, r1
 1156 0138 FFF7FEFF 		bl	__aeabi_dmul
 1157              	.LVL130:
 1158 013c CDE90C01 		strd	r0, [sp, #48]
 1159              	.LVL131:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1160              		.loc 1 501 3 is_stmt 1 view .LVU293
 1161              		.loc 1 501 28 is_stmt 0 view .LVU294
 1162 0140 07F2FF37 		addw	r7, r7, #1023
 1163              	.LVL132:
 1164              		.loc 1 501 36 view .LVU295
 1165 0144 0021     		movs	r1, #0
 1166 0146 0022     		movs	r2, #0
 1167 0148 CDE90A12 		strd	r1, [sp, #40]
 1168 014c 3B05     		lsls	r3, r7, #20
 1169 014e 0B93     		str	r3, [sp, #44]
 1170 0150 0023     		movs	r3, #0
 1171 0152 0A93     		str	r3, [sp, #40]
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1172              		.loc 1 503 3 is_stmt 1 view .LVU296
 1173              		.loc 1 503 19 is_stmt 0 view .LVU297
 1174 0154 4246     		mov	r2, r8
 1175 0156 4B46     		mov	r3, r9
 1176 0158 4046     		mov	r0, r8
 1177              	.LVL133:
 1178              		.loc 1 503 19 view .LVU298
 1179 015a 4946     		mov	r1, r9
 1180 015c FFF7FEFF 		bl	__aeabi_dadd
 1181              	.LVL134:
 1182 0160 CDE90E01 		strd	r0, [sp, #56]
 1183              		.loc 1 503 28 view .LVU299
 1184 0164 4246     		mov	r2, r8
 1185 0166 4B46     		mov	r3, r9
 1186 0168 0020     		movs	r0, #0
 1187 016a 4FF08041 		mov	r1, #1073741824
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 32


 1188 016e FFF7FEFF 		bl	__aeabi_dsub
 1189              	.LVL135:
 1190 0172 8046     		mov	r8, r0
 1191              	.LVL136:
 1192              		.loc 1 503 28 view .LVU300
 1193 0174 8946     		mov	r9, r1
 1194              		.loc 1 503 60 view .LVU301
 1195 0176 0022     		movs	r2, #0
 1196 0178 624B     		ldr	r3, .L120+84
 1197 017a DDE90C01 		ldrd	r0, [sp, #48]
 1198 017e FFF7FEFF 		bl	__aeabi_ddiv
 1199              	.LVL137:
 1200              		.loc 1 503 55 view .LVU302
 1201 0182 0022     		movs	r2, #0
 1202 0184 604B     		ldr	r3, .L120+88
 1203 0186 FFF7FEFF 		bl	__aeabi_dadd
 1204              	.LVL138:
 1205 018a 0246     		mov	r2, r0
 1206 018c 0B46     		mov	r3, r1
 1207              		.loc 1 503 49 view .LVU303
 1208 018e DDE90C01 		ldrd	r0, [sp, #48]
 1209 0192 FFF7FEFF 		bl	__aeabi_ddiv
 1210              	.LVL139:
 1211              		.loc 1 503 43 view .LVU304
 1212 0196 0022     		movs	r2, #0
 1213 0198 5C4B     		ldr	r3, .L120+92
 1214 019a FFF7FEFF 		bl	__aeabi_dadd
 1215              	.LVL140:
 1216 019e 0246     		mov	r2, r0
 1217 01a0 0B46     		mov	r3, r1
 1218              		.loc 1 503 38 view .LVU305
 1219 01a2 DDE90C01 		ldrd	r0, [sp, #48]
 1220 01a6 FFF7FEFF 		bl	__aeabi_ddiv
 1221              	.LVL141:
 1222 01aa 0246     		mov	r2, r0
 1223 01ac 0B46     		mov	r3, r1
 1224              		.loc 1 503 32 view .LVU306
 1225 01ae 4046     		mov	r0, r8
 1226 01b0 4946     		mov	r1, r9
 1227 01b2 FFF7FEFF 		bl	__aeabi_dadd
 1228              	.LVL142:
 1229 01b6 0246     		mov	r2, r0
 1230 01b8 0B46     		mov	r3, r1
 1231              		.loc 1 503 23 view .LVU307
 1232 01ba DDE90E01 		ldrd	r0, [sp, #56]
 1233 01be FFF7FEFF 		bl	__aeabi_ddiv
 1234              	.LVL143:
 1235              		.loc 1 503 15 view .LVU308
 1236 01c2 0022     		movs	r2, #0
 1237 01c4 524B     		ldr	r3, .L120+96
 1238 01c6 FFF7FEFF 		bl	__aeabi_dadd
 1239              	.LVL144:
 1240              		.loc 1 503 10 view .LVU309
 1241 01ca DDE90A23 		ldrd	r2, [sp, #40]
 1242 01ce FFF7FEFF 		bl	__aeabi_dmul
 1243              	.LVL145:
 1244 01d2 8046     		mov	r8, r0
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 33


 1245 01d4 8946     		mov	r9, r1
 1246 01d6 49EC188B 		vmov	d8, r8, r9	@ int
 1247              	.LVL146:
 504:Core/Src/printf.c ****   // correct for rounding errors
 505:Core/Src/printf.c ****   if (value < conv.F) {
 1248              		.loc 1 505 3 is_stmt 1 view .LVU310
 1249              		.loc 1 505 6 is_stmt 0 view .LVU311
 1250 01da DDE90623 		ldrd	r2, [sp, #24]
 1251 01de FFF7FEFF 		bl	__aeabi_dcmpgt
 1252              	.LVL147:
 1253 01e2 40B1     		cbz	r0, .L86
 506:Core/Src/printf.c ****     expval--;
 1254              		.loc 1 506 5 is_stmt 1 view .LVU312
 1255              		.loc 1 506 11 is_stmt 0 view .LVU313
 1256 01e4 013E     		subs	r6, r6, #1
 1257              	.LVL148:
 507:Core/Src/printf.c ****     conv.F /= 10;
 1258              		.loc 1 507 5 is_stmt 1 view .LVU314
 1259              		.loc 1 507 12 is_stmt 0 view .LVU315
 1260 01e6 0022     		movs	r2, #0
 1261 01e8 474B     		ldr	r3, .L120+88
 1262 01ea 4046     		mov	r0, r8
 1263 01ec 4946     		mov	r1, r9
 1264 01ee FFF7FEFF 		bl	__aeabi_ddiv
 1265              	.LVL149:
 1266 01f2 41EC180B 		vmov	d8, r0, r1	@ int
 1267              	.L86:
 508:Core/Src/printf.c ****   }
 509:Core/Src/printf.c **** 
 510:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1268              		.loc 1 511 3 is_stmt 1 view .LVU316
 1269              		.loc 1 511 43 is_stmt 0 view .LVU317
 1270 01f6 06F16303 		add	r3, r6, #99
 1271              		.loc 1 511 68 view .LVU318
 1272 01fa C62B     		cmp	r3, #198
 1273 01fc 3BD8     		bhi	.L104
 1274              		.loc 1 511 68 view .LVU319
 1275 01fe 0427     		movs	r7, #4
 1276              	.LVL150:
 1277              	.L88:
 512:Core/Src/printf.c **** 
 513:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1278              		.loc 1 514 3 is_stmt 1 discriminator 4 view .LVU320
 1279              		.loc 1 514 6 is_stmt 0 discriminator 4 view .LVU321
 1280 0200 209B     		ldr	r3, [sp, #128]
 1281 0202 13F4006F 		tst	r3, #2048
 1282 0206 40D0     		beq	.L89
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 516:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1283              		.loc 1 516 5 is_stmt 1 view .LVU322
 1284              		.loc 1 516 8 is_stmt 0 view .LVU323
 1285 0208 35A3     		adr	r3, .L120+48
 1286 020a D3E90023 		ldrd	r2, [r3]
 1287 020e DDE90689 		ldrd	r8, [sp, #24]
 1288 0212 4046     		mov	r0, r8
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 34


 1289 0214 4946     		mov	r1, r9
 1290 0216 FFF7FEFF 		bl	__aeabi_dcmpge
 1291              	.LVL151:
 1292 021a 0028     		cmp	r0, #0
 1293 021c 3BD0     		beq	.L90
 1294              		.loc 1 516 25 discriminator 1 view .LVU324
 1295 021e 32A3     		adr	r3, .L120+56
 1296 0220 D3E90023 		ldrd	r2, [r3]
 1297 0224 4046     		mov	r0, r8
 1298 0226 4946     		mov	r1, r9
 1299 0228 FFF7FEFF 		bl	__aeabi_dcmplt
 1300              	.LVL152:
 1301 022c 0028     		cmp	r0, #0
 1302 022e 32D0     		beq	.L90
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1303              		.loc 1 517 7 is_stmt 1 view .LVU325
 1304              		.loc 1 517 10 is_stmt 0 view .LVU326
 1305 0230 1E9B     		ldr	r3, [sp, #120]
 1306 0232 B342     		cmp	r3, r6
 1307 0234 21DD     		ble	.L105
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1308              		.loc 1 518 9 is_stmt 1 view .LVU327
 1309              		.loc 1 518 37 is_stmt 0 view .LVU328
 1310 0236 9E1B     		subs	r6, r3, r6
 1311              	.LVL153:
 1312              		.loc 1 518 46 view .LVU329
 1313 0238 731E     		subs	r3, r6, #1
 1314 023a 1E93     		str	r3, [sp, #120]
 1315              	.LVL154:
 1316              		.loc 1 518 46 view .LVU330
 1317 023c 1FE0     		b	.L93
 1318              	.LVL155:
 1319              	.L79:
 471:Core/Src/printf.c ****   }
 1320              		.loc 1 471 5 is_stmt 1 view .LVU331
 471:Core/Src/printf.c ****   }
 1321              		.loc 1 471 12 is_stmt 0 view .LVU332
 1322 023e 209B     		ldr	r3, [sp, #128]
 1323 0240 0293     		str	r3, [sp, #8]
 1324 0242 1F9B     		ldr	r3, [sp, #124]
 1325 0244 0193     		str	r3, [sp, #4]
 1326 0246 1E9B     		ldr	r3, [sp, #120]
 1327 0248 0093     		str	r3, [sp]
 1328 024a 9DED080B 		vldr.64	d0, [sp, #32]
 1329 024e 2B46     		mov	r3, r5
 1330 0250 5A46     		mov	r2, fp
 1331 0252 2146     		mov	r1, r4
 1332 0254 5046     		mov	r0, r10
 1333 0256 FFF7FEFF 		bl	_ftoa
 1334              	.LVL156:
 1335              	.L82:
 519:Core/Src/printf.c ****       }
 520:Core/Src/printf.c ****       else {
 521:Core/Src/printf.c ****         prec = 0;
 522:Core/Src/printf.c ****       }
 523:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:Core/Src/printf.c ****       // no characters in exponent
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 35


 525:Core/Src/printf.c ****       minwidth = 0U;
 526:Core/Src/printf.c ****       expval   = 0;
 527:Core/Src/printf.c ****     }
 528:Core/Src/printf.c ****     else {
 529:Core/Src/printf.c ****       // we use one sigfig for the whole part
 530:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:Core/Src/printf.c ****         --prec;
 532:Core/Src/printf.c ****       }
 533:Core/Src/printf.c ****     }
 534:Core/Src/printf.c ****   }
 535:Core/Src/printf.c **** 
 536:Core/Src/printf.c ****   // will everything fit?
 537:Core/Src/printf.c ****   unsigned int fwidth = width;
 538:Core/Src/printf.c ****   if (width > minwidth) {
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:Core/Src/printf.c ****     fwidth -= minwidth;
 541:Core/Src/printf.c ****   } else {
 542:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 543:Core/Src/printf.c ****     fwidth = 0U;
 544:Core/Src/printf.c ****   }
 545:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:Core/Src/printf.c ****     fwidth = 0U;
 548:Core/Src/printf.c ****   }
 549:Core/Src/printf.c **** 
 550:Core/Src/printf.c ****   // rescale the float value
 551:Core/Src/printf.c ****   if (expval) {
 552:Core/Src/printf.c ****     value /= conv.F;
 553:Core/Src/printf.c ****   }
 554:Core/Src/printf.c **** 
 555:Core/Src/printf.c ****   // output the floating part
 556:Core/Src/printf.c ****   const size_t start_idx = idx;
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:Core/Src/printf.c **** 
 559:Core/Src/printf.c ****   // output the exponent part
 560:Core/Src/printf.c ****   if (minwidth) {
 561:Core/Src/printf.c ****     // output the exponential symbol
 562:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 563:Core/Src/printf.c ****     // output the exponent value
 564:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 566:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:Core/Src/printf.c ****     }
 569:Core/Src/printf.c ****   }
 570:Core/Src/printf.c ****   return idx;
 571:Core/Src/printf.c **** }
 1336              		.loc 1 571 1 view .LVU333
 1337 025a 13B0     		add	sp, sp, #76
 1338              		.cfi_remember_state
 1339              		.cfi_def_cfa_offset 44
 1340              		@ sp needed
 1341 025c BDEC028B 		vldm	sp!, {d8}
 1342              		.cfi_restore 80
 1343              		.cfi_restore 81
 1344              		.cfi_def_cfa_offset 36
 1345              	.LVL157:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 36


 1346              		.loc 1 571 1 view .LVU334
 1347 0260 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1348              	.LVL158:
 1349              	.L118:
 1350              		.cfi_restore_state
 477:Core/Src/printf.c ****   }
 1351              		.loc 1 477 5 is_stmt 1 view .LVU335
 477:Core/Src/printf.c ****   }
 1352              		.loc 1 477 11 is_stmt 0 view .LVU336
 1353 0264 9FED227B 		vldr.64	d7, .L120+64
 1354 0268 8DED067B 		vstr.64	d7, [sp, #24]
 1355 026c 0696     		str	r6, [sp, #24]
 1356 026e 07F10043 		add	r3, r7, #-2147483648
 1357 0272 0793     		str	r3, [sp, #28]
 1358              	.LVL159:
 477:Core/Src/printf.c ****   }
 1359              		.loc 1 477 11 view .LVU337
 1360 0274 FEE6     		b	.L83
 1361              	.LVL160:
 1362              	.L104:
 511:Core/Src/printf.c **** 
 1363              		.loc 1 511 68 view .LVU338
 1364 0276 0527     		movs	r7, #5
 1365              	.LVL161:
 511:Core/Src/printf.c **** 
 1366              		.loc 1 511 68 view .LVU339
 1367 0278 C2E7     		b	.L88
 1368              	.LVL162:
 1369              	.L105:
 521:Core/Src/printf.c ****       }
 1370              		.loc 1 521 14 view .LVU340
 1371 027a 0023     		movs	r3, #0
 1372 027c 1E93     		str	r3, [sp, #120]
 1373              	.LVL163:
 1374              	.L93:
 523:Core/Src/printf.c ****       // no characters in exponent
 1375              		.loc 1 523 7 is_stmt 1 view .LVU341
 523:Core/Src/printf.c ****       // no characters in exponent
 1376              		.loc 1 523 13 is_stmt 0 view .LVU342
 1377 027e 209B     		ldr	r3, [sp, #128]
 1378 0280 43F48063 		orr	r3, r3, #1024
 1379 0284 2093     		str	r3, [sp, #128]
 1380              	.LVL164:
 525:Core/Src/printf.c ****       expval   = 0;
 1381              		.loc 1 525 7 is_stmt 1 view .LVU343
 526:Core/Src/printf.c ****     }
 1382              		.loc 1 526 7 view .LVU344
 525:Core/Src/printf.c ****       expval   = 0;
 1383              		.loc 1 525 16 is_stmt 0 view .LVU345
 1384 0286 0027     		movs	r7, #0
 526:Core/Src/printf.c ****     }
 1385              		.loc 1 526 16 view .LVU346
 1386 0288 3E46     		mov	r6, r7
 1387              	.LVL165:
 1388              	.L89:
 537:Core/Src/printf.c ****   if (width > minwidth) {
 1389              		.loc 1 537 3 is_stmt 1 view .LVU347
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 37


 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1390              		.loc 1 538 3 view .LVU348
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1391              		.loc 1 538 6 is_stmt 0 view .LVU349
 1392 028a 1F9B     		ldr	r3, [sp, #124]
 1393 028c 9F42     		cmp	r7, r3
 1394 028e 41D2     		bcs	.L106
 540:Core/Src/printf.c ****   } else {
 1395              		.loc 1 540 5 is_stmt 1 view .LVU350
 540:Core/Src/printf.c ****   } else {
 1396              		.loc 1 540 12 is_stmt 0 view .LVU351
 1397 0290 A3EB0708 		sub	r8, r3, r7
 1398              	.LVL166:
 540:Core/Src/printf.c ****   } else {
 1399              		.loc 1 540 12 view .LVU352
 1400 0294 40E0     		b	.L94
 1401              	.LVL167:
 1402              	.L90:
 530:Core/Src/printf.c ****         --prec;
 1403              		.loc 1 530 7 is_stmt 1 view .LVU353
 530:Core/Src/printf.c ****         --prec;
 1404              		.loc 1 530 10 is_stmt 0 view .LVU354
 1405 0296 1E9B     		ldr	r3, [sp, #120]
 1406 0298 002B     		cmp	r3, #0
 1407 029a F6D0     		beq	.L89
 530:Core/Src/printf.c ****         --prec;
 1408              		.loc 1 530 22 discriminator 1 view .LVU355
 1409 029c 119B     		ldr	r3, [sp, #68]
 1410 029e 002B     		cmp	r3, #0
 1411 02a0 F3D0     		beq	.L89
 531:Core/Src/printf.c ****       }
 1412              		.loc 1 531 9 is_stmt 1 view .LVU356
 1413 02a2 1E9B     		ldr	r3, [sp, #120]
 1414 02a4 013B     		subs	r3, r3, #1
 1415 02a6 1E93     		str	r3, [sp, #120]
 1416              	.LVL168:
 531:Core/Src/printf.c ****       }
 1417              		.loc 1 531 9 is_stmt 0 view .LVU357
 1418 02a8 EFE7     		b	.L89
 1419              	.L121:
 1420 02aa 00BFAFF3 		.align	3
 1420      0080
 1421              	.L120:
 1422 02b0 FB799F50 		.word	1352628731
 1423 02b4 1344D33F 		.word	1070810131
 1424 02b8 B3C8608B 		.word	-1956591437
 1425 02bc 288AC63F 		.word	1069976104
 1426 02c0 61436F63 		.word	1668236129
 1427 02c4 A787D23F 		.word	1070761895
 1428 02c8 71A37909 		.word	158966641
 1429 02cc 4F930A40 		.word	1074434895
 1430 02d0 1655B5BB 		.word	-1145744106
 1431 02d4 B16B0240 		.word	1073900465
 1432 02d8 EF39FAFE 		.word	-17155601
 1433 02dc 422EE63F 		.word	1072049730
 1434 02e0 2D431CEB 		.word	-350469331
 1435 02e4 E2361A3F 		.word	1058682594
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 38


 1436 02e8 00000000 		.word	0
 1437 02ec 80842E41 		.word	1093567616
 1438 02f0 00000000 		.word	0
 1439 02f4 00000000 		.word	0
 1440 02f8 FFFFEF7F 		.word	2146435071
 1441 02fc 0000F83F 		.word	1073217536
 1442 0300 0000E03F 		.word	1071644672
 1443 0304 00002C40 		.word	1076625408
 1444 0308 00002440 		.word	1076101120
 1445 030c 00001840 		.word	1075314688
 1446 0310 0000F03F 		.word	1072693248
 1447              	.LVL169:
 1448              	.L106:
 543:Core/Src/printf.c ****   }
 1449              		.loc 1 543 12 view .LVU358
 1450 0314 4FF00008 		mov	r8, #0
 1451              	.LVL170:
 1452              	.L94:
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1453              		.loc 1 545 3 is_stmt 1 view .LVU359
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1454              		.loc 1 545 6 is_stmt 0 view .LVU360
 1455 0318 209B     		ldr	r3, [sp, #128]
 1456 031a 13F00209 		ands	r9, r3, #2
 1457 031e 02D0     		beq	.L95
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1458              		.loc 1 545 28 discriminator 1 view .LVU361
 1459 0320 0FB1     		cbz	r7, .L95
 547:Core/Src/printf.c ****   }
 1460              		.loc 1 547 12 view .LVU362
 1461 0322 4FF00008 		mov	r8, #0
 1462              	.LVL171:
 1463              	.L95:
 551:Core/Src/printf.c ****     value /= conv.F;
 1464              		.loc 1 551 3 is_stmt 1 view .LVU363
 551:Core/Src/printf.c ****     value /= conv.F;
 1465              		.loc 1 551 6 is_stmt 0 view .LVU364
 1466 0326 3EB1     		cbz	r6, .L96
 552:Core/Src/printf.c ****   }
 1467              		.loc 1 552 5 is_stmt 1 view .LVU365
 1468              	.LVL172:
 552:Core/Src/printf.c ****   }
 1469              		.loc 1 552 18 is_stmt 0 view .LVU366
 1470 0328 53EC182B 		vmov	r2, r3, d8
 552:Core/Src/printf.c ****   }
 1471              		.loc 1 552 11 view .LVU367
 1472 032c DDE90601 		ldrd	r0, [sp, #24]
 1473 0330 FFF7FEFF 		bl	__aeabi_ddiv
 1474              	.LVL173:
 1475 0334 CDE90601 		strd	r0, [sp, #24]
 1476              	.LVL174:
 1477              	.L96:
 556:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1478              		.loc 1 556 3 is_stmt 1 view .LVU368
 557:Core/Src/printf.c **** 
 1479              		.loc 1 557 3 view .LVU369
 557:Core/Src/printf.c **** 
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 39


 1480              		.loc 1 557 9 is_stmt 0 view .LVU370
 1481 0338 0022     		movs	r2, #0
 1482 033a 0023     		movs	r3, #0
 1483 033c DDE90801 		ldrd	r0, [sp, #32]
 1484 0340 FFF7FEFF 		bl	__aeabi_dcmplt
 1485              	.LVL175:
 1486 0344 0028     		cmp	r0, #0
 1487 0346 3BD1     		bne	.L119
 1488              	.LVL176:
 1489              	.L97:
 557:Core/Src/printf.c **** 
 1490              		.loc 1 557 9 discriminator 4 view .LVU371
 1491 0348 209B     		ldr	r3, [sp, #128]
 1492 034a 23F40063 		bic	r3, r3, #2048
 1493 034e 0293     		str	r3, [sp, #8]
 1494 0350 CDF80480 		str	r8, [sp, #4]
 1495 0354 1E9B     		ldr	r3, [sp, #120]
 1496 0356 0093     		str	r3, [sp]
 1497 0358 9DED060B 		vldr.64	d0, [sp, #24]
 1498 035c 2B46     		mov	r3, r5
 1499 035e 5A46     		mov	r2, fp
 1500 0360 2146     		mov	r1, r4
 1501 0362 5046     		mov	r0, r10
 1502 0364 FFF7FEFF 		bl	_ftoa
 1503              	.LVL177:
 560:Core/Src/printf.c ****     // output the exponential symbol
 1504              		.loc 1 560 3 is_stmt 1 discriminator 4 view .LVU372
 560:Core/Src/printf.c ****     // output the exponential symbol
 1505              		.loc 1 560 6 is_stmt 0 discriminator 4 view .LVU373
 1506 0368 002F     		cmp	r7, #0
 1507 036a 3FF476AF 		beq	.L82
 562:Core/Src/printf.c ****     // output the exponent value
 1508              		.loc 1 562 5 is_stmt 1 view .LVU374
 1509 036e 209B     		ldr	r3, [sp, #128]
 1510 0370 13F0200F 		tst	r3, #32
 1511 0374 2CD0     		beq	.L108
 1512 0376 4FF0450C 		mov	ip, #69
 1513              	.L99:
 562:Core/Src/printf.c ****     // output the exponent value
 1514              		.loc 1 562 5 is_stmt 0 discriminator 4 view .LVU375
 1515 037a 00F10108 		add	r8, r0, #1
 1516              	.LVL178:
 562:Core/Src/printf.c ****     // output the exponent value
 1517              		.loc 1 562 5 discriminator 4 view .LVU376
 1518 037e 2B46     		mov	r3, r5
 1519 0380 0246     		mov	r2, r0
 1520 0382 2146     		mov	r1, r4
 1521 0384 6046     		mov	r0, ip
 1522 0386 D047     		blx	r10
 1523              	.LVL179:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1524              		.loc 1 564 5 is_stmt 1 discriminator 4 view .LVU377
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1525              		.loc 1 564 71 is_stmt 0 discriminator 4 view .LVU378
 1526 0388 86EAE672 		eor	r2, r6, r6, asr #31
 1527 038c A2EBE672 		sub	r2, r2, r6, asr #31
 564:Core/Src/printf.c ****     // might need to right-pad spaces
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 40


 1528              		.loc 1 564 11 discriminator 4 view .LVU379
 1529 0390 0523     		movs	r3, #5
 1530 0392 0593     		str	r3, [sp, #20]
 1531 0394 013F     		subs	r7, r7, #1
 1532              	.LVL180:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1533              		.loc 1 564 11 discriminator 4 view .LVU380
 1534 0396 0497     		str	r7, [sp, #16]
 1535 0398 0023     		movs	r3, #0
 1536 039a 0393     		str	r3, [sp, #12]
 1537 039c 0A23     		movs	r3, #10
 1538 039e 0293     		str	r3, [sp, #8]
 1539 03a0 F30F     		lsrs	r3, r6, #31
 1540 03a2 0193     		str	r3, [sp, #4]
 1541 03a4 0092     		str	r2, [sp]
 1542 03a6 2B46     		mov	r3, r5
 1543 03a8 4246     		mov	r2, r8
 1544 03aa 2146     		mov	r1, r4
 1545 03ac 5046     		mov	r0, r10
 1546 03ae FFF7FEFF 		bl	_ntoa_long
 1547              	.LVL181:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1548              		.loc 1 566 5 is_stmt 1 discriminator 4 view .LVU381
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1549              		.loc 1 566 8 is_stmt 0 discriminator 4 view .LVU382
 1550 03b2 B9F1000F 		cmp	r9, #0
 1551 03b6 3FF450AF 		beq	.L82
 1552 03ba 0246     		mov	r2, r0
 1553 03bc 1F9F     		ldr	r7, [sp, #124]
 1554              	.LVL182:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1555              		.loc 1 566 8 discriminator 4 view .LVU383
 1556 03be 10E0     		b	.L100
 1557              	.LVL183:
 1558              	.L119:
 557:Core/Src/printf.c **** 
 1559              		.loc 1 557 9 discriminator 1 view .LVU384
 1560 03c0 DDE90601 		ldrd	r0, [sp, #24]
 1561 03c4 0246     		mov	r2, r0
 1562 03c6 01F10043 		add	r3, r1, #-2147483648
 1563 03ca CDE90623 		strd	r2, [sp, #24]
 1564              	.LVL184:
 557:Core/Src/printf.c **** 
 1565              		.loc 1 557 9 discriminator 1 view .LVU385
 1566 03ce BBE7     		b	.L97
 1567              	.LVL185:
 1568              	.L108:
 562:Core/Src/printf.c ****     // output the exponent value
 1569              		.loc 1 562 5 view .LVU386
 1570 03d0 4FF0650C 		mov	ip, #101
 1571 03d4 D1E7     		b	.L99
 1572              	.LVL186:
 1573              	.L101:
 567:Core/Src/printf.c ****     }
 1574              		.loc 1 567 39 is_stmt 1 discriminator 2 view .LVU387
 1575 03d6 561C     		adds	r6, r2, #1
 1576              	.LVL187:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 41


 567:Core/Src/printf.c ****     }
 1577              		.loc 1 567 39 is_stmt 0 discriminator 2 view .LVU388
 1578 03d8 2B46     		mov	r3, r5
 1579 03da 2146     		mov	r1, r4
 1580 03dc 2020     		movs	r0, #32
 1581 03de D047     		blx	r10
 1582              	.LVL188:
 1583 03e0 3246     		mov	r2, r6
 1584              	.LVL189:
 1585              	.L100:
 567:Core/Src/printf.c ****     }
 1586              		.loc 1 567 30 is_stmt 1 discriminator 1 view .LVU389
 567:Core/Src/printf.c ****     }
 1587              		.loc 1 567 18 is_stmt 0 discriminator 1 view .LVU390
 1588 03e2 A2EB0B03 		sub	r3, r2, fp
 567:Core/Src/printf.c ****     }
 1589              		.loc 1 567 30 discriminator 1 view .LVU391
 1590 03e6 BB42     		cmp	r3, r7
 1591 03e8 F5D3     		bcc	.L101
 567:Core/Src/printf.c ****     }
 1592              		.loc 1 567 30 discriminator 1 view .LVU392
 1593 03ea 1046     		mov	r0, r2
 1594 03ec 35E7     		b	.L82
 1595              		.cfi_endproc
 1596              	.LFE12:
 1598 03ee 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1599              		.align	2
 1600              	.LC0:
 1601 0000 666E692B 		.ascii	"fni+\000"
 1601      00
 1602 0005 000000   		.align	2
 1603              	.LC1:
 1604 0008 666E6900 		.ascii	"fni\000"
 1605              		.align	2
 1606              	.LC2:
 1607 000c 6E616E00 		.ascii	"nan\000"
 1608              		.align	2
 1609              	.LC3:
 1610 0010 666E692D 		.ascii	"fni-\000"
 1610      00
 1611              		.global	__aeabi_d2uiz
 1612              		.global	__aeabi_ui2d
 1613              		.global	__aeabi_dcmple
 1614              		.section	.text._ftoa,"ax",%progbits
 1615              		.align	1
 1616              		.syntax unified
 1617              		.thumb
 1618              		.thumb_func
 1620              	_ftoa:
 1621              	.LVL190:
 1622              	.LFB11:
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1623              		.loc 1 340 1 is_stmt 1 view -0
 1624              		.cfi_startproc
 1625              		@ args = 12, pretend = 0, frame = 56
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 42


 1627              		.loc 1 340 1 is_stmt 0 view .LVU394
 1628 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1629              		.cfi_def_cfa_offset 36
 1630              		.cfi_offset 4, -36
 1631              		.cfi_offset 5, -32
 1632              		.cfi_offset 6, -28
 1633              		.cfi_offset 7, -24
 1634              		.cfi_offset 8, -20
 1635              		.cfi_offset 9, -16
 1636              		.cfi_offset 10, -12
 1637              		.cfi_offset 11, -8
 1638              		.cfi_offset 14, -4
 1639 0004 2DED028B 		vpush.64	{d8}
 1640              		.cfi_def_cfa_offset 44
 1641              		.cfi_offset 80, -44
 1642              		.cfi_offset 81, -40
 1643 0008 93B0     		sub	sp, sp, #76
 1644              		.cfi_def_cfa_offset 120
 1645 000a 0590     		str	r0, [sp, #20]
 1646 000c 0891     		str	r1, [sp, #32]
 1647 000e 9246     		mov	r10, r2
 1648 0010 9B46     		mov	fp, r3
 1649 0012 59EC108B 		vmov	r8, r9, d0
 1650 0016 1E9D     		ldr	r5, [sp, #120]
 341:Core/Src/printf.c ****   size_t len  = 0U;
 1651              		.loc 1 341 3 is_stmt 1 view .LVU395
 342:Core/Src/printf.c ****   double diff = 0.0;
 1652              		.loc 1 342 3 view .LVU396
 1653              	.LVL191:
 343:Core/Src/printf.c **** 
 1654              		.loc 1 343 3 view .LVU397
 346:Core/Src/printf.c **** 
 1655              		.loc 1 346 3 view .LVU398
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1656              		.loc 1 349 3 view .LVU399
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1657              		.loc 1 349 6 is_stmt 0 view .LVU400
 1658 0018 4246     		mov	r2, r8
 1659              	.LVL192:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1660              		.loc 1 349 6 view .LVU401
 1661 001a 4B46     		mov	r3, r9
 1662              	.LVL193:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1663              		.loc 1 349 6 view .LVU402
 1664 001c 4046     		mov	r0, r8
 1665              	.LVL194:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1666              		.loc 1 349 6 view .LVU403
 1667 001e 4946     		mov	r1, r9
 1668              	.LVL195:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1669              		.loc 1 349 6 view .LVU404
 1670 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 1671              	.LVL196:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1672              		.loc 1 349 6 view .LVU405
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 43


 1673 0024 0028     		cmp	r0, #0
 1674 0026 40D0     		beq	.L195
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1675              		.loc 1 351 3 is_stmt 1 view .LVU406
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1676              		.loc 1 351 6 is_stmt 0 view .LVU407
 1677 0028 4FF0FF32 		mov	r2, #-1
 1678 002c 6FF48013 		mvn	r3, #1048576
 1679 0030 4046     		mov	r0, r8
 1680 0032 4946     		mov	r1, r9
 1681 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 1682              	.LVL197:
 1683 0038 0028     		cmp	r0, #0
 1684 003a 45D1     		bne	.L196
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1685              		.loc 1 353 3 is_stmt 1 view .LVU408
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1686              		.loc 1 353 6 is_stmt 0 view .LVU409
 1687 003c 4FF0FF32 		mov	r2, #-1
 1688 0040 B14B     		ldr	r3, .L200+16
 1689 0042 4046     		mov	r0, r8
 1690 0044 4946     		mov	r1, r9
 1691 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1692              	.LVL198:
 1693 004a 0028     		cmp	r0, #0
 1694 004c 4BD1     		bne	.L197
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1695              		.loc 1 358 3 is_stmt 1 view .LVU410
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1696              		.loc 1 358 6 is_stmt 0 view .LVU411
 1697 004e AAA3     		adr	r3, .L200
 1698 0050 D3E90023 		ldrd	r2, [r3]
 1699 0054 4046     		mov	r0, r8
 1700 0056 4946     		mov	r1, r9
 1701 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 1702              	.LVL199:
 1703 005c 0028     		cmp	r0, #0
 1704 005e 5AD1     		bne	.L132
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1705              		.loc 1 358 34 discriminator 1 view .LVU412
 1706 0060 A7A3     		adr	r3, .L200+8
 1707 0062 D3E90023 		ldrd	r2, [r3]
 1708 0066 4046     		mov	r0, r8
 1709 0068 4946     		mov	r1, r9
 1710 006a FFF7FEFF 		bl	__aeabi_dcmplt
 1711              	.LVL200:
 1712 006e 0028     		cmp	r0, #0
 1713 0070 51D1     		bne	.L132
 367:Core/Src/printf.c ****   if (value < 0) {
 1714              		.loc 1 367 3 is_stmt 1 view .LVU413
 1715              	.LVL201:
 368:Core/Src/printf.c ****     negative = true;
 1716              		.loc 1 368 3 view .LVU414
 368:Core/Src/printf.c ****     negative = true;
 1717              		.loc 1 368 6 is_stmt 0 view .LVU415
 1718 0072 0022     		movs	r2, #0
 1719 0074 0023     		movs	r3, #0
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 44


 1720 0076 4046     		mov	r0, r8
 1721 0078 4946     		mov	r1, r9
 1722 007a FFF7FEFF 		bl	__aeabi_dcmplt
 1723              	.LVL202:
 1724 007e 0028     		cmp	r0, #0
 1725 0080 57D1     		bne	.L198
 367:Core/Src/printf.c ****   if (value < 0) {
 1726              		.loc 1 367 8 view .LVU416
 1727 0082 0023     		movs	r3, #0
 1728 0084 0993     		str	r3, [sp, #36]
 1729              	.LVL203:
 1730              	.L135:
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1731              		.loc 1 374 3 is_stmt 1 view .LVU417
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1732              		.loc 1 374 6 is_stmt 0 view .LVU418
 1733 0086 209B     		ldr	r3, [sp, #128]
 1734 0088 13F4806F 		tst	r3, #1024
 1735 008c 5CD0     		beq	.L171
 1736              	.L137:
 1737              	.LVL204:
 375:Core/Src/printf.c ****   }
 1738              		.loc 1 375 10 view .LVU419
 1739 008e 0024     		movs	r4, #0
 1740              	.LVL205:
 1741              	.L139:
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1742              		.loc 1 378 42 is_stmt 1 view .LVU420
 1743 0090 1F2C     		cmp	r4, #31
 1744 0092 5BD8     		bhi	.L140
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1745              		.loc 1 378 42 is_stmt 0 discriminator 1 view .LVU421
 1746 0094 092D     		cmp	r5, #9
 1747 0096 59D9     		bls	.L140
 379:Core/Src/printf.c ****     prec--;
 1748              		.loc 1 379 5 is_stmt 1 view .LVU422
 1749              	.LVL206:
 379:Core/Src/printf.c ****     prec--;
 1750              		.loc 1 379 16 is_stmt 0 view .LVU423
 1751 0098 04F14803 		add	r3, r4, #72
 1752 009c 6B44     		add	r3, sp, r3
 1753 009e 3022     		movs	r2, #48
 1754 00a0 03F8202C 		strb	r2, [r3, #-32]
 380:Core/Src/printf.c ****   }
 1755              		.loc 1 380 5 is_stmt 1 view .LVU424
 380:Core/Src/printf.c ****   }
 1756              		.loc 1 380 9 is_stmt 0 view .LVU425
 1757 00a4 013D     		subs	r5, r5, #1
 1758              	.LVL207:
 379:Core/Src/printf.c ****     prec--;
 1759              		.loc 1 379 12 view .LVU426
 1760 00a6 0134     		adds	r4, r4, #1
 1761              	.LVL208:
 379:Core/Src/printf.c ****     prec--;
 1762              		.loc 1 379 12 view .LVU427
 1763 00a8 F2E7     		b	.L139
 1764              	.LVL209:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 45


 1765              	.L195:
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1766              		.loc 1 350 5 is_stmt 1 view .LVU428
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1767              		.loc 1 350 12 is_stmt 0 view .LVU429
 1768 00aa 209B     		ldr	r3, [sp, #128]
 1769 00ac 0393     		str	r3, [sp, #12]
 1770 00ae 1F9B     		ldr	r3, [sp, #124]
 1771 00b0 0293     		str	r3, [sp, #8]
 1772 00b2 0323     		movs	r3, #3
 1773 00b4 0193     		str	r3, [sp, #4]
 1774 00b6 954B     		ldr	r3, .L200+20
 1775 00b8 0093     		str	r3, [sp]
 1776 00ba 5B46     		mov	r3, fp
 1777 00bc 5246     		mov	r2, r10
 1778 00be 0899     		ldr	r1, [sp, #32]
 1779 00c0 0598     		ldr	r0, [sp, #20]
 1780 00c2 FFF7FEFF 		bl	_out_rev
 1781              	.LVL210:
 1782 00c6 10E1     		b	.L122
 1783              	.L196:
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1784              		.loc 1 352 5 is_stmt 1 view .LVU430
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1785              		.loc 1 352 12 is_stmt 0 view .LVU431
 1786 00c8 209B     		ldr	r3, [sp, #128]
 1787 00ca 0393     		str	r3, [sp, #12]
 1788 00cc 1F9B     		ldr	r3, [sp, #124]
 1789 00ce 0293     		str	r3, [sp, #8]
 1790 00d0 0423     		movs	r3, #4
 1791 00d2 0193     		str	r3, [sp, #4]
 1792 00d4 8E4B     		ldr	r3, .L200+24
 1793 00d6 0093     		str	r3, [sp]
 1794 00d8 5B46     		mov	r3, fp
 1795 00da 5246     		mov	r2, r10
 1796 00dc 0899     		ldr	r1, [sp, #32]
 1797 00de 0598     		ldr	r0, [sp, #20]
 1798 00e0 FFF7FEFF 		bl	_out_rev
 1799              	.LVL211:
 1800 00e4 01E1     		b	.L122
 1801              	.L197:
 354:Core/Src/printf.c **** 
 1802              		.loc 1 354 5 is_stmt 1 view .LVU432
 354:Core/Src/printf.c **** 
 1803              		.loc 1 354 12 is_stmt 0 view .LVU433
 1804 00e6 209B     		ldr	r3, [sp, #128]
 1805 00e8 13F00403 		ands	r3, r3, #4
 1806 00ec 0FD0     		beq	.L168
 1807 00ee 894A     		ldr	r2, .L200+28
 1808              	.L130:
 354:Core/Src/printf.c **** 
 1809              		.loc 1 354 12 discriminator 4 view .LVU434
 1810 00f0 7BB1     		cbz	r3, .L169
 354:Core/Src/printf.c **** 
 1811              		.loc 1 354 12 view .LVU435
 1812 00f2 0423     		movs	r3, #4
 1813              	.L131:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 46


 354:Core/Src/printf.c **** 
 1814              		.loc 1 354 12 discriminator 8 view .LVU436
 1815 00f4 2099     		ldr	r1, [sp, #128]
 1816 00f6 0391     		str	r1, [sp, #12]
 1817 00f8 1F99     		ldr	r1, [sp, #124]
 1818 00fa 0291     		str	r1, [sp, #8]
 1819 00fc 0193     		str	r3, [sp, #4]
 1820 00fe 0092     		str	r2, [sp]
 1821 0100 5B46     		mov	r3, fp
 1822 0102 5246     		mov	r2, r10
 1823 0104 0899     		ldr	r1, [sp, #32]
 1824 0106 0598     		ldr	r0, [sp, #20]
 1825 0108 FFF7FEFF 		bl	_out_rev
 1826              	.LVL212:
 1827 010c EDE0     		b	.L122
 1828              	.L168:
 354:Core/Src/printf.c **** 
 1829              		.loc 1 354 12 view .LVU437
 1830 010e 824A     		ldr	r2, .L200+32
 1831 0110 EEE7     		b	.L130
 1832              	.L169:
 1833 0112 0323     		movs	r3, #3
 1834 0114 EEE7     		b	.L131
 1835              	.L132:
 360:Core/Src/printf.c **** #else
 1836              		.loc 1 360 5 is_stmt 1 view .LVU438
 360:Core/Src/printf.c **** #else
 1837              		.loc 1 360 12 is_stmt 0 view .LVU439
 1838 0116 209B     		ldr	r3, [sp, #128]
 1839 0118 0293     		str	r3, [sp, #8]
 1840 011a 1F9B     		ldr	r3, [sp, #124]
 1841 011c 0193     		str	r3, [sp, #4]
 1842 011e 0095     		str	r5, [sp]
 1843 0120 49EC108B 		vmov	d0, r8, r9
 1844 0124 5B46     		mov	r3, fp
 1845 0126 5246     		mov	r2, r10
 1846 0128 0899     		ldr	r1, [sp, #32]
 1847 012a 0598     		ldr	r0, [sp, #20]
 1848 012c FFF7FEFF 		bl	_etoa
 1849              	.LVL213:
 1850 0130 DBE0     		b	.L122
 1851              	.LVL214:
 1852              	.L198:
 369:Core/Src/printf.c ****     value = 0 - value;
 1853              		.loc 1 369 5 is_stmt 1 view .LVU440
 370:Core/Src/printf.c ****   }
 1854              		.loc 1 370 5 view .LVU441
 370:Core/Src/printf.c ****   }
 1855              		.loc 1 370 11 is_stmt 0 view .LVU442
 1856 0132 4246     		mov	r2, r8
 1857 0134 4B46     		mov	r3, r9
 1858 0136 0020     		movs	r0, #0
 1859 0138 0021     		movs	r1, #0
 1860 013a FFF7FEFF 		bl	__aeabi_dsub
 1861              	.LVL215:
 1862 013e 8046     		mov	r8, r0
 1863              	.LVL216:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 47


 370:Core/Src/printf.c ****   }
 1864              		.loc 1 370 11 view .LVU443
 1865 0140 8946     		mov	r9, r1
 1866              	.LVL217:
 369:Core/Src/printf.c ****     value = 0 - value;
 1867              		.loc 1 369 14 view .LVU444
 1868 0142 0123     		movs	r3, #1
 1869 0144 0993     		str	r3, [sp, #36]
 1870 0146 9EE7     		b	.L135
 1871              	.LVL218:
 1872              	.L171:
 375:Core/Src/printf.c ****   }
 1873              		.loc 1 375 10 view .LVU445
 1874 0148 0625     		movs	r5, #6
 1875 014a A0E7     		b	.L137
 1876              	.LVL219:
 1877              	.L140:
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1878              		.loc 1 383 3 is_stmt 1 view .LVU446
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1879              		.loc 1 383 7 is_stmt 0 view .LVU447
 1880 014c 4046     		mov	r0, r8
 1881 014e 4946     		mov	r1, r9
 1882 0150 FFF7FEFF 		bl	__aeabi_d2iz
 1883              	.LVL220:
 1884 0154 0646     		mov	r6, r0
 1885              	.LVL221:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1886              		.loc 1 384 3 is_stmt 1 view .LVU448
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1887              		.loc 1 384 23 is_stmt 0 view .LVU449
 1888 0156 FFF7FEFF 		bl	__aeabi_i2d
 1889              	.LVL222:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1890              		.loc 1 384 23 view .LVU450
 1891 015a 0246     		mov	r2, r0
 1892 015c 0B46     		mov	r3, r1
 1893 015e 4046     		mov	r0, r8
 1894 0160 4946     		mov	r1, r9
 1895 0162 FFF7FEFF 		bl	__aeabi_dsub
 1896              	.LVL223:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1897              		.loc 1 384 39 view .LVU451
 1898 0166 6D4B     		ldr	r3, .L200+36
 1899 0168 03EBC503 		add	r3, r3, r5, lsl #3
 1900 016c 93ED008B 		vldr.64	d8, [r3]
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1901              		.loc 1 384 10 view .LVU452
 1902 0170 53EC182B 		vmov	r2, r3, d8
 1903 0174 FFF7FEFF 		bl	__aeabi_dmul
 1904              	.LVL224:
 1905 0178 0246     		mov	r2, r0
 1906 017a 0B46     		mov	r3, r1
 1907 017c CDE90623 		strd	r2, [sp, #24]
 1908              	.LVL225:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1909              		.loc 1 385 3 is_stmt 1 view .LVU453
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 48


 385:Core/Src/printf.c ****   diff = tmp - frac;
 1910              		.loc 1 385 17 is_stmt 0 view .LVU454
 1911 0180 FFF7FEFF 		bl	__aeabi_d2uiz
 1912              	.LVL226:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1913              		.loc 1 385 17 view .LVU455
 1914 0184 0746     		mov	r7, r0
 1915              	.LVL227:
 386:Core/Src/printf.c **** 
 1916              		.loc 1 386 3 is_stmt 1 view .LVU456
 386:Core/Src/printf.c **** 
 1917              		.loc 1 386 14 is_stmt 0 view .LVU457
 1918 0186 FFF7FEFF 		bl	__aeabi_ui2d
 1919              	.LVL228:
 386:Core/Src/printf.c **** 
 1920              		.loc 1 386 14 view .LVU458
 1921 018a 0246     		mov	r2, r0
 1922 018c 0B46     		mov	r3, r1
 386:Core/Src/printf.c **** 
 1923              		.loc 1 386 8 view .LVU459
 1924 018e DDE90601 		ldrd	r0, [sp, #24]
 1925 0192 FFF7FEFF 		bl	__aeabi_dsub
 1926              	.LVL229:
 1927 0196 0246     		mov	r2, r0
 1928 0198 0B46     		mov	r3, r1
 1929 019a CDE90623 		strd	r2, [sp, #24]
 1930              	.LVL230:
 388:Core/Src/printf.c ****     ++frac;
 1931              		.loc 1 388 3 is_stmt 1 view .LVU460
 388:Core/Src/printf.c ****     ++frac;
 1932              		.loc 1 388 6 is_stmt 0 view .LVU461
 1933 019e 0022     		movs	r2, #0
 1934              	.LVL231:
 388:Core/Src/printf.c ****     ++frac;
 1935              		.loc 1 388 6 view .LVU462
 1936 01a0 5F4B     		ldr	r3, .L200+40
 1937 01a2 FFF7FEFF 		bl	__aeabi_dcmpgt
 1938              	.LVL232:
 1939 01a6 50B3     		cbz	r0, .L186
 389:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 1940              		.loc 1 389 5 is_stmt 1 view .LVU463
 1941 01a8 0137     		adds	r7, r7, #1
 1942              	.LVL233:
 391:Core/Src/printf.c ****       frac = 0;
 1943              		.loc 1 391 5 view .LVU464
 391:Core/Src/printf.c ****       frac = 0;
 1944              		.loc 1 391 14 is_stmt 0 view .LVU465
 1945 01aa 3846     		mov	r0, r7
 1946 01ac FFF7FEFF 		bl	__aeabi_ui2d
 1947              	.LVL234:
 1948 01b0 0246     		mov	r2, r0
 1949 01b2 0B46     		mov	r3, r1
 391:Core/Src/printf.c ****       frac = 0;
 1950              		.loc 1 391 8 view .LVU466
 1951 01b4 51EC180B 		vmov	r0, r1, d8
 1952 01b8 FFF7FEFF 		bl	__aeabi_dcmple
 1953              	.LVL235:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 49


 1954 01bc 08B1     		cbz	r0, .L144
 392:Core/Src/printf.c ****       ++whole;
 1955              		.loc 1 392 7 is_stmt 1 view .LVU467
 1956              	.LVL236:
 393:Core/Src/printf.c ****     }
 1957              		.loc 1 393 7 view .LVU468
 1958 01be 0136     		adds	r6, r6, #1
 1959              	.LVL237:
 392:Core/Src/printf.c ****       ++whole;
 1960              		.loc 1 392 12 is_stmt 0 view .LVU469
 1961 01c0 0027     		movs	r7, #0
 1962              	.LVL238:
 1963              	.L144:
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1964              		.loc 1 403 3 is_stmt 1 view .LVU470
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1965              		.loc 1 403 6 is_stmt 0 view .LVU471
 1966 01c2 55BB     		cbnz	r5, .L147
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1967              		.loc 1 404 5 is_stmt 1 view .LVU472
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1968              		.loc 1 404 20 is_stmt 0 view .LVU473
 1969 01c4 3046     		mov	r0, r6
 1970 01c6 FFF7FEFF 		bl	__aeabi_i2d
 1971              	.LVL239:
 1972 01ca 0246     		mov	r2, r0
 1973 01cc 0B46     		mov	r3, r1
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1974              		.loc 1 404 10 view .LVU474
 1975 01ce 4046     		mov	r0, r8
 1976 01d0 4946     		mov	r1, r9
 1977 01d2 FFF7FEFF 		bl	__aeabi_dsub
 1978              	.LVL240:
 1979 01d6 8046     		mov	r8, r0
 1980              	.LVL241:
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1981              		.loc 1 404 10 view .LVU475
 1982 01d8 8946     		mov	r9, r1
 1983              	.LVL242:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1984              		.loc 1 405 5 is_stmt 1 view .LVU476
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1985              		.loc 1 405 8 is_stmt 0 view .LVU477
 1986 01da 0022     		movs	r2, #0
 1987 01dc 504B     		ldr	r3, .L200+40
 1988 01de FFF7FEFF 		bl	__aeabi_dcmplt
 1989              	.LVL243:
 1990 01e2 38B1     		cbz	r0, .L148
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1991              		.loc 1 405 24 discriminator 2 view .LVU478
 1992 01e4 0022     		movs	r2, #0
 1993 01e6 4E4B     		ldr	r3, .L200+40
 1994 01e8 4046     		mov	r0, r8
 1995 01ea 4946     		mov	r1, r9
 1996 01ec FFF7FEFF 		bl	__aeabi_dcmpgt
 1997              	.LVL244:
 1998 01f0 0028     		cmp	r0, #0
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 50


 1999 01f2 42D0     		beq	.L158
 2000              	.L148:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2001              		.loc 1 405 41 discriminator 3 view .LVU479
 2002 01f4 16F0010F 		tst	r6, #1
 2003 01f8 3FD0     		beq	.L158
 408:Core/Src/printf.c ****     }
 2004              		.loc 1 408 7 is_stmt 1 view .LVU480
 2005 01fa 0136     		adds	r6, r6, #1
 2006              	.LVL245:
 408:Core/Src/printf.c ****     }
 2007              		.loc 1 408 7 is_stmt 0 view .LVU481
 2008 01fc 3DE0     		b	.L158
 2009              	.LVL246:
 2010              	.L186:
 396:Core/Src/printf.c ****   }
 2011              		.loc 1 396 8 is_stmt 1 view .LVU482
 396:Core/Src/printf.c ****   }
 2012              		.loc 1 396 11 is_stmt 0 view .LVU483
 2013 01fe 0022     		movs	r2, #0
 2014 0200 474B     		ldr	r3, .L200+40
 2015 0202 DDE90601 		ldrd	r0, [sp, #24]
 2016 0206 FFF7FEFF 		bl	__aeabi_dcmplt
 2017              	.LVL247:
 2018 020a 0028     		cmp	r0, #0
 2019 020c D9D1     		bne	.L144
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2020              		.loc 1 398 8 is_stmt 1 view .LVU484
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2021              		.loc 1 398 11 is_stmt 0 view .LVU485
 2022 020e 17B1     		cbz	r7, .L146
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2023              		.loc 1 398 25 discriminator 1 view .LVU486
 2024 0210 17F0010F 		tst	r7, #1
 2025 0214 D5D0     		beq	.L144
 2026              	.L146:
 400:Core/Src/printf.c ****   }
 2027              		.loc 1 400 5 is_stmt 1 view .LVU487
 2028 0216 0137     		adds	r7, r7, #1
 2029              	.LVL248:
 400:Core/Src/printf.c ****   }
 2030              		.loc 1 400 5 is_stmt 0 view .LVU488
 2031 0218 D3E7     		b	.L144
 2032              	.LVL249:
 2033              	.L147:
 2034              	.LBB30:
 414:Core/Src/printf.c ****       --count;
 2035              		.loc 1 414 16 is_stmt 1 view .LVU489
 2036 021a 1F2C     		cmp	r4, #31
 2037 021c 17D8     		bhi	.L154
 415:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2038              		.loc 1 415 7 view .LVU490
 2039 021e 013D     		subs	r5, r5, #1
 2040              	.LVL250:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2041              		.loc 1 416 7 view .LVU491
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 51


 2042              		.loc 1 416 39 is_stmt 0 view .LVU492
 2043 0220 404B     		ldr	r3, .L200+44
 2044 0222 A3FB0723 		umull	r2, r3, r3, r7
 2045 0226 DB08     		lsrs	r3, r3, #3
 2046 0228 1946     		mov	r1, r3
 2047 022a 03EB8303 		add	r3, r3, r3, lsl #2
 2048 022e A7EB4303 		sub	r3, r7, r3, lsl #1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2049              		.loc 1 416 14 view .LVU493
 2050 0232 621C     		adds	r2, r4, #1
 2051              	.LVL251:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2052              		.loc 1 416 20 view .LVU494
 2053 0234 3033     		adds	r3, r3, #48
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2054              		.loc 1 416 18 view .LVU495
 2055 0236 04F14800 		add	r0, r4, #72
 2056 023a 0DEB0004 		add	r4, sp, r0
 2057 023e 04F8203C 		strb	r3, [r4, #-32]
 417:Core/Src/printf.c ****         break;
 2058              		.loc 1 417 7 is_stmt 1 view .LVU496
 2059              	.LVL252:
 417:Core/Src/printf.c ****         break;
 2060              		.loc 1 417 10 is_stmt 0 view .LVU497
 2061 0242 092F     		cmp	r7, #9
 2062 0244 02D9     		bls	.L172
 417:Core/Src/printf.c ****         break;
 2063              		.loc 1 417 18 view .LVU498
 2064 0246 0F46     		mov	r7, r1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2065              		.loc 1 416 14 view .LVU499
 2066 0248 1446     		mov	r4, r2
 2067 024a E6E7     		b	.L147
 2068              	.L172:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2069              		.loc 1 416 14 view .LVU500
 2070 024c 1446     		mov	r4, r2
 2071              	.LVL253:
 2072              	.L154:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2073              		.loc 1 422 44 is_stmt 1 view .LVU501
 2074 024e 1F2C     		cmp	r4, #31
 2075 0250 0AD8     		bhi	.L155
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2076              		.loc 1 422 53 is_stmt 0 discriminator 1 view .LVU502
 2077 0252 6B1E     		subs	r3, r5, #1
 2078              	.LVL254:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2079              		.loc 1 422 44 discriminator 1 view .LVU503
 2080 0254 45B1     		cbz	r5, .L155
 423:Core/Src/printf.c ****     }
 2081              		.loc 1 423 7 is_stmt 1 view .LVU504
 2082              	.LVL255:
 423:Core/Src/printf.c ****     }
 2083              		.loc 1 423 18 is_stmt 0 view .LVU505
 2084 0256 04F14802 		add	r2, r4, #72
 2085 025a 6A44     		add	r2, sp, r2
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 52


 2086 025c 3021     		movs	r1, #48
 2087 025e 02F8201C 		strb	r1, [r2, #-32]
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2088              		.loc 1 422 53 view .LVU506
 2089 0262 1D46     		mov	r5, r3
 423:Core/Src/printf.c ****     }
 2090              		.loc 1 423 14 view .LVU507
 2091 0264 0134     		adds	r4, r4, #1
 2092              	.LVL256:
 423:Core/Src/printf.c ****     }
 2093              		.loc 1 423 14 view .LVU508
 2094 0266 F2E7     		b	.L154
 2095              	.LVL257:
 2096              	.L155:
 425:Core/Src/printf.c ****       // add decimal
 2097              		.loc 1 425 5 is_stmt 1 view .LVU509
 425:Core/Src/printf.c ****       // add decimal
 2098              		.loc 1 425 8 is_stmt 0 view .LVU510
 2099 0268 1F2C     		cmp	r4, #31
 2100 026a 06D8     		bhi	.L158
 427:Core/Src/printf.c ****     }
 2101              		.loc 1 427 7 is_stmt 1 view .LVU511
 2102              	.LVL258:
 427:Core/Src/printf.c ****     }
 2103              		.loc 1 427 18 is_stmt 0 view .LVU512
 2104 026c 04F14803 		add	r3, r4, #72
 2105 0270 6B44     		add	r3, sp, r3
 2106 0272 2E22     		movs	r2, #46
 2107 0274 03F8202C 		strb	r2, [r3, #-32]
 427:Core/Src/printf.c ****     }
 2108              		.loc 1 427 14 view .LVU513
 2109 0278 0134     		adds	r4, r4, #1
 2110              	.LVL259:
 2111              	.L158:
 427:Core/Src/printf.c ****     }
 2112              		.loc 1 427 14 view .LVU514
 2113              	.LBE30:
 432:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2114              		.loc 1 432 14 is_stmt 1 view .LVU515
 2115 027a 1F2C     		cmp	r4, #31
 2116 027c 17D8     		bhi	.L157
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2117              		.loc 1 433 5 view .LVU516
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2118              		.loc 1 433 37 is_stmt 0 view .LVU517
 2119 027e 2A4A     		ldr	r2, .L200+48
 2120 0280 82FB0632 		smull	r3, r2, r2, r6
 2121 0284 F317     		asrs	r3, r6, #31
 2122 0286 C3EBA203 		rsb	r3, r3, r2, asr #2
 2123 028a 1A46     		mov	r2, r3
 2124 028c 03EB8303 		add	r3, r3, r3, lsl #2
 2125 0290 A6EB4303 		sub	r3, r6, r3, lsl #1
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2126              		.loc 1 433 12 view .LVU518
 2127 0294 611C     		adds	r1, r4, #1
 2128              	.LVL260:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 53


 2129              		.loc 1 433 18 view .LVU519
 2130 0296 3033     		adds	r3, r3, #48
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2131              		.loc 1 433 16 view .LVU520
 2132 0298 04F14800 		add	r0, r4, #72
 2133 029c 0DEB0004 		add	r4, sp, r0
 2134 02a0 04F8203C 		strb	r3, [r4, #-32]
 434:Core/Src/printf.c ****       break;
 2135              		.loc 1 434 5 is_stmt 1 view .LVU521
 434:Core/Src/printf.c ****       break;
 2136              		.loc 1 434 17 is_stmt 0 view .LVU522
 2137 02a4 1646     		mov	r6, r2
 2138              	.LVL261:
 434:Core/Src/printf.c ****       break;
 2139              		.loc 1 434 8 view .LVU523
 2140 02a6 0AB1     		cbz	r2, .L173
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2141              		.loc 1 433 12 view .LVU524
 2142 02a8 0C46     		mov	r4, r1
 2143 02aa E6E7     		b	.L158
 2144              	.L173:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2145              		.loc 1 433 12 view .LVU525
 2146 02ac 0C46     		mov	r4, r1
 2147              	.LVL262:
 2148              	.L157:
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2149              		.loc 1 440 3 is_stmt 1 view .LVU526
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2150              		.loc 1 440 29 is_stmt 0 view .LVU527
 2151 02ae 209B     		ldr	r3, [sp, #128]
 2152 02b0 03F00303 		and	r3, r3, #3
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2153              		.loc 1 440 6 view .LVU528
 2154 02b4 012B     		cmp	r3, #1
 2155 02b6 39D0     		beq	.L199
 2156              	.LVL263:
 2157              	.L160:
 449:Core/Src/printf.c ****     if (negative) {
 2158              		.loc 1 449 3 is_stmt 1 view .LVU529
 449:Core/Src/printf.c ****     if (negative) {
 2159              		.loc 1 449 6 is_stmt 0 view .LVU530
 2160 02b8 1F2C     		cmp	r4, #31
 2161 02ba 09D8     		bhi	.L165
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2162              		.loc 1 450 5 is_stmt 1 view .LVU531
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2163              		.loc 1 450 8 is_stmt 0 view .LVU532
 2164 02bc 099B     		ldr	r3, [sp, #36]
 2165 02be 002B     		cmp	r3, #0
 2166 02c0 51D0     		beq	.L166
 451:Core/Src/printf.c ****     }
 2167              		.loc 1 451 7 is_stmt 1 view .LVU533
 2168              	.LVL264:
 451:Core/Src/printf.c ****     }
 2169              		.loc 1 451 18 is_stmt 0 view .LVU534
 2170 02c2 04F14803 		add	r3, r4, #72
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 54


 2171 02c6 6B44     		add	r3, sp, r3
 2172 02c8 2D22     		movs	r2, #45
 2173 02ca 03F8202C 		strb	r2, [r3, #-32]
 451:Core/Src/printf.c ****     }
 2174              		.loc 1 451 14 view .LVU535
 2175 02ce 0134     		adds	r4, r4, #1
 2176              	.LVL265:
 2177              	.L165:
 461:Core/Src/printf.c **** }
 2178              		.loc 1 461 3 is_stmt 1 view .LVU536
 461:Core/Src/printf.c **** }
 2179              		.loc 1 461 10 is_stmt 0 view .LVU537
 2180 02d0 209B     		ldr	r3, [sp, #128]
 2181 02d2 0393     		str	r3, [sp, #12]
 2182 02d4 1F9B     		ldr	r3, [sp, #124]
 2183 02d6 0293     		str	r3, [sp, #8]
 2184 02d8 0194     		str	r4, [sp, #4]
 2185 02da 0AAB     		add	r3, sp, #40
 2186 02dc 0093     		str	r3, [sp]
 2187 02de 5B46     		mov	r3, fp
 2188 02e0 5246     		mov	r2, r10
 2189 02e2 0899     		ldr	r1, [sp, #32]
 2190 02e4 0598     		ldr	r0, [sp, #20]
 2191 02e6 FFF7FEFF 		bl	_out_rev
 2192              	.LVL266:
 2193              	.L122:
 462:Core/Src/printf.c **** 
 2194              		.loc 1 462 1 view .LVU538
 2195 02ea 13B0     		add	sp, sp, #76
 2196              		.cfi_remember_state
 2197              		.cfi_def_cfa_offset 44
 2198              		@ sp needed
 2199 02ec BDEC028B 		vldm	sp!, {d8}
 2200              		.cfi_restore 80
 2201              		.cfi_restore 81
 2202              		.cfi_def_cfa_offset 36
 2203 02f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2204              	.LVL267:
 2205              	.L201:
 462:Core/Src/printf.c **** 
 2206              		.loc 1 462 1 view .LVU539
 2207 02f4 AFF30080 		.align	3
 2208              	.L200:
 2209 02f8 00000000 		.word	0
 2210 02fc 65CDCD41 		.word	1104006501
 2211 0300 00000000 		.word	0
 2212 0304 65CDCDC1 		.word	-1043477147
 2213 0308 FFFFEF7F 		.word	2146435071
 2214 030c 0C000000 		.word	.LC2
 2215 0310 10000000 		.word	.LC3
 2216 0314 00000000 		.word	.LC0
 2217 0318 08000000 		.word	.LC1
 2218 031c 00000000 		.word	pow10.0
 2219 0320 0000E03F 		.word	1071644672
 2220 0324 CDCCCCCC 		.word	-858993459
 2221 0328 67666666 		.word	1717986919
 2222              	.LVL268:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 55


 2223              	.L199:
 2224              		.cfi_restore_state
 441:Core/Src/printf.c ****       width--;
 2225              		.loc 1 441 5 is_stmt 1 view .LVU540
 441:Core/Src/printf.c ****       width--;
 2226              		.loc 1 441 8 is_stmt 0 view .LVU541
 2227 032c 1F9B     		ldr	r3, [sp, #124]
 2228 032e B3B1     		cbz	r3, .L191
 441:Core/Src/printf.c ****       width--;
 2229              		.loc 1 441 15 discriminator 1 view .LVU542
 2230 0330 099B     		ldr	r3, [sp, #36]
 2231 0332 1BB9     		cbnz	r3, .L162
 441:Core/Src/printf.c ****       width--;
 2232              		.loc 1 441 28 discriminator 2 view .LVU543
 2233 0334 209B     		ldr	r3, [sp, #128]
 2234 0336 13F00C0F 		tst	r3, #12
 2235 033a 12D0     		beq	.L192
 2236              	.L162:
 442:Core/Src/printf.c ****     }
 2237              		.loc 1 442 7 is_stmt 1 view .LVU544
 442:Core/Src/printf.c ****     }
 2238              		.loc 1 442 12 is_stmt 0 view .LVU545
 2239 033c 1F9B     		ldr	r3, [sp, #124]
 2240 033e 013B     		subs	r3, r3, #1
 2241 0340 1F93     		str	r3, [sp, #124]
 2242              	.LVL269:
 442:Core/Src/printf.c ****     }
 2243              		.loc 1 442 12 view .LVU546
 2244 0342 1946     		mov	r1, r3
 2245 0344 06E0     		b	.L163
 2246              	.LVL270:
 2247              	.L164:
 445:Core/Src/printf.c ****     }
 2248              		.loc 1 445 7 is_stmt 1 view .LVU547
 445:Core/Src/printf.c ****     }
 2249              		.loc 1 445 18 is_stmt 0 view .LVU548
 2250 0346 04F14803 		add	r3, r4, #72
 2251 034a 6B44     		add	r3, sp, r3
 2252 034c 3022     		movs	r2, #48
 2253 034e 03F8202C 		strb	r2, [r3, #-32]
 445:Core/Src/printf.c ****     }
 2254              		.loc 1 445 14 view .LVU549
 2255 0352 0134     		adds	r4, r4, #1
 2256              	.LVL271:
 2257              	.L163:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2258              		.loc 1 444 26 is_stmt 1 view .LVU550
 2259 0354 8C42     		cmp	r4, r1
 2260 0356 AFD2     		bcs	.L160
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2261              		.loc 1 444 26 is_stmt 0 discriminator 1 view .LVU551
 2262 0358 1F2C     		cmp	r4, #31
 2263 035a F4D9     		bls	.L164
 2264 035c ACE7     		b	.L160
 2265              	.LVL272:
 2266              	.L191:
 444:Core/Src/printf.c ****       buf[len++] = '0';
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 56


 2267              		.loc 1 444 26 discriminator 1 view .LVU552
 2268 035e 1F99     		ldr	r1, [sp, #124]
 2269 0360 F8E7     		b	.L163
 2270              	.L192:
 2271 0362 1F99     		ldr	r1, [sp, #124]
 2272 0364 F6E7     		b	.L163
 2273              	.L166:
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2274              		.loc 1 453 10 is_stmt 1 view .LVU553
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2275              		.loc 1 453 13 is_stmt 0 view .LVU554
 2276 0366 209B     		ldr	r3, [sp, #128]
 2277 0368 13F0040F 		tst	r3, #4
 2278 036c 07D0     		beq	.L167
 454:Core/Src/printf.c ****     }
 2279              		.loc 1 454 7 is_stmt 1 view .LVU555
 2280              	.LVL273:
 454:Core/Src/printf.c ****     }
 2281              		.loc 1 454 18 is_stmt 0 view .LVU556
 2282 036e 04F14803 		add	r3, r4, #72
 2283 0372 6B44     		add	r3, sp, r3
 2284 0374 2B22     		movs	r2, #43
 2285 0376 03F8202C 		strb	r2, [r3, #-32]
 454:Core/Src/printf.c ****     }
 2286              		.loc 1 454 14 view .LVU557
 2287 037a 0134     		adds	r4, r4, #1
 2288              	.LVL274:
 454:Core/Src/printf.c ****     }
 2289              		.loc 1 454 14 view .LVU558
 2290 037c A8E7     		b	.L165
 2291              	.L167:
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2292              		.loc 1 456 10 is_stmt 1 view .LVU559
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2293              		.loc 1 456 13 is_stmt 0 view .LVU560
 2294 037e 209B     		ldr	r3, [sp, #128]
 2295 0380 13F0080F 		tst	r3, #8
 2296 0384 A4D0     		beq	.L165
 457:Core/Src/printf.c ****     }
 2297              		.loc 1 457 7 is_stmt 1 view .LVU561
 2298              	.LVL275:
 457:Core/Src/printf.c ****     }
 2299              		.loc 1 457 18 is_stmt 0 view .LVU562
 2300 0386 04F14803 		add	r3, r4, #72
 2301 038a 6B44     		add	r3, sp, r3
 2302 038c 2022     		movs	r2, #32
 2303 038e 03F8202C 		strb	r2, [r3, #-32]
 457:Core/Src/printf.c ****     }
 2304              		.loc 1 457 14 view .LVU563
 2305 0392 0134     		adds	r4, r4, #1
 2306              	.LVL276:
 457:Core/Src/printf.c ****     }
 2307              		.loc 1 457 14 view .LVU564
 2308 0394 9CE7     		b	.L165
 2309              		.cfi_endproc
 2310              	.LFE11:
 2312 0396 00BF     		.section	.text._vsnprintf,"ax",%progbits
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 57


 2313              		.align	1
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2318              	_vsnprintf:
 2319              	.LVL277:
 2320              	.LFB13:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:Core/Src/printf.c **** 
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** // internal vsnprintf
 577:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:Core/Src/printf.c **** {
 2321              		.loc 1 578 1 is_stmt 1 view -0
 2322              		.cfi_startproc
 2323              		@ args = 4, pretend = 0, frame = 24
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              		.loc 1 578 1 is_stmt 0 view .LVU566
 2326 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2327              		.cfi_def_cfa_offset 36
 2328              		.cfi_offset 4, -36
 2329              		.cfi_offset 5, -32
 2330              		.cfi_offset 6, -28
 2331              		.cfi_offset 7, -24
 2332              		.cfi_offset 8, -20
 2333              		.cfi_offset 9, -16
 2334              		.cfi_offset 10, -12
 2335              		.cfi_offset 11, -8
 2336              		.cfi_offset 14, -4
 2337 0004 91B0     		sub	sp, sp, #68
 2338              		.cfi_def_cfa_offset 104
 2339 0006 8046     		mov	r8, r0
 2340 0008 1746     		mov	r7, r2
 2341 000a 0F93     		str	r3, [sp, #60]
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2342              		.loc 1 579 3 is_stmt 1 view .LVU567
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2343              		.loc 1 580 3 view .LVU568
 2344              	.LVL278:
 581:Core/Src/printf.c **** 
 582:Core/Src/printf.c ****   if (!buffer) {
 2345              		.loc 1 582 3 view .LVU569
 2346              		.loc 1 582 6 is_stmt 0 view .LVU570
 2347 000c 8946     		mov	r9, r1
 2348 000e 0029     		cmp	r1, #0
 2349 0010 00F04083 		beq	.L304
 2350              	.L203:
 2351              	.LVL279:
 2352              	.LBB31:
 583:Core/Src/printf.c ****     // use null output function
 584:Core/Src/printf.c ****     out = _out_null;
 585:Core/Src/printf.c ****   }
 586:Core/Src/printf.c **** 
 587:Core/Src/printf.c ****   while (*format)
 588:Core/Src/printf.c ****   {
 589:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 58


 590:Core/Src/printf.c ****     if (*format != '%') {
 591:Core/Src/printf.c ****       // no
 592:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:Core/Src/printf.c ****       format++;
 594:Core/Src/printf.c ****       continue;
 595:Core/Src/printf.c ****     }
 596:Core/Src/printf.c ****     else {
 597:Core/Src/printf.c ****       // yes, evaluate it
 598:Core/Src/printf.c ****       format++;
 599:Core/Src/printf.c ****     }
 600:Core/Src/printf.c **** 
 601:Core/Src/printf.c ****     // evaluate flags
 602:Core/Src/printf.c ****     flags = 0U;
 603:Core/Src/printf.c ****     do {
 604:Core/Src/printf.c ****       switch (*format) {
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 611:Core/Src/printf.c ****       }
 612:Core/Src/printf.c ****     } while (n);
 613:Core/Src/printf.c **** 
 614:Core/Src/printf.c ****     // evaluate width field
 615:Core/Src/printf.c ****     width = 0U;
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 617:Core/Src/printf.c ****       width = _atoi(&format);
 618:Core/Src/printf.c ****     }
 619:Core/Src/printf.c ****     else if (*format == '*') {
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 621:Core/Src/printf.c ****       if (w < 0) {
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 624:Core/Src/printf.c ****       }
 625:Core/Src/printf.c ****       else {
 626:Core/Src/printf.c ****         width = (unsigned int)w;
 627:Core/Src/printf.c ****       }
 628:Core/Src/printf.c ****       format++;
 629:Core/Src/printf.c ****     }
 630:Core/Src/printf.c **** 
 631:Core/Src/printf.c ****     // evaluate precision field
 632:Core/Src/printf.c ****     precision = 0U;
 633:Core/Src/printf.c ****     if (*format == '.') {
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 635:Core/Src/printf.c ****       format++;
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 638:Core/Src/printf.c ****       }
 639:Core/Src/printf.c ****       else if (*format == '*') {
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:Core/Src/printf.c ****         format++;
 643:Core/Src/printf.c ****       }
 644:Core/Src/printf.c ****     }
 645:Core/Src/printf.c **** 
 646:Core/Src/printf.c ****     // evaluate length field
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 59


 647:Core/Src/printf.c ****     switch (*format) {
 648:Core/Src/printf.c ****       case 'l' :
 649:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 650:Core/Src/printf.c ****         format++;
 651:Core/Src/printf.c ****         if (*format == 'l') {
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:Core/Src/printf.c ****           format++;
 654:Core/Src/printf.c ****         }
 655:Core/Src/printf.c ****         break;
 656:Core/Src/printf.c ****       case 'h' :
 657:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 658:Core/Src/printf.c ****         format++;
 659:Core/Src/printf.c ****         if (*format == 'h') {
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 661:Core/Src/printf.c ****           format++;
 662:Core/Src/printf.c ****         }
 663:Core/Src/printf.c ****         break;
 664:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:Core/Src/printf.c ****       case 't' :
 666:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:Core/Src/printf.c ****         format++;
 668:Core/Src/printf.c ****         break;
 669:Core/Src/printf.c **** #endif
 670:Core/Src/printf.c ****       case 'j' :
 671:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:Core/Src/printf.c ****         format++;
 673:Core/Src/printf.c ****         break;
 674:Core/Src/printf.c ****       case 'z' :
 675:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:Core/Src/printf.c ****         format++;
 677:Core/Src/printf.c ****         break;
 678:Core/Src/printf.c ****       default :
 679:Core/Src/printf.c ****         break;
 680:Core/Src/printf.c ****     }
 681:Core/Src/printf.c **** 
 682:Core/Src/printf.c ****     // evaluate specifier
 683:Core/Src/printf.c ****     switch (*format) {
 684:Core/Src/printf.c ****       case 'd' :
 685:Core/Src/printf.c ****       case 'i' :
 686:Core/Src/printf.c ****       case 'u' :
 687:Core/Src/printf.c ****       case 'x' :
 688:Core/Src/printf.c ****       case 'X' :
 689:Core/Src/printf.c ****       case 'o' :
 690:Core/Src/printf.c ****       case 'b' : {
 691:Core/Src/printf.c ****         // set the base
 692:Core/Src/printf.c ****         unsigned int base;
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:Core/Src/printf.c ****           base = 16U;
 695:Core/Src/printf.c ****         }
 696:Core/Src/printf.c ****         else if (*format == 'o') {
 697:Core/Src/printf.c ****           base =  8U;
 698:Core/Src/printf.c ****         }
 699:Core/Src/printf.c ****         else if (*format == 'b') {
 700:Core/Src/printf.c ****           base =  2U;
 701:Core/Src/printf.c ****         }
 702:Core/Src/printf.c ****         else {
 703:Core/Src/printf.c ****           base = 10U;
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 60


 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:Core/Src/printf.c ****         }
 706:Core/Src/printf.c ****         // uppercase
 707:Core/Src/printf.c ****         if (*format == 'X') {
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:Core/Src/printf.c ****         }
 710:Core/Src/printf.c **** 
 711:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:Core/Src/printf.c ****         }
 715:Core/Src/printf.c **** 
 716:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 717:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:Core/Src/printf.c ****         }
 720:Core/Src/printf.c **** 
 721:Core/Src/printf.c ****         // convert the integer
 722:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:Core/Src/printf.c ****           // signed
 724:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:Core/Src/printf.c **** #endif
 729:Core/Src/printf.c ****           }
 730:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:Core/Src/printf.c ****           }
 734:Core/Src/printf.c ****           else {
 735:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:Core/Src/printf.c ****           }
 738:Core/Src/printf.c ****         }
 739:Core/Src/printf.c ****         else {
 740:Core/Src/printf.c ****           // unsigned
 741:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:Core/Src/printf.c **** #endif
 745:Core/Src/printf.c ****           }
 746:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:Core/Src/printf.c ****           }
 749:Core/Src/printf.c ****           else {
 750:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:Core/Src/printf.c ****           }
 753:Core/Src/printf.c ****         }
 754:Core/Src/printf.c ****         format++;
 755:Core/Src/printf.c ****         break;
 756:Core/Src/printf.c ****       }
 757:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:Core/Src/printf.c ****       case 'f' :
 759:Core/Src/printf.c ****       case 'F' :
 760:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 61


 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:Core/Src/printf.c ****         format++;
 763:Core/Src/printf.c ****         break;
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:Core/Src/printf.c ****       case 'e':
 766:Core/Src/printf.c ****       case 'E':
 767:Core/Src/printf.c ****       case 'g':
 768:Core/Src/printf.c ****       case 'G':
 769:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:Core/Src/printf.c ****         format++;
 773:Core/Src/printf.c ****         break;
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:Core/Src/printf.c ****       case 'c' : {
 777:Core/Src/printf.c ****         unsigned int l = 1U;
 778:Core/Src/printf.c ****         // pre padding
 779:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:Core/Src/printf.c ****           while (l++ < width) {
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:Core/Src/printf.c ****           }
 783:Core/Src/printf.c ****         }
 784:Core/Src/printf.c ****         // char output
 785:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:Core/Src/printf.c ****         // post padding
 787:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 788:Core/Src/printf.c ****           while (l++ < width) {
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:Core/Src/printf.c ****           }
 791:Core/Src/printf.c ****         }
 792:Core/Src/printf.c ****         format++;
 793:Core/Src/printf.c ****         break;
 2353              		.loc 1 793 9 view .LVU571
 2354 0014 0026     		movs	r6, #0
 2355              	.LVL280:
 2356              	.L284:
 2357              		.loc 1 793 9 view .LVU572
 2358              	.LBE31:
 587:Core/Src/printf.c ****   {
 2359              		.loc 1 587 10 is_stmt 1 view .LVU573
 2360 0016 0F9B     		ldr	r3, [sp, #60]
 2361 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2362 001a 0028     		cmp	r0, #0
 2363 001c 00F03D83 		beq	.L305
 590:Core/Src/printf.c ****       // no
 2364              		.loc 1 590 5 view .LVU574
 590:Core/Src/printf.c ****       // no
 2365              		.loc 1 590 8 is_stmt 0 view .LVU575
 2366 0020 2528     		cmp	r0, #37
 2367 0022 09D0     		beq	.L205
 592:Core/Src/printf.c ****       format++;
 2368              		.loc 1 592 7 is_stmt 1 discriminator 1 view .LVU576
 2369 0024 741C     		adds	r4, r6, #1
 2370              	.LVL281:
 592:Core/Src/printf.c ****       format++;
 2371              		.loc 1 592 7 is_stmt 0 discriminator 1 view .LVU577
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 62


 2372 0026 3B46     		mov	r3, r7
 2373 0028 3246     		mov	r2, r6
 2374 002a 4946     		mov	r1, r9
 2375 002c C047     		blx	r8
 2376              	.LVL282:
 593:Core/Src/printf.c ****       continue;
 2377              		.loc 1 593 7 is_stmt 1 discriminator 1 view .LVU578
 593:Core/Src/printf.c ****       continue;
 2378              		.loc 1 593 13 is_stmt 0 discriminator 1 view .LVU579
 2379 002e 0F9B     		ldr	r3, [sp, #60]
 2380 0030 0133     		adds	r3, r3, #1
 2381 0032 0F93     		str	r3, [sp, #60]
 594:Core/Src/printf.c ****     }
 2382              		.loc 1 594 7 is_stmt 1 discriminator 1 view .LVU580
 592:Core/Src/printf.c ****       format++;
 2383              		.loc 1 592 7 is_stmt 0 discriminator 1 view .LVU581
 2384 0034 2646     		mov	r6, r4
 594:Core/Src/printf.c ****     }
 2385              		.loc 1 594 7 discriminator 1 view .LVU582
 2386 0036 EEE7     		b	.L284
 2387              	.LVL283:
 2388              	.L205:
 598:Core/Src/printf.c ****     }
 2389              		.loc 1 598 7 is_stmt 1 view .LVU583
 598:Core/Src/printf.c ****     }
 2390              		.loc 1 598 13 is_stmt 0 view .LVU584
 2391 0038 0133     		adds	r3, r3, #1
 2392 003a 0F93     		str	r3, [sp, #60]
 602:Core/Src/printf.c ****     do {
 2393              		.loc 1 602 5 is_stmt 1 view .LVU585
 2394              	.LVL284:
 602:Core/Src/printf.c ****     do {
 2395              		.loc 1 602 11 is_stmt 0 view .LVU586
 2396 003c 0025     		movs	r5, #0
 2397 003e 1FE0     		b	.L214
 2398              	.LVL285:
 2399              	.L208:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2400              		.loc 1 605 19 is_stmt 1 view .LVU587
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2401              		.loc 1 605 25 is_stmt 0 view .LVU588
 2402 0040 45F00105 		orr	r5, r5, #1
 2403              	.LVL286:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2404              		.loc 1 605 43 is_stmt 1 view .LVU589
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2405              		.loc 1 605 49 is_stmt 0 view .LVU590
 2406 0044 0132     		adds	r2, r2, #1
 2407 0046 0F92     		str	r2, [sp, #60]
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2408              		.loc 1 605 53 is_stmt 1 view .LVU591
 2409              	.LVL287:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2410              		.loc 1 605 61 view .LVU592
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2411              		.loc 1 605 55 is_stmt 0 view .LVU593
 2412 0048 0123     		movs	r3, #1
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 63


 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2413              		.loc 1 605 61 view .LVU594
 2414 004a 18E0     		b	.L207
 2415              	.LVL288:
 2416              	.L210:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2417              		.loc 1 606 19 is_stmt 1 view .LVU595
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2418              		.loc 1 606 25 is_stmt 0 view .LVU596
 2419 004c 45F00205 		orr	r5, r5, #2
 2420              	.LVL289:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2421              		.loc 1 606 43 is_stmt 1 view .LVU597
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2422              		.loc 1 606 49 is_stmt 0 view .LVU598
 2423 0050 0132     		adds	r2, r2, #1
 2424 0052 0F92     		str	r2, [sp, #60]
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2425              		.loc 1 606 53 is_stmt 1 view .LVU599
 2426              	.LVL290:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2427              		.loc 1 606 61 view .LVU600
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2428              		.loc 1 606 55 is_stmt 0 view .LVU601
 2429 0054 0123     		movs	r3, #1
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2430              		.loc 1 606 61 view .LVU602
 2431 0056 12E0     		b	.L207
 2432              	.LVL291:
 2433              	.L211:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2434              		.loc 1 607 19 is_stmt 1 view .LVU603
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2435              		.loc 1 607 25 is_stmt 0 view .LVU604
 2436 0058 45F00405 		orr	r5, r5, #4
 2437              	.LVL292:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2438              		.loc 1 607 43 is_stmt 1 view .LVU605
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2439              		.loc 1 607 49 is_stmt 0 view .LVU606
 2440 005c 0132     		adds	r2, r2, #1
 2441 005e 0F92     		str	r2, [sp, #60]
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2442              		.loc 1 607 53 is_stmt 1 view .LVU607
 2443              	.LVL293:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2444              		.loc 1 607 61 view .LVU608
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2445              		.loc 1 607 55 is_stmt 0 view .LVU609
 2446 0060 0123     		movs	r3, #1
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2447              		.loc 1 607 61 view .LVU610
 2448 0062 0CE0     		b	.L207
 2449              	.LVL294:
 2450              	.L213:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2451              		.loc 1 608 19 is_stmt 1 view .LVU611
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 64


 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2452              		.loc 1 608 25 is_stmt 0 view .LVU612
 2453 0064 45F00805 		orr	r5, r5, #8
 2454              	.LVL295:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2455              		.loc 1 608 43 is_stmt 1 view .LVU613
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2456              		.loc 1 608 49 is_stmt 0 view .LVU614
 2457 0068 0132     		adds	r2, r2, #1
 2458 006a 0F92     		str	r2, [sp, #60]
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2459              		.loc 1 608 53 is_stmt 1 view .LVU615
 2460              	.LVL296:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2461              		.loc 1 608 61 view .LVU616
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2462              		.loc 1 608 55 is_stmt 0 view .LVU617
 2463 006c 0123     		movs	r3, #1
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2464              		.loc 1 608 61 view .LVU618
 2465 006e 06E0     		b	.L207
 2466              	.LVL297:
 2467              	.L212:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2468              		.loc 1 609 19 is_stmt 1 view .LVU619
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2469              		.loc 1 609 25 is_stmt 0 view .LVU620
 2470 0070 45F01005 		orr	r5, r5, #16
 2471              	.LVL298:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2472              		.loc 1 609 43 is_stmt 1 view .LVU621
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2473              		.loc 1 609 49 is_stmt 0 view .LVU622
 2474 0074 0132     		adds	r2, r2, #1
 2475 0076 0F92     		str	r2, [sp, #60]
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2476              		.loc 1 609 53 is_stmt 1 view .LVU623
 2477              	.LVL299:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2478              		.loc 1 609 61 view .LVU624
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2479              		.loc 1 609 55 is_stmt 0 view .LVU625
 2480 0078 0123     		movs	r3, #1
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2481              		.loc 1 609 61 view .LVU626
 2482 007a 00E0     		b	.L207
 2483              	.LVL300:
 2484              	.L288:
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2485              		.loc 1 604 7 view .LVU627
 2486 007c 0023     		movs	r3, #0
 2487              	.L207:
 2488              	.LVL301:
 612:Core/Src/printf.c **** 
 2489              		.loc 1 612 14 is_stmt 1 view .LVU628
 2490 007e 4BB3     		cbz	r3, .L306
 2491              	.LVL302:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 65


 2492              	.L214:
 603:Core/Src/printf.c ****       switch (*format) {
 2493              		.loc 1 603 5 view .LVU629
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2494              		.loc 1 604 7 view .LVU630
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2495              		.loc 1 604 15 is_stmt 0 view .LVU631
 2496 0080 0F9A     		ldr	r2, [sp, #60]
 2497 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2498              		.loc 1 604 7 view .LVU632
 2499 0084 203B     		subs	r3, r3, #32
 2500 0086 102B     		cmp	r3, #16
 2501 0088 F8D8     		bhi	.L288
 2502 008a 01A1     		adr	r1, .L209
 2503 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2504              		.p2align 2
 2505              	.L209:
 2506 0090 65000000 		.word	.L213+1
 2507 0094 7D000000 		.word	.L288+1
 2508 0098 7D000000 		.word	.L288+1
 2509 009c 71000000 		.word	.L212+1
 2510 00a0 7D000000 		.word	.L288+1
 2511 00a4 7D000000 		.word	.L288+1
 2512 00a8 7D000000 		.word	.L288+1
 2513 00ac 7D000000 		.word	.L288+1
 2514 00b0 7D000000 		.word	.L288+1
 2515 00b4 7D000000 		.word	.L288+1
 2516 00b8 7D000000 		.word	.L288+1
 2517 00bc 59000000 		.word	.L211+1
 2518 00c0 7D000000 		.word	.L288+1
 2519 00c4 4D000000 		.word	.L210+1
 2520 00c8 7D000000 		.word	.L288+1
 2521 00cc 7D000000 		.word	.L288+1
 2522 00d0 41000000 		.word	.L208+1
 2523              	.LVL303:
 2524              		.p2align 1
 2525              	.L306:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2526              		.loc 1 616 9 view .LVU633
 2527 00d4 0B93     		str	r3, [sp, #44]
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2528              		.loc 1 615 5 is_stmt 1 view .LVU634
 2529              	.LVL304:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2530              		.loc 1 616 5 view .LVU635
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2531              		.loc 1 616 9 is_stmt 0 view .LVU636
 2532 00d6 0F9B     		ldr	r3, [sp, #60]
 2533              	.LVL305:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2534              		.loc 1 616 9 view .LVU637
 2535 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2536              	.LVL306:
 2537              	.LBB32:
 2538              	.LBI32:
 181:Core/Src/printf.c **** {
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 66


 2539              		.loc 1 181 20 is_stmt 1 view .LVU638
 2540              	.LBB33:
 183:Core/Src/printf.c **** }
 2541              		.loc 1 183 3 view .LVU639
 183:Core/Src/printf.c **** }
 2542              		.loc 1 183 22 is_stmt 0 view .LVU640
 2543 00da A2F13003 		sub	r3, r2, #48
 2544 00de DBB2     		uxtb	r3, r3
 2545              	.LVL307:
 183:Core/Src/printf.c **** }
 2546              		.loc 1 183 22 view .LVU641
 2547              	.LBE33:
 2548              	.LBE32:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2549              		.loc 1 616 8 view .LVU642
 2550 00e0 092B     		cmp	r3, #9
 2551 00e2 18D9     		bls	.L307
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2552              		.loc 1 619 10 is_stmt 1 view .LVU643
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2553              		.loc 1 619 13 is_stmt 0 view .LVU644
 2554 00e4 2A2A     		cmp	r2, #42
 2555 00e6 1BD0     		beq	.L308
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2556              		.loc 1 615 11 view .LVU645
 2557 00e8 DDF82CB0 		ldr	fp, [sp, #44]
 2558              	.LVL308:
 2559              	.L216:
 632:Core/Src/printf.c ****     if (*format == '.') {
 2560              		.loc 1 632 5 is_stmt 1 view .LVU646
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2561              		.loc 1 633 5 view .LVU647
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2562              		.loc 1 633 9 is_stmt 0 view .LVU648
 2563 00ec 0F9B     		ldr	r3, [sp, #60]
 2564 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2565              		.loc 1 633 8 view .LVU649
 2566 00f0 2E2A     		cmp	r2, #46
 2567 00f2 25D0     		beq	.L309
 2568              	.LVL309:
 2569              	.L219:
 647:Core/Src/printf.c ****       case 'l' :
 2570              		.loc 1 647 5 is_stmt 1 view .LVU650
 647:Core/Src/printf.c ****       case 'l' :
 2571              		.loc 1 647 13 is_stmt 0 view .LVU651
 2572 00f4 0F9A     		ldr	r2, [sp, #60]
 2573 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647:Core/Src/printf.c ****       case 'l' :
 2574              		.loc 1 647 5 view .LVU652
 2575 00f8 683B     		subs	r3, r3, #104
 2576 00fa 122B     		cmp	r3, #18
 2577 00fc 5CD8     		bhi	.L221
 2578 00fe DFE803F0 		tbb	[pc, r3]
 2579              	.L223:
 2580 0102 49       		.byte	(.L227-.L223)/2
 2581 0103 5B       		.byte	(.L221-.L223)/2
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 67


 2582 0104 AA       		.byte	(.L226-.L223)/2
 2583 0105 5B       		.byte	(.L221-.L223)/2
 2584 0106 3B       		.byte	(.L225-.L223)/2
 2585 0107 5B       		.byte	(.L221-.L223)/2
 2586 0108 5B       		.byte	(.L221-.L223)/2
 2587 0109 5B       		.byte	(.L221-.L223)/2
 2588 010a 5B       		.byte	(.L221-.L223)/2
 2589 010b 5B       		.byte	(.L221-.L223)/2
 2590 010c 5B       		.byte	(.L221-.L223)/2
 2591 010d 5B       		.byte	(.L221-.L223)/2
 2592 010e 57       		.byte	(.L224-.L223)/2
 2593 010f 5B       		.byte	(.L221-.L223)/2
 2594 0110 5B       		.byte	(.L221-.L223)/2
 2595 0111 5B       		.byte	(.L221-.L223)/2
 2596 0112 5B       		.byte	(.L221-.L223)/2
 2597 0113 5B       		.byte	(.L221-.L223)/2
 2598 0114 AF       		.byte	(.L222-.L223)/2
 2599              	.LVL310:
 2600 0115 00       		.p2align 1
 2601              	.L307:
 617:Core/Src/printf.c ****     }
 2602              		.loc 1 617 7 is_stmt 1 view .LVU653
 617:Core/Src/printf.c ****     }
 2603              		.loc 1 617 15 is_stmt 0 view .LVU654
 2604 0116 0FA8     		add	r0, sp, #60
 2605 0118 FFF7FEFF 		bl	_atoi
 2606              	.LVL311:
 2607 011c 8346     		mov	fp, r0
 2608              	.LVL312:
 617:Core/Src/printf.c ****     }
 2609              		.loc 1 617 15 view .LVU655
 2610 011e E5E7     		b	.L216
 2611              	.LVL313:
 2612              	.L308:
 2613              	.LBB34:
 620:Core/Src/printf.c ****       if (w < 0) {
 2614              		.loc 1 620 7 is_stmt 1 view .LVU656
 620:Core/Src/printf.c ****       if (w < 0) {
 2615              		.loc 1 620 17 is_stmt 0 view .LVU657
 2616 0120 1A9B     		ldr	r3, [sp, #104]
 2617 0122 1A1D     		adds	r2, r3, #4
 2618 0124 1A92     		str	r2, [sp, #104]
 2619 0126 1B68     		ldr	r3, [r3]
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2620              		.loc 1 621 7 is_stmt 1 view .LVU658
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2621              		.loc 1 621 10 is_stmt 0 view .LVU659
 2622 0128 002B     		cmp	r3, #0
 2623 012a 04DB     		blt	.L310
 626:Core/Src/printf.c ****       }
 2624              		.loc 1 626 9 is_stmt 1 view .LVU660
 626:Core/Src/printf.c ****       }
 2625              		.loc 1 626 15 is_stmt 0 view .LVU661
 2626 012c 9B46     		mov	fp, r3
 2627              	.LVL314:
 2628              	.L218:
 628:Core/Src/printf.c ****     }
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 68


 2629              		.loc 1 628 7 is_stmt 1 view .LVU662
 628:Core/Src/printf.c ****     }
 2630              		.loc 1 628 13 is_stmt 0 view .LVU663
 2631 012e 0F9B     		ldr	r3, [sp, #60]
 2632 0130 0133     		adds	r3, r3, #1
 2633 0132 0F93     		str	r3, [sp, #60]
 2634 0134 DAE7     		b	.L216
 2635              	.LVL315:
 2636              	.L310:
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2637              		.loc 1 622 9 is_stmt 1 view .LVU664
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2638              		.loc 1 622 15 is_stmt 0 view .LVU665
 2639 0136 45F00205 		orr	r5, r5, #2
 2640              	.LVL316:
 623:Core/Src/printf.c ****       }
 2641              		.loc 1 623 9 is_stmt 1 view .LVU666
 623:Core/Src/printf.c ****       }
 2642              		.loc 1 623 31 is_stmt 0 view .LVU667
 2643 013a C3F1000B 		rsb	fp, r3, #0
 2644              	.LVL317:
 623:Core/Src/printf.c ****       }
 2645              		.loc 1 623 31 view .LVU668
 2646 013e F6E7     		b	.L218
 2647              	.LVL318:
 2648              	.L309:
 623:Core/Src/printf.c ****       }
 2649              		.loc 1 623 31 view .LVU669
 2650              	.LBE34:
 634:Core/Src/printf.c ****       format++;
 2651              		.loc 1 634 7 is_stmt 1 view .LVU670
 634:Core/Src/printf.c ****       format++;
 2652              		.loc 1 634 13 is_stmt 0 view .LVU671
 2653 0140 45F48065 		orr	r5, r5, #1024
 2654              	.LVL319:
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2655              		.loc 1 635 7 is_stmt 1 view .LVU672
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2656              		.loc 1 635 13 is_stmt 0 view .LVU673
 2657 0144 5A1C     		adds	r2, r3, #1
 2658 0146 0F92     		str	r2, [sp, #60]
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2659              		.loc 1 636 7 is_stmt 1 view .LVU674
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2660              		.loc 1 636 11 is_stmt 0 view .LVU675
 2661 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2662              	.LVL320:
 2663              	.LBB35:
 2664              	.LBI35:
 181:Core/Src/printf.c **** {
 2665              		.loc 1 181 20 is_stmt 1 view .LVU676
 2666              	.LBB36:
 183:Core/Src/printf.c **** }
 2667              		.loc 1 183 3 view .LVU677
 183:Core/Src/printf.c **** }
 2668              		.loc 1 183 22 is_stmt 0 view .LVU678
 2669 014a A2F13003 		sub	r3, r2, #48
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 69


 2670 014e DBB2     		uxtb	r3, r3
 2671              	.LVL321:
 183:Core/Src/printf.c **** }
 2672              		.loc 1 183 22 view .LVU679
 2673              	.LBE36:
 2674              	.LBE35:
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2675              		.loc 1 636 10 view .LVU680
 2676 0150 092B     		cmp	r3, #9
 2677 0152 0CD9     		bls	.L311
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2678              		.loc 1 639 12 is_stmt 1 view .LVU681
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2679              		.loc 1 639 15 is_stmt 0 view .LVU682
 2680 0154 2A2A     		cmp	r2, #42
 2681 0156 CDD1     		bne	.L219
 2682              	.LBB37:
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2683              		.loc 1 640 9 is_stmt 1 view .LVU683
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2684              		.loc 1 640 19 is_stmt 0 view .LVU684
 2685 0158 1A9B     		ldr	r3, [sp, #104]
 2686 015a 1A1D     		adds	r2, r3, #4
 2687 015c 1A92     		str	r2, [sp, #104]
 2688 015e 1C68     		ldr	r4, [r3]
 641:Core/Src/printf.c ****         format++;
 2689              		.loc 1 641 9 is_stmt 1 view .LVU685
 641:Core/Src/printf.c ****         format++;
 2690              		.loc 1 641 51 is_stmt 0 view .LVU686
 2691 0160 24EAE473 		bic	r3, r4, r4, asr #31
 2692 0164 0B93     		str	r3, [sp, #44]
 2693              	.LVL322:
 642:Core/Src/printf.c ****       }
 2694              		.loc 1 642 9 is_stmt 1 view .LVU687
 642:Core/Src/printf.c ****       }
 2695              		.loc 1 642 15 is_stmt 0 view .LVU688
 2696 0166 0F9B     		ldr	r3, [sp, #60]
 2697              	.LVL323:
 642:Core/Src/printf.c ****       }
 2698              		.loc 1 642 15 view .LVU689
 2699 0168 0133     		adds	r3, r3, #1
 2700 016a 0F93     		str	r3, [sp, #60]
 2701 016c C2E7     		b	.L219
 2702              	.LVL324:
 2703              	.L311:
 642:Core/Src/printf.c ****       }
 2704              		.loc 1 642 15 view .LVU690
 2705              	.LBE37:
 637:Core/Src/printf.c ****       }
 2706              		.loc 1 637 9 is_stmt 1 view .LVU691
 637:Core/Src/printf.c ****       }
 2707              		.loc 1 637 21 is_stmt 0 view .LVU692
 2708 016e 0FA8     		add	r0, sp, #60
 2709 0170 FFF7FEFF 		bl	_atoi
 2710              	.LVL325:
 2711 0174 0B90     		str	r0, [sp, #44]
 2712              	.LVL326:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 70


 637:Core/Src/printf.c ****       }
 2713              		.loc 1 637 21 view .LVU693
 2714 0176 BDE7     		b	.L219
 2715              	.LVL327:
 2716              	.L225:
 649:Core/Src/printf.c ****         format++;
 2717              		.loc 1 649 9 is_stmt 1 view .LVU694
 649:Core/Src/printf.c ****         format++;
 2718              		.loc 1 649 15 is_stmt 0 view .LVU695
 2719 0178 45F48071 		orr	r1, r5, #256
 2720              	.LVL328:
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2721              		.loc 1 650 9 is_stmt 1 view .LVU696
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2722              		.loc 1 650 15 is_stmt 0 view .LVU697
 2723 017c 531C     		adds	r3, r2, #1
 2724 017e 0F93     		str	r3, [sp, #60]
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2725              		.loc 1 651 9 is_stmt 1 view .LVU698
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2726              		.loc 1 651 13 is_stmt 0 view .LVU699
 2727 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2728              		.loc 1 651 12 view .LVU700
 2729 0182 6C2B     		cmp	r3, #108
 2730 0184 01D0     		beq	.L312
 649:Core/Src/printf.c ****         format++;
 2731              		.loc 1 649 15 view .LVU701
 2732 0186 0D46     		mov	r5, r1
 2733 0188 16E0     		b	.L221
 2734              	.L312:
 652:Core/Src/printf.c ****           format++;
 2735              		.loc 1 652 11 is_stmt 1 view .LVU702
 652:Core/Src/printf.c ****           format++;
 2736              		.loc 1 652 17 is_stmt 0 view .LVU703
 2737 018a 45F44075 		orr	r5, r5, #768
 2738              	.LVL329:
 653:Core/Src/printf.c ****         }
 2739              		.loc 1 653 11 is_stmt 1 view .LVU704
 653:Core/Src/printf.c ****         }
 2740              		.loc 1 653 17 is_stmt 0 view .LVU705
 2741 018e 0232     		adds	r2, r2, #2
 2742 0190 0F92     		str	r2, [sp, #60]
 2743 0192 11E0     		b	.L221
 2744              	.L227:
 657:Core/Src/printf.c ****         format++;
 2745              		.loc 1 657 9 is_stmt 1 view .LVU706
 657:Core/Src/printf.c ****         format++;
 2746              		.loc 1 657 15 is_stmt 0 view .LVU707
 2747 0194 45F08001 		orr	r1, r5, #128
 2748              	.LVL330:
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2749              		.loc 1 658 9 is_stmt 1 view .LVU708
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2750              		.loc 1 658 15 is_stmt 0 view .LVU709
 2751 0198 531C     		adds	r3, r2, #1
 2752 019a 0F93     		str	r3, [sp, #60]
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 71


 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2753              		.loc 1 659 9 is_stmt 1 view .LVU710
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2754              		.loc 1 659 13 is_stmt 0 view .LVU711
 2755 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2756              		.loc 1 659 12 view .LVU712
 2757 019e 682B     		cmp	r3, #104
 2758 01a0 01D0     		beq	.L313
 657:Core/Src/printf.c ****         format++;
 2759              		.loc 1 657 15 view .LVU713
 2760 01a2 0D46     		mov	r5, r1
 2761 01a4 08E0     		b	.L221
 2762              	.L313:
 660:Core/Src/printf.c ****           format++;
 2763              		.loc 1 660 11 is_stmt 1 view .LVU714
 660:Core/Src/printf.c ****           format++;
 2764              		.loc 1 660 17 is_stmt 0 view .LVU715
 2765 01a6 45F0C005 		orr	r5, r5, #192
 2766              	.LVL331:
 661:Core/Src/printf.c ****         }
 2767              		.loc 1 661 11 is_stmt 1 view .LVU716
 661:Core/Src/printf.c ****         }
 2768              		.loc 1 661 17 is_stmt 0 view .LVU717
 2769 01aa 0232     		adds	r2, r2, #2
 2770 01ac 0F92     		str	r2, [sp, #60]
 2771 01ae 03E0     		b	.L221
 2772              	.L224:
 666:Core/Src/printf.c ****         format++;
 2773              		.loc 1 666 9 is_stmt 1 view .LVU718
 666:Core/Src/printf.c ****         format++;
 2774              		.loc 1 666 15 is_stmt 0 view .LVU719
 2775 01b0 45F48075 		orr	r5, r5, #256
 2776              	.LVL332:
 667:Core/Src/printf.c ****         break;
 2777              		.loc 1 667 9 is_stmt 1 view .LVU720
 667:Core/Src/printf.c ****         break;
 2778              		.loc 1 667 15 is_stmt 0 view .LVU721
 2779 01b4 0132     		adds	r2, r2, #1
 2780 01b6 0F92     		str	r2, [sp, #60]
 668:Core/Src/printf.c **** #endif
 2781              		.loc 1 668 9 is_stmt 1 view .LVU722
 2782              	.L221:
 683:Core/Src/printf.c ****       case 'd' :
 2783              		.loc 1 683 5 view .LVU723
 683:Core/Src/printf.c ****       case 'd' :
 2784              		.loc 1 683 13 is_stmt 0 view .LVU724
 2785 01b8 0F9B     		ldr	r3, [sp, #60]
 2786 01ba 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 683:Core/Src/printf.c ****       case 'd' :
 2787              		.loc 1 683 5 view .LVU725
 2788 01bc 6728     		cmp	r0, #103
 2789 01be 54D8     		bhi	.L228
 683:Core/Src/printf.c ****       case 'd' :
 2790              		.loc 1 683 5 view .LVU726
 2791 01c0 2528     		cmp	r0, #37
 2792 01c2 67D3     		bcc	.L230
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 72


 2793 01c4 A0F12503 		sub	r3, r0, #37
 2794 01c8 422B     		cmp	r3, #66
 2795 01ca 63D8     		bhi	.L230
 2796 01cc DFE813F0 		tbh	[pc, r3, lsl #1]
 2797              	.L235:
 2798 01d0 5702     		.2byte	(.L238-.L235)/2
 2799 01d2 6200     		.2byte	(.L230-.L235)/2
 2800 01d4 6200     		.2byte	(.L230-.L235)/2
 2801 01d6 6200     		.2byte	(.L230-.L235)/2
 2802 01d8 6200     		.2byte	(.L230-.L235)/2
 2803 01da 6200     		.2byte	(.L230-.L235)/2
 2804 01dc 6200     		.2byte	(.L230-.L235)/2
 2805 01de 6200     		.2byte	(.L230-.L235)/2
 2806 01e0 6200     		.2byte	(.L230-.L235)/2
 2807 01e2 6200     		.2byte	(.L230-.L235)/2
 2808 01e4 6200     		.2byte	(.L230-.L235)/2
 2809 01e6 6200     		.2byte	(.L230-.L235)/2
 2810 01e8 6200     		.2byte	(.L230-.L235)/2
 2811 01ea 6200     		.2byte	(.L230-.L235)/2
 2812 01ec 6200     		.2byte	(.L230-.L235)/2
 2813 01ee 6200     		.2byte	(.L230-.L235)/2
 2814 01f0 6200     		.2byte	(.L230-.L235)/2
 2815 01f2 6200     		.2byte	(.L230-.L235)/2
 2816 01f4 6200     		.2byte	(.L230-.L235)/2
 2817 01f6 6200     		.2byte	(.L230-.L235)/2
 2818 01f8 6200     		.2byte	(.L230-.L235)/2
 2819 01fa 6200     		.2byte	(.L230-.L235)/2
 2820 01fc 6200     		.2byte	(.L230-.L235)/2
 2821 01fe 6200     		.2byte	(.L230-.L235)/2
 2822 0200 6200     		.2byte	(.L230-.L235)/2
 2823 0202 6200     		.2byte	(.L230-.L235)/2
 2824 0204 6200     		.2byte	(.L230-.L235)/2
 2825 0206 6200     		.2byte	(.L230-.L235)/2
 2826 0208 6200     		.2byte	(.L230-.L235)/2
 2827 020a 6200     		.2byte	(.L230-.L235)/2
 2828 020c 6200     		.2byte	(.L230-.L235)/2
 2829 020e 6200     		.2byte	(.L230-.L235)/2
 2830 0210 8001     		.2byte	(.L234-.L235)/2
 2831 0212 6201     		.2byte	(.L236-.L235)/2
 2832 0214 8001     		.2byte	(.L234-.L235)/2
 2833 0216 6200     		.2byte	(.L230-.L235)/2
 2834 0218 6200     		.2byte	(.L230-.L235)/2
 2835 021a 6200     		.2byte	(.L230-.L235)/2
 2836 021c 6200     		.2byte	(.L230-.L235)/2
 2837 021e 6200     		.2byte	(.L230-.L235)/2
 2838 0220 6200     		.2byte	(.L230-.L235)/2
 2839 0222 6200     		.2byte	(.L230-.L235)/2
 2840 0224 6200     		.2byte	(.L230-.L235)/2
 2841 0226 6200     		.2byte	(.L230-.L235)/2
 2842 0228 6200     		.2byte	(.L230-.L235)/2
 2843 022a 6200     		.2byte	(.L230-.L235)/2
 2844 022c 6200     		.2byte	(.L230-.L235)/2
 2845 022e 6200     		.2byte	(.L230-.L235)/2
 2846 0230 6200     		.2byte	(.L230-.L235)/2
 2847 0232 6200     		.2byte	(.L230-.L235)/2
 2848 0234 6200     		.2byte	(.L230-.L235)/2
 2849 0236 6C00     		.2byte	(.L231-.L235)/2
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 73


 2850 0238 6200     		.2byte	(.L230-.L235)/2
 2851 023a 6200     		.2byte	(.L230-.L235)/2
 2852 023c 6200     		.2byte	(.L230-.L235)/2
 2853 023e 6200     		.2byte	(.L230-.L235)/2
 2854 0240 6200     		.2byte	(.L230-.L235)/2
 2855 0242 6200     		.2byte	(.L230-.L235)/2
 2856 0244 6200     		.2byte	(.L230-.L235)/2
 2857 0246 6200     		.2byte	(.L230-.L235)/2
 2858 0248 6200     		.2byte	(.L230-.L235)/2
 2859 024a 6C00     		.2byte	(.L231-.L235)/2
 2860 024c A501     		.2byte	(.L237-.L235)/2
 2861 024e 6C00     		.2byte	(.L231-.L235)/2
 2862 0250 8001     		.2byte	(.L234-.L235)/2
 2863 0252 6201     		.2byte	(.L236-.L235)/2
 2864 0254 8001     		.2byte	(.L234-.L235)/2
 2865              		.p2align 1
 2866              	.L226:
 671:Core/Src/printf.c ****         format++;
 2867              		.loc 1 671 9 is_stmt 1 view .LVU727
 671:Core/Src/printf.c ****         format++;
 2868              		.loc 1 671 15 is_stmt 0 view .LVU728
 2869 0256 45F40075 		orr	r5, r5, #512
 2870              	.LVL333:
 672:Core/Src/printf.c ****         break;
 2871              		.loc 1 672 9 is_stmt 1 view .LVU729
 672:Core/Src/printf.c ****         break;
 2872              		.loc 1 672 15 is_stmt 0 view .LVU730
 2873 025a 0132     		adds	r2, r2, #1
 2874 025c 0F92     		str	r2, [sp, #60]
 673:Core/Src/printf.c ****       case 'z' :
 2875              		.loc 1 673 9 is_stmt 1 view .LVU731
 2876 025e ABE7     		b	.L221
 2877              	.L222:
 675:Core/Src/printf.c ****         format++;
 2878              		.loc 1 675 9 view .LVU732
 675:Core/Src/printf.c ****         format++;
 2879              		.loc 1 675 15 is_stmt 0 view .LVU733
 2880 0260 45F48075 		orr	r5, r5, #256
 2881              	.LVL334:
 676:Core/Src/printf.c ****         break;
 2882              		.loc 1 676 9 is_stmt 1 view .LVU734
 676:Core/Src/printf.c ****         break;
 2883              		.loc 1 676 15 is_stmt 0 view .LVU735
 2884 0264 0132     		adds	r2, r2, #1
 2885 0266 0F92     		str	r2, [sp, #60]
 677:Core/Src/printf.c ****       default :
 2886              		.loc 1 677 9 is_stmt 1 view .LVU736
 2887 0268 A6E7     		b	.L221
 2888              	.L228:
 683:Core/Src/printf.c ****       case 'd' :
 2889              		.loc 1 683 5 is_stmt 0 view .LVU737
 2890 026a 7828     		cmp	r0, #120
 2891 026c 12D8     		bhi	.L230
 2892 026e 6928     		cmp	r0, #105
 2893 0270 10D3     		bcc	.L230
 2894 0272 A0F16902 		sub	r2, r0, #105
 2895 0276 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 74


 2896 0278 0123     		movs	r3, #1
 2897 027a 9340     		lsls	r3, r3, r2
 2898 027c 49F24102 		movw	r2, #36929
 2899 0280 1342     		tst	r3, r2
 2900 0282 11D1     		bne	.L231
 2901 0284 13F0800F 		tst	r3, #128
 2902 0288 40F0DE81 		bne	.L232
 2903 028c 13F4806F 		tst	r3, #1024
 2904 0290 40F07581 		bne	.L314
 2905              	.L230:
 794:Core/Src/printf.c ****       }
 795:Core/Src/printf.c **** 
 796:Core/Src/printf.c ****       case 's' : {
 797:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 799:Core/Src/printf.c ****         // pre padding
 800:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 802:Core/Src/printf.c ****         }
 803:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 804:Core/Src/printf.c ****           while (l++ < width) {
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 806:Core/Src/printf.c ****           }
 807:Core/Src/printf.c ****         }
 808:Core/Src/printf.c ****         // string output
 809:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 811:Core/Src/printf.c ****         }
 812:Core/Src/printf.c ****         // post padding
 813:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 814:Core/Src/printf.c ****           while (l++ < width) {
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:Core/Src/printf.c ****           }
 817:Core/Src/printf.c ****         }
 818:Core/Src/printf.c ****         format++;
 819:Core/Src/printf.c ****         break;
 820:Core/Src/printf.c ****       }
 821:Core/Src/printf.c **** 
 822:Core/Src/printf.c ****       case 'p' : {
 823:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 827:Core/Src/printf.c ****         if (is_ll) {
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:Core/Src/printf.c ****         }
 830:Core/Src/printf.c ****         else {
 831:Core/Src/printf.c **** #endif
 832:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:Core/Src/printf.c ****         }
 835:Core/Src/printf.c **** #endif
 836:Core/Src/printf.c ****         format++;
 837:Core/Src/printf.c ****         break;
 838:Core/Src/printf.c ****       }
 839:Core/Src/printf.c **** 
 840:Core/Src/printf.c ****       case '%' :
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 75


 841:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 842:Core/Src/printf.c ****         format++;
 843:Core/Src/printf.c ****         break;
 844:Core/Src/printf.c **** 
 845:Core/Src/printf.c ****       default :
 846:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 2906              		.loc 1 846 9 is_stmt 1 view .LVU738
 2907 0294 741C     		adds	r4, r6, #1
 2908              	.LVL335:
 2909              		.loc 1 846 9 is_stmt 0 view .LVU739
 2910 0296 3B46     		mov	r3, r7
 2911 0298 3246     		mov	r2, r6
 2912 029a 4946     		mov	r1, r9
 2913 029c C047     		blx	r8
 2914              	.LVL336:
 847:Core/Src/printf.c ****         format++;
 2915              		.loc 1 847 9 is_stmt 1 view .LVU740
 2916              		.loc 1 847 15 is_stmt 0 view .LVU741
 2917 029e 0F9B     		ldr	r3, [sp, #60]
 2918 02a0 0133     		adds	r3, r3, #1
 2919 02a2 0F93     		str	r3, [sp, #60]
 848:Core/Src/printf.c ****         break;
 2920              		.loc 1 848 9 is_stmt 1 view .LVU742
 846:Core/Src/printf.c ****         format++;
 2921              		.loc 1 846 9 is_stmt 0 view .LVU743
 2922 02a4 2646     		mov	r6, r4
 2923              		.loc 1 848 9 view .LVU744
 2924 02a6 B6E6     		b	.L284
 2925              	.LVL337:
 2926              	.L231:
 2927              	.LBB38:
 692:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 2928              		.loc 1 692 9 is_stmt 1 view .LVU745
 693:Core/Src/printf.c ****           base = 16U;
 2929              		.loc 1 693 9 view .LVU746
 693:Core/Src/printf.c ****           base = 16U;
 2930              		.loc 1 693 12 is_stmt 0 view .LVU747
 2931 02a8 7828     		cmp	r0, #120
 2932 02aa 09D0     		beq	.L292
 2933 02ac 6228     		cmp	r0, #98
 2934 02ae 3AD0     		beq	.L293
 2935 02b0 6F28     		cmp	r0, #111
 2936 02b2 3AD0     		beq	.L294
 2937 02b4 5828     		cmp	r0, #88
 2938 02b6 3AD0     		beq	.L295
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2939              		.loc 1 703 11 is_stmt 1 view .LVU748
 2940              	.LVL338:
 704:Core/Src/printf.c ****         }
 2941              		.loc 1 704 11 view .LVU749
 704:Core/Src/printf.c ****         }
 2942              		.loc 1 704 17 is_stmt 0 view .LVU750
 2943 02b8 25F01005 		bic	r5, r5, #16
 2944              	.LVL339:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2945              		.loc 1 703 16 view .LVU751
 2946 02bc 0A23     		movs	r3, #10
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 76


 2947 02be 00E0     		b	.L240
 2948              	.LVL340:
 2949              	.L292:
 694:Core/Src/printf.c ****         }
 2950              		.loc 1 694 16 view .LVU752
 2951 02c0 1023     		movs	r3, #16
 2952              	.L240:
 2953              	.LVL341:
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2954              		.loc 1 707 9 is_stmt 1 view .LVU753
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2955              		.loc 1 707 12 is_stmt 0 view .LVU754
 2956 02c2 5828     		cmp	r0, #88
 2957 02c4 35D0     		beq	.L315
 2958              	.L241:
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2959              		.loc 1 712 9 is_stmt 1 view .LVU755
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2960              		.loc 1 712 12 is_stmt 0 view .LVU756
 2961 02c6 6928     		cmp	r0, #105
 2962 02c8 03D0     		beq	.L242
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2963              		.loc 1 712 30 discriminator 1 view .LVU757
 2964 02ca 6428     		cmp	r0, #100
 2965 02cc 01D0     		beq	.L242
 713:Core/Src/printf.c ****         }
 2966              		.loc 1 713 11 is_stmt 1 view .LVU758
 713:Core/Src/printf.c ****         }
 2967              		.loc 1 713 17 is_stmt 0 view .LVU759
 2968 02ce 25F00C05 		bic	r5, r5, #12
 2969              	.LVL342:
 2970              	.L242:
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2971              		.loc 1 717 9 is_stmt 1 view .LVU760
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2972              		.loc 1 717 12 is_stmt 0 view .LVU761
 2973 02d2 15F4806F 		tst	r5, #1024
 2974 02d6 01D0     		beq	.L243
 718:Core/Src/printf.c ****         }
 2975              		.loc 1 718 11 is_stmt 1 view .LVU762
 718:Core/Src/printf.c ****         }
 2976              		.loc 1 718 17 is_stmt 0 view .LVU763
 2977 02d8 25F00105 		bic	r5, r5, #1
 2978              	.LVL343:
 2979              	.L243:
 722:Core/Src/printf.c ****           // signed
 2980              		.loc 1 722 9 is_stmt 1 view .LVU764
 722:Core/Src/printf.c ****           // signed
 2981              		.loc 1 722 12 is_stmt 0 view .LVU765
 2982 02dc 6928     		cmp	r0, #105
 2983 02de 2BD0     		beq	.L244
 722:Core/Src/printf.c ****           // signed
 2984              		.loc 1 722 30 discriminator 1 view .LVU766
 2985 02e0 6428     		cmp	r0, #100
 2986 02e2 29D0     		beq	.L244
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2987              		.loc 1 741 11 is_stmt 1 view .LVU767
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 77


 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2988              		.loc 1 741 14 is_stmt 0 view .LVU768
 2989 02e4 15F4007F 		tst	r5, #512
 2990 02e8 40F09680 		bne	.L316
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 2991              		.loc 1 746 16 is_stmt 1 view .LVU769
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 2992              		.loc 1 746 19 is_stmt 0 view .LVU770
 2993 02ec 15F4807F 		tst	r5, #256
 2994 02f0 40F0AE80 		bne	.L317
 2995              	.LBB39:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 2996              		.loc 1 750 13 is_stmt 1 view .LVU771
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 2997              		.loc 1 750 103 is_stmt 0 view .LVU772
 2998 02f4 15F0400F 		tst	r5, #64
 2999 02f8 00F0BF80 		beq	.L255
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3000              		.loc 1 750 78 view .LVU773
 3001 02fc 1A9A     		ldr	r2, [sp, #104]
 3002 02fe 111D     		adds	r1, r2, #4
 3003 0300 1A91     		str	r1, [sp, #104]
 3004 0302 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3005              	.L256:
 3006              	.LVL344:
 751:Core/Src/printf.c ****           }
 3007              		.loc 1 751 13 is_stmt 1 discriminator 8 view .LVU774
 751:Core/Src/printf.c ****           }
 3008              		.loc 1 751 19 is_stmt 0 discriminator 8 view .LVU775
 3009 0304 0595     		str	r5, [sp, #20]
 3010 0306 CDF810B0 		str	fp, [sp, #16]
 3011 030a 0B99     		ldr	r1, [sp, #44]
 3012 030c 0391     		str	r1, [sp, #12]
 3013 030e 0293     		str	r3, [sp, #8]
 3014 0310 0023     		movs	r3, #0
 3015              	.LVL345:
 751:Core/Src/printf.c ****           }
 3016              		.loc 1 751 19 discriminator 8 view .LVU776
 3017 0312 0193     		str	r3, [sp, #4]
 3018 0314 0092     		str	r2, [sp]
 3019 0316 3B46     		mov	r3, r7
 3020 0318 3246     		mov	r2, r6
 3021              	.LVL346:
 751:Core/Src/printf.c ****           }
 3022              		.loc 1 751 19 discriminator 8 view .LVU777
 3023 031a 4946     		mov	r1, r9
 3024 031c 4046     		mov	r0, r8
 3025 031e FFF7FEFF 		bl	_ntoa_long
 3026              	.LVL347:
 751:Core/Src/printf.c ****           }
 3027              		.loc 1 751 19 discriminator 8 view .LVU778
 3028 0322 0646     		mov	r6, r0
 3029              	.LVL348:
 751:Core/Src/printf.c ****           }
 3030              		.loc 1 751 19 discriminator 8 view .LVU779
 3031 0324 29E0     		b	.L248
 3032              	.LVL349:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 78


 3033              	.L293:
 751:Core/Src/printf.c ****           }
 3034              		.loc 1 751 19 discriminator 8 view .LVU780
 3035              	.LBE39:
 693:Core/Src/printf.c ****           base = 16U;
 3036              		.loc 1 693 12 view .LVU781
 3037 0326 0223     		movs	r3, #2
 3038 0328 CBE7     		b	.L240
 3039              	.L294:
 3040 032a 0823     		movs	r3, #8
 3041 032c C9E7     		b	.L240
 3042              	.L295:
 3043 032e 1023     		movs	r3, #16
 3044 0330 C7E7     		b	.L240
 3045              	.LVL350:
 3046              	.L315:
 708:Core/Src/printf.c ****         }
 3047              		.loc 1 708 11 is_stmt 1 view .LVU782
 708:Core/Src/printf.c ****         }
 3048              		.loc 1 708 17 is_stmt 0 view .LVU783
 3049 0332 45F02005 		orr	r5, r5, #32
 3050              	.LVL351:
 708:Core/Src/printf.c ****         }
 3051              		.loc 1 708 17 view .LVU784
 3052 0336 C6E7     		b	.L241
 3053              	.L244:
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3054              		.loc 1 724 11 is_stmt 1 view .LVU785
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3055              		.loc 1 724 14 is_stmt 0 view .LVU786
 3056 0338 15F4007F 		tst	r5, #512
 3057 033c 21D1     		bne	.L318
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3058              		.loc 1 730 16 is_stmt 1 view .LVU787
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3059              		.loc 1 730 19 is_stmt 0 view .LVU788
 3060 033e 15F4807F 		tst	r5, #256
 3061 0342 42D1     		bne	.L319
 3062              	.LBB40:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3063              		.loc 1 735 13 is_stmt 1 view .LVU789
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3064              		.loc 1 735 76 is_stmt 0 view .LVU790
 3065 0344 15F0400F 		tst	r5, #64
 3066 0348 58D0     		beq	.L250
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3067              		.loc 1 735 60 view .LVU791
 3068 034a 1A9A     		ldr	r2, [sp, #104]
 3069 034c 111D     		adds	r1, r2, #4
 3070 034e 1A91     		str	r1, [sp, #104]
 3071 0350 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3072              	.L251:
 3073              	.LVL352:
 736:Core/Src/printf.c ****           }
 3074              		.loc 1 736 13 is_stmt 1 discriminator 8 view .LVU792
 736:Core/Src/printf.c ****           }
 3075              		.loc 1 736 56 is_stmt 0 discriminator 8 view .LVU793
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 79


 3076 0352 82EAE271 		eor	r1, r2, r2, asr #31
 3077 0356 A1EBE271 		sub	r1, r1, r2, asr #31
 736:Core/Src/printf.c ****           }
 3078              		.loc 1 736 19 discriminator 8 view .LVU794
 3079 035a 0595     		str	r5, [sp, #20]
 3080 035c CDF810B0 		str	fp, [sp, #16]
 3081 0360 0B98     		ldr	r0, [sp, #44]
 3082 0362 0390     		str	r0, [sp, #12]
 3083 0364 0293     		str	r3, [sp, #8]
 3084 0366 D20F     		lsrs	r2, r2, #31
 3085              	.LVL353:
 736:Core/Src/printf.c ****           }
 3086              		.loc 1 736 19 discriminator 8 view .LVU795
 3087 0368 0192     		str	r2, [sp, #4]
 3088 036a 0091     		str	r1, [sp]
 3089 036c 3B46     		mov	r3, r7
 3090              	.LVL354:
 736:Core/Src/printf.c ****           }
 3091              		.loc 1 736 19 discriminator 8 view .LVU796
 3092 036e 3246     		mov	r2, r6
 3093 0370 4946     		mov	r1, r9
 3094 0372 4046     		mov	r0, r8
 3095 0374 FFF7FEFF 		bl	_ntoa_long
 3096              	.LVL355:
 736:Core/Src/printf.c ****           }
 3097              		.loc 1 736 19 discriminator 8 view .LVU797
 3098 0378 0646     		mov	r6, r0
 3099              	.LVL356:
 3100              	.L248:
 736:Core/Src/printf.c ****           }
 3101              		.loc 1 736 19 discriminator 8 view .LVU798
 3102              	.LBE40:
 754:Core/Src/printf.c ****         break;
 3103              		.loc 1 754 9 is_stmt 1 view .LVU799
 754:Core/Src/printf.c ****         break;
 3104              		.loc 1 754 15 is_stmt 0 view .LVU800
 3105 037a 0F9B     		ldr	r3, [sp, #60]
 3106 037c 0133     		adds	r3, r3, #1
 3107 037e 0F93     		str	r3, [sp, #60]
 755:Core/Src/printf.c ****       }
 3108              		.loc 1 755 9 is_stmt 1 view .LVU801
 3109 0380 49E6     		b	.L284
 3110              	.LVL357:
 3111              	.L318:
 3112              	.LBB41:
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3113              		.loc 1 726 13 view .LVU802
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3114              		.loc 1 726 29 is_stmt 0 view .LVU803
 3115 0382 1A9A     		ldr	r2, [sp, #104]
 3116 0384 0732     		adds	r2, r2, #7
 3117 0386 22F00702 		bic	r2, r2, #7
 3118 038a 02F10801 		add	r1, r2, #8
 3119 038e 1A91     		str	r1, [sp, #104]
 3120 0390 5168     		ldr	r1, [r2, #4]
 727:Core/Src/printf.c **** #endif
 3121              		.loc 1 727 13 is_stmt 1 view .LVU804
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 80


 727:Core/Src/printf.c **** #endif
 3122              		.loc 1 727 61 is_stmt 0 view .LVU805
 3123 0392 1268     		ldr	r2, [r2]
 3124 0394 0846     		mov	r0, r1
 3125 0396 0029     		cmp	r1, #0
 3126 0398 13DB     		blt	.L320
 3127              	.L247:
 727:Core/Src/printf.c **** #endif
 3128              		.loc 1 727 19 view .LVU806
 3129 039a 0895     		str	r5, [sp, #32]
 3130 039c CDF81CB0 		str	fp, [sp, #28]
 3131 03a0 0B9C     		ldr	r4, [sp, #44]
 3132 03a2 0694     		str	r4, [sp, #24]
 3133 03a4 0493     		str	r3, [sp, #16]
 3134 03a6 0023     		movs	r3, #0
 3135              	.LVL358:
 727:Core/Src/printf.c **** #endif
 3136              		.loc 1 727 19 view .LVU807
 3137 03a8 0593     		str	r3, [sp, #20]
 3138 03aa C90F     		lsrs	r1, r1, #31
 3139 03ac 0291     		str	r1, [sp, #8]
 3140 03ae 0092     		str	r2, [sp]
 3141 03b0 0190     		str	r0, [sp, #4]
 3142 03b2 3B46     		mov	r3, r7
 3143 03b4 3246     		mov	r2, r6
 3144 03b6 4946     		mov	r1, r9
 3145 03b8 4046     		mov	r0, r8
 3146 03ba FFF7FEFF 		bl	_ntoa_long_long
 3147              	.LVL359:
 727:Core/Src/printf.c **** #endif
 3148              		.loc 1 727 19 view .LVU808
 3149 03be 0646     		mov	r6, r0
 3150              	.LVL360:
 727:Core/Src/printf.c **** #endif
 3151              		.loc 1 727 19 view .LVU809
 3152              	.LBE41:
 3153 03c0 DBE7     		b	.L248
 3154              	.LVL361:
 3155              	.L320:
 3156              	.LBB42:
 727:Core/Src/printf.c **** #endif
 3157              		.loc 1 727 61 view .LVU810
 3158 03c2 5242     		negs	r2, r2
 3159 03c4 61EB4100 		sbc	r0, r1, r1, lsl #1
 3160 03c8 E7E7     		b	.L247
 3161              	.L319:
 3162              	.LBE42:
 3163              	.LBB43:
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3164              		.loc 1 731 13 is_stmt 1 view .LVU811
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3165              		.loc 1 731 24 is_stmt 0 view .LVU812
 3166 03ca 1A9A     		ldr	r2, [sp, #104]
 3167 03cc 111D     		adds	r1, r2, #4
 3168 03ce 1A91     		str	r1, [sp, #104]
 3169 03d0 1268     		ldr	r2, [r2]
 732:Core/Src/printf.c ****           }
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 81


 3170              		.loc 1 732 13 is_stmt 1 view .LVU813
 732:Core/Src/printf.c ****           }
 3171              		.loc 1 732 56 is_stmt 0 view .LVU814
 3172 03d2 82EAE271 		eor	r1, r2, r2, asr #31
 3173 03d6 A1EBE271 		sub	r1, r1, r2, asr #31
 732:Core/Src/printf.c ****           }
 3174              		.loc 1 732 19 view .LVU815
 3175 03da 0595     		str	r5, [sp, #20]
 3176 03dc CDF810B0 		str	fp, [sp, #16]
 3177 03e0 0B98     		ldr	r0, [sp, #44]
 3178 03e2 0390     		str	r0, [sp, #12]
 3179 03e4 0293     		str	r3, [sp, #8]
 3180 03e6 D20F     		lsrs	r2, r2, #31
 3181 03e8 0192     		str	r2, [sp, #4]
 3182 03ea 0091     		str	r1, [sp]
 3183 03ec 3B46     		mov	r3, r7
 3184              	.LVL362:
 732:Core/Src/printf.c ****           }
 3185              		.loc 1 732 19 view .LVU816
 3186 03ee 3246     		mov	r2, r6
 3187 03f0 4946     		mov	r1, r9
 3188 03f2 4046     		mov	r0, r8
 3189 03f4 FFF7FEFF 		bl	_ntoa_long
 3190              	.LVL363:
 732:Core/Src/printf.c ****           }
 3191              		.loc 1 732 19 view .LVU817
 3192 03f8 0646     		mov	r6, r0
 3193              	.LVL364:
 732:Core/Src/printf.c ****           }
 3194              		.loc 1 732 19 view .LVU818
 3195              	.LBE43:
 3196 03fa BEE7     		b	.L248
 3197              	.LVL365:
 3198              	.L250:
 3199              	.LBB44:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3200              		.loc 1 735 129 discriminator 2 view .LVU819
 3201 03fc 15F0800F 		tst	r5, #128
 3202 0400 05D0     		beq	.L252
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3203              		.loc 1 735 113 view .LVU820
 3204 0402 1A9A     		ldr	r2, [sp, #104]
 3205 0404 111D     		adds	r1, r2, #4
 3206 0406 1A91     		str	r1, [sp, #104]
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3207              		.loc 1 735 102 view .LVU821
 3208 0408 B2F90020 		ldrsh	r2, [r2]
 3209 040c A1E7     		b	.L251
 3210              	.L252:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3211              		.loc 1 735 129 view .LVU822
 3212 040e 1A9A     		ldr	r2, [sp, #104]
 3213 0410 111D     		adds	r1, r2, #4
 3214 0412 1A91     		str	r1, [sp, #104]
 3215 0414 1268     		ldr	r2, [r2]
 3216 0416 9CE7     		b	.L251
 3217              	.L316:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 82


 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3218              		.loc 1 735 129 view .LVU823
 3219              	.LBE44:
 743:Core/Src/printf.c **** #endif
 3220              		.loc 1 743 13 is_stmt 1 view .LVU824
 743:Core/Src/printf.c **** #endif
 3221              		.loc 1 743 19 is_stmt 0 view .LVU825
 3222 0418 1A9A     		ldr	r2, [sp, #104]
 3223 041a 0732     		adds	r2, r2, #7
 3224 041c 22F00702 		bic	r2, r2, #7
 3225 0420 02F10801 		add	r1, r2, #8
 3226 0424 1A91     		str	r1, [sp, #104]
 3227 0426 0895     		str	r5, [sp, #32]
 3228 0428 CDF81CB0 		str	fp, [sp, #28]
 3229 042c 0B99     		ldr	r1, [sp, #44]
 3230 042e 0691     		str	r1, [sp, #24]
 3231 0430 0021     		movs	r1, #0
 3232 0432 0493     		str	r3, [sp, #16]
 3233 0434 0591     		str	r1, [sp, #20]
 3234 0436 0291     		str	r1, [sp, #8]
 3235 0438 D2E90023 		ldrd	r2, [r2]
 3236 043c CDE90023 		strd	r2, [sp]
 3237 0440 3B46     		mov	r3, r7
 3238              	.LVL366:
 743:Core/Src/printf.c **** #endif
 3239              		.loc 1 743 19 view .LVU826
 3240 0442 3246     		mov	r2, r6
 3241 0444 4946     		mov	r1, r9
 3242 0446 4046     		mov	r0, r8
 3243 0448 FFF7FEFF 		bl	_ntoa_long_long
 3244              	.LVL367:
 743:Core/Src/printf.c **** #endif
 3245              		.loc 1 743 19 view .LVU827
 3246 044c 0646     		mov	r6, r0
 3247              	.LVL368:
 743:Core/Src/printf.c **** #endif
 3248              		.loc 1 743 19 view .LVU828
 3249 044e 94E7     		b	.L248
 3250              	.LVL369:
 3251              	.L317:
 747:Core/Src/printf.c ****           }
 3252              		.loc 1 747 13 is_stmt 1 view .LVU829
 747:Core/Src/printf.c ****           }
 3253              		.loc 1 747 19 is_stmt 0 view .LVU830
 3254 0450 1A9A     		ldr	r2, [sp, #104]
 3255 0452 111D     		adds	r1, r2, #4
 3256 0454 1A91     		str	r1, [sp, #104]
 3257 0456 0595     		str	r5, [sp, #20]
 3258 0458 CDF810B0 		str	fp, [sp, #16]
 3259 045c 0B99     		ldr	r1, [sp, #44]
 3260 045e 0391     		str	r1, [sp, #12]
 3261 0460 0293     		str	r3, [sp, #8]
 3262 0462 0023     		movs	r3, #0
 3263              	.LVL370:
 747:Core/Src/printf.c ****           }
 3264              		.loc 1 747 19 view .LVU831
 3265 0464 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 83


 3266 0466 1368     		ldr	r3, [r2]
 3267 0468 0093     		str	r3, [sp]
 3268 046a 3B46     		mov	r3, r7
 3269 046c 3246     		mov	r2, r6
 3270 046e 4946     		mov	r1, r9
 3271 0470 4046     		mov	r0, r8
 3272 0472 FFF7FEFF 		bl	_ntoa_long
 3273              	.LVL371:
 747:Core/Src/printf.c ****           }
 3274              		.loc 1 747 19 view .LVU832
 3275 0476 0646     		mov	r6, r0
 3276              	.LVL372:
 747:Core/Src/printf.c ****           }
 3277              		.loc 1 747 19 view .LVU833
 3278 0478 7FE7     		b	.L248
 3279              	.LVL373:
 3280              	.L255:
 3281              	.LBB45:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3282              		.loc 1 750 174 discriminator 2 view .LVU834
 3283 047a 15F0800F 		tst	r5, #128
 3284 047e 04D0     		beq	.L257
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3285              		.loc 1 750 149 view .LVU835
 3286 0480 1A9A     		ldr	r2, [sp, #104]
 3287 0482 111D     		adds	r1, r2, #4
 3288 0484 1A91     		str	r1, [sp, #104]
 3289 0486 1288     		ldrh	r2, [r2]
 3290 0488 3CE7     		b	.L256
 3291              	.L257:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3292              		.loc 1 750 174 view .LVU836
 3293 048a 1A9A     		ldr	r2, [sp, #104]
 3294 048c 111D     		adds	r1, r2, #4
 3295 048e 1A91     		str	r1, [sp, #104]
 3296 0490 1268     		ldr	r2, [r2]
 3297 0492 37E7     		b	.L256
 3298              	.LVL374:
 3299              	.L236:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3300              		.loc 1 750 174 view .LVU837
 3301              	.LBE45:
 3302              	.LBE38:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3303              		.loc 1 760 9 is_stmt 1 view .LVU838
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3304              		.loc 1 760 12 is_stmt 0 view .LVU839
 3305 0494 4628     		cmp	r0, #70
 3306 0496 18D0     		beq	.L321
 3307              	.L258:
 761:Core/Src/printf.c ****         format++;
 3308              		.loc 1 761 9 is_stmt 1 view .LVU840
 761:Core/Src/printf.c ****         format++;
 3309              		.loc 1 761 15 is_stmt 0 view .LVU841
 3310 0498 1A9B     		ldr	r3, [sp, #104]
 3311 049a 0733     		adds	r3, r3, #7
 3312 049c 23F00703 		bic	r3, r3, #7
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 84


 3313 04a0 03F10802 		add	r2, r3, #8
 3314 04a4 1A92     		str	r2, [sp, #104]
 3315 04a6 93ED000B 		vldr.64	d0, [r3]
 3316 04aa 0295     		str	r5, [sp, #8]
 3317 04ac CDF804B0 		str	fp, [sp, #4]
 3318 04b0 0B9B     		ldr	r3, [sp, #44]
 3319 04b2 0093     		str	r3, [sp]
 3320 04b4 3B46     		mov	r3, r7
 3321 04b6 3246     		mov	r2, r6
 3322 04b8 4946     		mov	r1, r9
 3323 04ba 4046     		mov	r0, r8
 3324 04bc FFF7FEFF 		bl	_ftoa
 3325              	.LVL375:
 3326 04c0 0646     		mov	r6, r0
 3327              	.LVL376:
 762:Core/Src/printf.c ****         break;
 3328              		.loc 1 762 9 is_stmt 1 view .LVU842
 762:Core/Src/printf.c ****         break;
 3329              		.loc 1 762 15 is_stmt 0 view .LVU843
 3330 04c2 0F9B     		ldr	r3, [sp, #60]
 3331 04c4 0133     		adds	r3, r3, #1
 3332 04c6 0F93     		str	r3, [sp, #60]
 763:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3333              		.loc 1 763 9 is_stmt 1 view .LVU844
 3334 04c8 A5E5     		b	.L284
 3335              	.LVL377:
 3336              	.L321:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3337              		.loc 1 760 29 discriminator 1 view .LVU845
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3338              		.loc 1 760 35 is_stmt 0 discriminator 1 view .LVU846
 3339 04ca 45F02005 		orr	r5, r5, #32
 3340              	.LVL378:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3341              		.loc 1 760 35 discriminator 1 view .LVU847
 3342 04ce E3E7     		b	.L258
 3343              	.L234:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3344              		.loc 1 769 9 is_stmt 1 view .LVU848
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3345              		.loc 1 769 12 is_stmt 0 view .LVU849
 3346 04d0 6728     		cmp	r0, #103
 3347 04d2 01D0     		beq	.L259
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3348              		.loc 1 769 29 discriminator 2 view .LVU850
 3349 04d4 4728     		cmp	r0, #71
 3350 04d6 01D1     		bne	.L260
 3351              	.L259:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3352              		.loc 1 769 49 is_stmt 1 discriminator 3 view .LVU851
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3353              		.loc 1 769 55 is_stmt 0 discriminator 3 view .LVU852
 3354 04d8 45F40065 		orr	r5, r5, #2048
 3355              	.LVL379:
 3356              	.L260:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3357              		.loc 1 770 9 is_stmt 1 view .LVU853
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 85


 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3358              		.loc 1 770 12 is_stmt 0 view .LVU854
 3359 04dc 4528     		cmp	r0, #69
 3360 04de 01D0     		beq	.L261
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3361              		.loc 1 770 29 discriminator 2 view .LVU855
 3362 04e0 4728     		cmp	r0, #71
 3363 04e2 01D1     		bne	.L262
 3364              	.L261:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3365              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU856
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3366              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU857
 3367 04e4 45F02005 		orr	r5, r5, #32
 3368              	.LVL380:
 3369              	.L262:
 771:Core/Src/printf.c ****         format++;
 3370              		.loc 1 771 9 is_stmt 1 view .LVU858
 771:Core/Src/printf.c ****         format++;
 3371              		.loc 1 771 15 is_stmt 0 view .LVU859
 3372 04e8 1A9B     		ldr	r3, [sp, #104]
 3373 04ea 0733     		adds	r3, r3, #7
 3374 04ec 23F00703 		bic	r3, r3, #7
 3375 04f0 03F10802 		add	r2, r3, #8
 3376 04f4 1A92     		str	r2, [sp, #104]
 3377 04f6 93ED000B 		vldr.64	d0, [r3]
 3378 04fa 0295     		str	r5, [sp, #8]
 3379 04fc CDF804B0 		str	fp, [sp, #4]
 3380 0500 0B9B     		ldr	r3, [sp, #44]
 3381 0502 0093     		str	r3, [sp]
 3382 0504 3B46     		mov	r3, r7
 3383 0506 3246     		mov	r2, r6
 3384 0508 4946     		mov	r1, r9
 3385 050a 4046     		mov	r0, r8
 3386 050c FFF7FEFF 		bl	_etoa
 3387              	.LVL381:
 3388 0510 0646     		mov	r6, r0
 3389              	.LVL382:
 772:Core/Src/printf.c ****         break;
 3390              		.loc 1 772 9 is_stmt 1 view .LVU860
 772:Core/Src/printf.c ****         break;
 3391              		.loc 1 772 15 is_stmt 0 view .LVU861
 3392 0512 0F9B     		ldr	r3, [sp, #60]
 3393 0514 0133     		adds	r3, r3, #1
 3394 0516 0F93     		str	r3, [sp, #60]
 773:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3395              		.loc 1 773 9 is_stmt 1 view .LVU862
 3396 0518 7DE5     		b	.L284
 3397              	.LVL383:
 3398              	.L237:
 3399              	.LBB46:
 777:Core/Src/printf.c ****         // pre padding
 3400              		.loc 1 777 9 view .LVU863
 779:Core/Src/printf.c ****           while (l++ < width) {
 3401              		.loc 1 779 9 view .LVU864
 779:Core/Src/printf.c ****           while (l++ < width) {
 3402              		.loc 1 779 12 is_stmt 0 view .LVU865
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 86


 3403 051a 15F00205 		ands	r5, r5, #2
 3404              	.LVL384:
 779:Core/Src/printf.c ****           while (l++ < width) {
 3405              		.loc 1 779 12 view .LVU866
 3406 051e 1DD0     		beq	.L296
 777:Core/Src/printf.c ****         // pre padding
 3407              		.loc 1 777 22 view .LVU867
 3408 0520 0124     		movs	r4, #1
 3409              	.LVL385:
 3410              	.L264:
 785:Core/Src/printf.c ****         // post padding
 3411              		.loc 1 785 9 is_stmt 1 view .LVU868
 785:Core/Src/printf.c ****         // post padding
 3412              		.loc 1 785 19 is_stmt 0 view .LVU869
 3413 0522 1A98     		ldr	r0, [sp, #104]
 3414 0524 031D     		adds	r3, r0, #4
 3415 0526 1A93     		str	r3, [sp, #104]
 785:Core/Src/printf.c ****         // post padding
 3416              		.loc 1 785 9 view .LVU870
 3417 0528 06F1010A 		add	r10, r6, #1
 3418              	.LVL386:
 785:Core/Src/printf.c ****         // post padding
 3419              		.loc 1 785 9 view .LVU871
 3420 052c 3B46     		mov	r3, r7
 3421 052e 3246     		mov	r2, r6
 3422 0530 4946     		mov	r1, r9
 3423 0532 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3424 0534 C047     		blx	r8
 3425              	.LVL387:
 787:Core/Src/printf.c ****           while (l++ < width) {
 3426              		.loc 1 787 9 is_stmt 1 view .LVU872
 787:Core/Src/printf.c ****           while (l++ < width) {
 3427              		.loc 1 787 12 is_stmt 0 view .LVU873
 3428 0536 A5B9     		cbnz	r5, .L322
 3429              	.LVL388:
 3430              	.L267:
 792:Core/Src/printf.c ****         break;
 3431              		.loc 1 792 9 is_stmt 1 view .LVU874
 792:Core/Src/printf.c ****         break;
 3432              		.loc 1 792 15 is_stmt 0 view .LVU875
 3433 0538 0F9B     		ldr	r3, [sp, #60]
 3434 053a 0133     		adds	r3, r3, #1
 3435 053c 0F93     		str	r3, [sp, #60]
 793:Core/Src/printf.c ****       }
 3436              		.loc 1 793 9 is_stmt 1 view .LVU876
 3437 053e 5646     		mov	r6, r10
 3438 0540 69E5     		b	.L284
 3439              	.LVL389:
 3440              	.L265:
 781:Core/Src/printf.c ****           }
 3441              		.loc 1 781 13 view .LVU877
 3442 0542 02F1010A 		add	r10, r2, #1
 3443              	.LVL390:
 781:Core/Src/printf.c ****           }
 3444              		.loc 1 781 13 is_stmt 0 view .LVU878
 3445 0546 3B46     		mov	r3, r7
 3446 0548 4946     		mov	r1, r9
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 87


 3447 054a 2020     		movs	r0, #32
 3448 054c C047     		blx	r8
 3449              	.LVL391:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3450              		.loc 1 780 19 view .LVU879
 3451 054e 2346     		mov	r3, r4
 781:Core/Src/printf.c ****           }
 3452              		.loc 1 781 13 view .LVU880
 3453 0550 5246     		mov	r2, r10
 3454              	.LVL392:
 3455              	.L263:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3456              		.loc 1 780 22 is_stmt 1 view .LVU881
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3457              		.loc 1 780 19 is_stmt 0 view .LVU882
 3458 0552 5C1C     		adds	r4, r3, #1
 3459              	.LVL393:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3460              		.loc 1 780 22 view .LVU883
 3461 0554 9B45     		cmp	fp, r3
 3462 0556 F4D8     		bhi	.L265
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3463              		.loc 1 780 22 view .LVU884
 3464 0558 1646     		mov	r6, r2
 3465 055a E2E7     		b	.L264
 3466              	.LVL394:
 3467              	.L296:
 777:Core/Src/printf.c ****         // pre padding
 3468              		.loc 1 777 22 view .LVU885
 3469 055c 0123     		movs	r3, #1
 3470 055e 3246     		mov	r2, r6
 3471 0560 F7E7     		b	.L263
 3472              	.LVL395:
 3473              	.L322:
 777:Core/Src/printf.c ****         // pre padding
 3474              		.loc 1 777 22 view .LVU886
 3475 0562 5246     		mov	r2, r10
 3476 0564 06E0     		b	.L266
 3477              	.LVL396:
 3478              	.L268:
 789:Core/Src/printf.c ****           }
 3479              		.loc 1 789 13 is_stmt 1 view .LVU887
 3480 0566 561C     		adds	r6, r2, #1
 3481              	.LVL397:
 789:Core/Src/printf.c ****           }
 3482              		.loc 1 789 13 is_stmt 0 view .LVU888
 3483 0568 3B46     		mov	r3, r7
 3484 056a 4946     		mov	r1, r9
 3485 056c 2020     		movs	r0, #32
 3486 056e C047     		blx	r8
 3487              	.LVL398:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3488              		.loc 1 788 19 view .LVU889
 3489 0570 2C46     		mov	r4, r5
 789:Core/Src/printf.c ****           }
 3490              		.loc 1 789 13 view .LVU890
 3491 0572 3246     		mov	r2, r6
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 88


 3492              	.LVL399:
 3493              	.L266:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3494              		.loc 1 788 22 is_stmt 1 view .LVU891
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3495              		.loc 1 788 19 is_stmt 0 view .LVU892
 3496 0574 651C     		adds	r5, r4, #1
 3497              	.LVL400:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3498              		.loc 1 788 22 view .LVU893
 3499 0576 A345     		cmp	fp, r4
 3500 0578 F5D8     		bhi	.L268
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3501              		.loc 1 788 22 view .LVU894
 3502 057a 9246     		mov	r10, r2
 3503 057c DCE7     		b	.L267
 3504              	.LVL401:
 3505              	.L314:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3506              		.loc 1 788 22 view .LVU895
 3507              	.LBE46:
 3508              	.LBB47:
 797:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3509              		.loc 1 797 9 is_stmt 1 view .LVU896
 797:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3510              		.loc 1 797 21 is_stmt 0 view .LVU897
 3511 057e 1A9B     		ldr	r3, [sp, #104]
 3512 0580 1A1D     		adds	r2, r3, #4
 3513 0582 1A92     		str	r2, [sp, #104]
 3514 0584 D3F800A0 		ldr	r10, [r3]
 798:Core/Src/printf.c ****         // pre padding
 3515              		.loc 1 798 9 is_stmt 1 view .LVU898
 798:Core/Src/printf.c ****         // pre padding
 3516              		.loc 1 798 26 is_stmt 0 view .LVU899
 3517 0588 0B9B     		ldr	r3, [sp, #44]
 3518 058a FBB9     		cbnz	r3, .L269
 3519 058c 4FF0FF32 		mov	r2, #-1
 3520              	.L270:
 3521 0590 5346     		mov	r3, r10
 3522 0592 01E0     		b	.L271
 3523              	.LVL402:
 3524              	.L273:
 3525              	.LBB48:
 3526              	.LBB49:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3527              		.loc 1 174 34 is_stmt 1 view .LVU900
 3528 0594 0133     		adds	r3, r3, #1
 3529              	.LVL403:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3530              		.loc 1 174 30 is_stmt 0 view .LVU901
 3531 0596 0A46     		mov	r2, r1
 3532              	.LVL404:
 3533              	.L271:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3534              		.loc 1 174 20 is_stmt 1 view .LVU902
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3535              		.loc 1 174 17 is_stmt 0 view .LVU903
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 89


 3536 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3537              		.loc 1 174 20 view .LVU904
 3538 059a 11B1     		cbz	r1, .L272
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3539              		.loc 1 174 30 view .LVU905
 3540 059c 511E     		subs	r1, r2, #1
 3541              	.LVL405:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3542              		.loc 1 174 20 view .LVU906
 3543 059e 002A     		cmp	r2, #0
 3544 05a0 F8D1     		bne	.L273
 3545              	.LVL406:
 3546              	.L272:
 175:Core/Src/printf.c **** }
 3547              		.loc 1 175 3 is_stmt 1 view .LVU907
 175:Core/Src/printf.c **** }
 3548              		.loc 1 175 27 is_stmt 0 view .LVU908
 3549 05a2 A3EB0A03 		sub	r3, r3, r10
 3550              	.LVL407:
 175:Core/Src/printf.c **** }
 3551              		.loc 1 175 27 view .LVU909
 3552              	.LBE49:
 3553              	.LBE48:
 800:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3554              		.loc 1 800 9 is_stmt 1 view .LVU910
 800:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3555              		.loc 1 800 12 is_stmt 0 view .LVU911
 3556 05a6 15F48062 		ands	r2, r5, #1024
 3557 05aa 0C92     		str	r2, [sp, #48]
 3558 05ac 03D0     		beq	.L274
 801:Core/Src/printf.c ****         }
 3559              		.loc 1 801 11 is_stmt 1 view .LVU912
 801:Core/Src/printf.c ****         }
 3560              		.loc 1 801 13 is_stmt 0 view .LVU913
 3561 05ae 0B9A     		ldr	r2, [sp, #44]
 3562 05b0 9342     		cmp	r3, r2
 3563 05b2 28BF     		it	cs
 3564 05b4 1346     		movcs	r3, r2
 3565              	.LVL408:
 3566              	.L274:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3567              		.loc 1 803 9 is_stmt 1 view .LVU914
 803:Core/Src/printf.c ****           while (l++ < width) {
 3568              		.loc 1 803 12 is_stmt 0 view .LVU915
 3569 05b6 15F00204 		ands	r4, r5, #2
 3570 05ba 09D0     		beq	.L323
 803:Core/Src/printf.c ****           while (l++ < width) {
 3571              		.loc 1 803 12 view .LVU916
 3572 05bc 0D94     		str	r4, [sp, #52]
 3573 05be CDF838B0 		str	fp, [sp, #56]
 3574 05c2 0B9D     		ldr	r5, [sp, #44]
 3575              	.LVL409:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3576              		.loc 1 803 12 view .LVU917
 3577 05c4 3246     		mov	r2, r6
 3578 05c6 0C9E     		ldr	r6, [sp, #48]
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 90


 3579              	.LVL410:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3580              		.loc 1 803 12 view .LVU918
 3581 05c8 9B46     		mov	fp, r3
 3582              	.LVL411:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3583              		.loc 1 803 12 view .LVU919
 3584 05ca 1FE0     		b	.L278
 3585              	.LVL412:
 3586              	.L269:
 798:Core/Src/printf.c ****         // pre padding
 3587              		.loc 1 798 26 view .LVU920
 3588 05cc 0B9A     		ldr	r2, [sp, #44]
 3589 05ce DFE7     		b	.L270
 3590              	.LVL413:
 3591              	.L323:
 798:Core/Src/printf.c ****         // pre padding
 3592              		.loc 1 798 26 view .LVU921
 3593 05d0 3246     		mov	r2, r6
 3594 05d2 2646     		mov	r6, r4
 3595              	.LVL414:
 798:Core/Src/printf.c ****         // pre padding
 3596              		.loc 1 798 26 view .LVU922
 3597 05d4 06E0     		b	.L275
 3598              	.LVL415:
 3599              	.L277:
 805:Core/Src/printf.c ****           }
 3600              		.loc 1 805 13 is_stmt 1 view .LVU923
 3601 05d6 541C     		adds	r4, r2, #1
 3602              	.LVL416:
 805:Core/Src/printf.c ****           }
 3603              		.loc 1 805 13 is_stmt 0 view .LVU924
 3604 05d8 3B46     		mov	r3, r7
 3605 05da 4946     		mov	r1, r9
 3606 05dc 2020     		movs	r0, #32
 3607 05de C047     		blx	r8
 3608              	.LVL417:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3609              		.loc 1 804 19 view .LVU925
 3610 05e0 2B46     		mov	r3, r5
 805:Core/Src/printf.c ****           }
 3611              		.loc 1 805 13 view .LVU926
 3612 05e2 2246     		mov	r2, r4
 3613              	.LVL418:
 3614              	.L275:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3615              		.loc 1 804 22 is_stmt 1 view .LVU927
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3616              		.loc 1 804 19 is_stmt 0 view .LVU928
 3617 05e4 5D1C     		adds	r5, r3, #1
 3618              	.LVL419:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3619              		.loc 1 804 22 view .LVU929
 3620 05e6 9B45     		cmp	fp, r3
 3621 05e8 F5D8     		bhi	.L277
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3622              		.loc 1 804 19 view .LVU930
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 91


 3623 05ea 3446     		mov	r4, r6
 3624 05ec 2B46     		mov	r3, r5
 3625 05ee 0D94     		str	r4, [sp, #52]
 3626 05f0 CDF838B0 		str	fp, [sp, #56]
 3627 05f4 0B9D     		ldr	r5, [sp, #44]
 3628              	.LVL420:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3629              		.loc 1 804 19 view .LVU931
 3630 05f6 0C9E     		ldr	r6, [sp, #48]
 3631 05f8 9B46     		mov	fp, r3
 3632              	.LVL421:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3633              		.loc 1 804 19 view .LVU932
 3634 05fa 07E0     		b	.L278
 3635              	.LVL422:
 3636              	.L297:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3637              		.loc 1 809 69 view .LVU933
 3638 05fc 1D46     		mov	r5, r3
 3639              	.LVL423:
 3640              	.L280:
 810:Core/Src/printf.c ****         }
 3641              		.loc 1 810 11 is_stmt 1 view .LVU934
 810:Core/Src/printf.c ****         }
 3642              		.loc 1 810 18 is_stmt 0 view .LVU935
 3643 05fe 0AF1010A 		add	r10, r10, #1
 3644              	.LVL424:
 810:Core/Src/printf.c ****         }
 3645              		.loc 1 810 11 view .LVU936
 3646 0602 541C     		adds	r4, r2, #1
 3647              	.LVL425:
 810:Core/Src/printf.c ****         }
 3648              		.loc 1 810 11 view .LVU937
 3649 0604 3B46     		mov	r3, r7
 3650 0606 4946     		mov	r1, r9
 3651 0608 C047     		blx	r8
 3652              	.LVL426:
 3653 060a 2246     		mov	r2, r4
 3654              	.LVL427:
 3655              	.L278:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3656              		.loc 1 809 26 is_stmt 1 view .LVU938
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3657              		.loc 1 809 17 is_stmt 0 view .LVU939
 3658 060c 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3659              		.loc 1 809 26 view .LVU940
 3660 0610 20B1     		cbz	r0, .L279
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3661              		.loc 1 809 26 discriminator 1 view .LVU941
 3662 0612 002E     		cmp	r6, #0
 3663 0614 F3D0     		beq	.L280
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3664              		.loc 1 809 69 discriminator 2 view .LVU942
 3665 0616 6B1E     		subs	r3, r5, #1
 3666              	.LVL428:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 92


 3667              		.loc 1 809 57 discriminator 2 view .LVU943
 3668 0618 002D     		cmp	r5, #0
 3669 061a EFD1     		bne	.L297
 3670              	.LVL429:
 3671              	.L279:
 813:Core/Src/printf.c ****           while (l++ < width) {
 3672              		.loc 1 813 12 view .LVU944
 3673 061c 0D9C     		ldr	r4, [sp, #52]
 3674 061e 1646     		mov	r6, r2
 3675 0620 5B46     		mov	r3, fp
 3676 0622 DDF838B0 		ldr	fp, [sp, #56]
 3677              	.LVL430:
 813:Core/Src/printf.c ****           while (l++ < width) {
 3678              		.loc 1 813 9 is_stmt 1 view .LVU945
 813:Core/Src/printf.c ****           while (l++ < width) {
 3679              		.loc 1 813 12 is_stmt 0 view .LVU946
 3680 0626 54B9     		cbnz	r4, .L281
 3681              	.LVL431:
 3682              	.L282:
 818:Core/Src/printf.c ****         break;
 3683              		.loc 1 818 9 is_stmt 1 view .LVU947
 818:Core/Src/printf.c ****         break;
 3684              		.loc 1 818 15 is_stmt 0 view .LVU948
 3685 0628 0F9B     		ldr	r3, [sp, #60]
 3686 062a 0133     		adds	r3, r3, #1
 3687 062c 0F93     		str	r3, [sp, #60]
 819:Core/Src/printf.c ****       }
 3688              		.loc 1 819 9 is_stmt 1 view .LVU949
 3689 062e F2E4     		b	.L284
 3690              	.LVL432:
 3691              	.L283:
 815:Core/Src/printf.c ****           }
 3692              		.loc 1 815 13 view .LVU950
 3693 0630 551C     		adds	r5, r2, #1
 3694              	.LVL433:
 815:Core/Src/printf.c ****           }
 3695              		.loc 1 815 13 is_stmt 0 view .LVU951
 3696 0632 3B46     		mov	r3, r7
 3697 0634 4946     		mov	r1, r9
 3698 0636 2020     		movs	r0, #32
 3699 0638 C047     		blx	r8
 3700              	.LVL434:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3701              		.loc 1 814 19 view .LVU952
 3702 063a 2346     		mov	r3, r4
 815:Core/Src/printf.c ****           }
 3703              		.loc 1 815 13 view .LVU953
 3704 063c 2A46     		mov	r2, r5
 3705              	.LVL435:
 3706              	.L281:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3707              		.loc 1 814 22 is_stmt 1 view .LVU954
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3708              		.loc 1 814 19 is_stmt 0 view .LVU955
 3709 063e 5C1C     		adds	r4, r3, #1
 3710              	.LVL436:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 93


 3711              		.loc 1 814 22 view .LVU956
 3712 0640 9B45     		cmp	fp, r3
 3713 0642 F5D8     		bhi	.L283
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3714              		.loc 1 814 22 view .LVU957
 3715 0644 1646     		mov	r6, r2
 3716 0646 EFE7     		b	.L282
 3717              	.LVL437:
 3718              	.L232:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3719              		.loc 1 814 22 view .LVU958
 3720              	.LBE47:
 3721              	.LBB50:
 823:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3722              		.loc 1 823 9 is_stmt 1 view .LVU959
 824:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3723              		.loc 1 824 9 view .LVU960
 824:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3724              		.loc 1 824 15 is_stmt 0 view .LVU961
 3725 0648 45F02105 		orr	r5, r5, #33
 3726              	.LVL438:
 826:Core/Src/printf.c ****         if (is_ll) {
 3727              		.loc 1 826 9 is_stmt 1 view .LVU962
 827:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 3728              		.loc 1 827 9 view .LVU963
 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3729              		.loc 1 832 11 view .LVU964
 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3730              		.loc 1 832 81 is_stmt 0 view .LVU965
 3731 064c 1A9B     		ldr	r3, [sp, #104]
 3732 064e 1A1D     		adds	r2, r3, #4
 3733 0650 1A92     		str	r2, [sp, #104]
 3734 0652 1B68     		ldr	r3, [r3]
 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3735              		.loc 1 832 17 view .LVU966
 3736 0654 0595     		str	r5, [sp, #20]
 3737 0656 0822     		movs	r2, #8
 3738 0658 0492     		str	r2, [sp, #16]
 3739 065a 0B9A     		ldr	r2, [sp, #44]
 3740 065c 0392     		str	r2, [sp, #12]
 3741 065e 1022     		movs	r2, #16
 3742 0660 0292     		str	r2, [sp, #8]
 3743 0662 0022     		movs	r2, #0
 3744 0664 0192     		str	r2, [sp, #4]
 3745 0666 0093     		str	r3, [sp]
 3746 0668 3B46     		mov	r3, r7
 3747 066a 3246     		mov	r2, r6
 3748 066c 4946     		mov	r1, r9
 3749 066e 4046     		mov	r0, r8
 3750 0670 FFF7FEFF 		bl	_ntoa_long
 3751              	.LVL439:
 3752 0674 0646     		mov	r6, r0
 3753              	.LVL440:
 836:Core/Src/printf.c ****         break;
 3754              		.loc 1 836 9 is_stmt 1 view .LVU967
 836:Core/Src/printf.c ****         break;
 3755              		.loc 1 836 15 is_stmt 0 view .LVU968
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 94


 3756 0676 0F9B     		ldr	r3, [sp, #60]
 3757 0678 0133     		adds	r3, r3, #1
 3758 067a 0F93     		str	r3, [sp, #60]
 837:Core/Src/printf.c ****       }
 3759              		.loc 1 837 9 is_stmt 1 view .LVU969
 3760 067c CBE4     		b	.L284
 3761              	.LVL441:
 3762              	.L238:
 837:Core/Src/printf.c ****       }
 3763              		.loc 1 837 9 is_stmt 0 view .LVU970
 3764              	.LBE50:
 841:Core/Src/printf.c ****         format++;
 3765              		.loc 1 841 9 is_stmt 1 view .LVU971
 3766 067e 741C     		adds	r4, r6, #1
 3767              	.LVL442:
 841:Core/Src/printf.c ****         format++;
 3768              		.loc 1 841 9 is_stmt 0 view .LVU972
 3769 0680 3B46     		mov	r3, r7
 3770 0682 3246     		mov	r2, r6
 3771 0684 4946     		mov	r1, r9
 3772 0686 2520     		movs	r0, #37
 3773 0688 C047     		blx	r8
 3774              	.LVL443:
 842:Core/Src/printf.c ****         break;
 3775              		.loc 1 842 9 is_stmt 1 view .LVU973
 842:Core/Src/printf.c ****         break;
 3776              		.loc 1 842 15 is_stmt 0 view .LVU974
 3777 068a 0F9B     		ldr	r3, [sp, #60]
 3778 068c 0133     		adds	r3, r3, #1
 3779 068e 0F93     		str	r3, [sp, #60]
 843:Core/Src/printf.c **** 
 3780              		.loc 1 843 9 is_stmt 1 view .LVU975
 841:Core/Src/printf.c ****         format++;
 3781              		.loc 1 841 9 is_stmt 0 view .LVU976
 3782 0690 2646     		mov	r6, r4
 843:Core/Src/printf.c **** 
 3783              		.loc 1 843 9 view .LVU977
 3784 0692 C0E4     		b	.L284
 3785              	.LVL444:
 3786              	.L304:
 584:Core/Src/printf.c ****   }
 3787              		.loc 1 584 9 view .LVU978
 3788 0694 DFF81C80 		ldr	r8, .L324
 3789 0698 BCE4     		b	.L203
 3790              	.LVL445:
 3791              	.L305:
 849:Core/Src/printf.c ****     }
 850:Core/Src/printf.c ****   }
 851:Core/Src/printf.c **** 
 852:Core/Src/printf.c ****   // termination
 853:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3792              		.loc 1 853 3 is_stmt 1 view .LVU979
 3793 069a BE42     		cmp	r6, r7
 3794 069c 08D3     		bcc	.L298
 3795              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU980
 3796 069e 7A1E     		subs	r2, r7, #1
 3797              	.L286:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 95


 3798              		.loc 1 853 3 discriminator 4 view .LVU981
 3799 06a0 3B46     		mov	r3, r7
 3800 06a2 4946     		mov	r1, r9
 3801 06a4 0020     		movs	r0, #0
 3802 06a6 C047     		blx	r8
 3803              	.LVL446:
 854:Core/Src/printf.c **** 
 855:Core/Src/printf.c ****   // return written chars without terminating \0
 856:Core/Src/printf.c ****   return (int)idx;
 3804              		.loc 1 856 3 is_stmt 1 discriminator 4 view .LVU982
 857:Core/Src/printf.c **** }
 3805              		.loc 1 857 1 is_stmt 0 discriminator 4 view .LVU983
 3806 06a8 3046     		mov	r0, r6
 3807 06aa 11B0     		add	sp, sp, #68
 3808              		.cfi_remember_state
 3809              		.cfi_def_cfa_offset 36
 3810              		@ sp needed
 3811 06ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3812              	.LVL447:
 3813              	.L298:
 3814              		.cfi_restore_state
 853:Core/Src/printf.c **** 
 3815              		.loc 1 853 3 view .LVU984
 3816 06b0 3246     		mov	r2, r6
 3817 06b2 F5E7     		b	.L286
 3818              	.L325:
 3819              		.align	2
 3820              	.L324:
 3821 06b4 00000000 		.word	_out_null
 3822              		.cfi_endproc
 3823              	.LFE13:
 3825              		.section	.text._out_char,"ax",%progbits
 3826              		.align	1
 3827              		.syntax unified
 3828              		.thumb
 3829              		.thumb_func
 3831              	_out_char:
 3832              	.LVL448:
 3833              	.LFB2:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3834              		.loc 1 150 1 is_stmt 1 view -0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 0
 3837              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/printf.c ****   if (character) {
 3838              		.loc 1 151 3 view .LVU986
 151:Core/Src/printf.c ****   if (character) {
 3839              		.loc 1 151 17 view .LVU987
 151:Core/Src/printf.c ****   if (character) {
 3840              		.loc 1 151 28 view .LVU988
 152:Core/Src/printf.c ****     _putchar(character);
 3841              		.loc 1 152 3 view .LVU989
 152:Core/Src/printf.c ****     _putchar(character);
 3842              		.loc 1 152 6 is_stmt 0 view .LVU990
 3843 0000 00B9     		cbnz	r0, .L332
 3844 0002 7047     		bx	lr
 3845              	.L332:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 96


 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3846              		.loc 1 150 1 view .LVU991
 3847 0004 08B5     		push	{r3, lr}
 3848              		.cfi_def_cfa_offset 8
 3849              		.cfi_offset 3, -8
 3850              		.cfi_offset 14, -4
 153:Core/Src/printf.c ****   }
 3851              		.loc 1 153 5 is_stmt 1 view .LVU992
 3852 0006 FFF7FEFF 		bl	_putchar
 3853              	.LVL449:
 155:Core/Src/printf.c **** 
 3854              		.loc 1 155 1 is_stmt 0 view .LVU993
 3855 000a 08BD     		pop	{r3, pc}
 3856              		.cfi_endproc
 3857              	.LFE2:
 3859              		.section	.text.printf_,"ax",%progbits
 3860              		.align	1
 3861              		.global	printf_
 3862              		.syntax unified
 3863              		.thumb
 3864              		.thumb_func
 3866              	printf_:
 3867              	.LVL450:
 3868              	.LFB14:
 858:Core/Src/printf.c **** 
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:Core/Src/printf.c **** 
 862:Core/Src/printf.c **** int printf_(const char* format, ...)
 863:Core/Src/printf.c **** {
 3869              		.loc 1 863 1 is_stmt 1 view -0
 3870              		.cfi_startproc
 3871              		@ args = 4, pretend = 16, frame = 8
 3872              		@ frame_needed = 0, uses_anonymous_args = 1
 3873              		.loc 1 863 1 is_stmt 0 view .LVU995
 3874 0000 0FB4     		push	{r0, r1, r2, r3}
 3875              		.cfi_def_cfa_offset 16
 3876              		.cfi_offset 0, -16
 3877              		.cfi_offset 1, -12
 3878              		.cfi_offset 2, -8
 3879              		.cfi_offset 3, -4
 3880 0002 00B5     		push	{lr}
 3881              		.cfi_def_cfa_offset 20
 3882              		.cfi_offset 14, -20
 3883 0004 85B0     		sub	sp, sp, #20
 3884              		.cfi_def_cfa_offset 40
 3885 0006 06AA     		add	r2, sp, #24
 3886 0008 52F8043B 		ldr	r3, [r2], #4
 864:Core/Src/printf.c ****   va_list va;
 3887              		.loc 1 864 3 is_stmt 1 view .LVU996
 865:Core/Src/printf.c ****   va_start(va, format);
 3888              		.loc 1 865 3 view .LVU997
 3889 000c 0392     		str	r2, [sp, #12]
 866:Core/Src/printf.c ****   char buffer[1];
 3890              		.loc 1 866 3 view .LVU998
 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 3891              		.loc 1 867 3 view .LVU999
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 97


 3892              		.loc 1 867 19 is_stmt 0 view .LVU1000
 3893 000e 0092     		str	r2, [sp]
 3894 0010 4FF0FF32 		mov	r2, #-1
 3895 0014 02A9     		add	r1, sp, #8
 3896 0016 0448     		ldr	r0, .L335
 3897 0018 FFF7FEFF 		bl	_vsnprintf
 3898              	.LVL451:
 868:Core/Src/printf.c ****   va_end(va);
 3899              		.loc 1 868 3 is_stmt 1 view .LVU1001
 869:Core/Src/printf.c ****   return ret;
 3900              		.loc 1 869 3 view .LVU1002
 870:Core/Src/printf.c **** }
 3901              		.loc 1 870 1 is_stmt 0 view .LVU1003
 3902 001c 05B0     		add	sp, sp, #20
 3903              		.cfi_def_cfa_offset 20
 3904              		@ sp needed
 3905 001e 5DF804EB 		ldr	lr, [sp], #4
 3906              		.cfi_restore 14
 3907              		.cfi_def_cfa_offset 16
 3908 0022 04B0     		add	sp, sp, #16
 3909              		.cfi_restore 3
 3910              		.cfi_restore 2
 3911              		.cfi_restore 1
 3912              		.cfi_restore 0
 3913              		.cfi_def_cfa_offset 0
 3914 0024 7047     		bx	lr
 3915              	.L336:
 3916 0026 00BF     		.align	2
 3917              	.L335:
 3918 0028 00000000 		.word	_out_char
 3919              		.cfi_endproc
 3920              	.LFE14:
 3922              		.section	.text.sprintf_,"ax",%progbits
 3923              		.align	1
 3924              		.global	sprintf_
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3929              	sprintf_:
 3930              	.LVL452:
 3931              	.LFB15:
 871:Core/Src/printf.c **** 
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:Core/Src/printf.c **** {
 3932              		.loc 1 874 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 4, pretend = 12, frame = 8
 3935              		@ frame_needed = 0, uses_anonymous_args = 1
 3936              		.loc 1 874 1 is_stmt 0 view .LVU1005
 3937 0000 0EB4     		push	{r1, r2, r3}
 3938              		.cfi_def_cfa_offset 12
 3939              		.cfi_offset 1, -12
 3940              		.cfi_offset 2, -8
 3941              		.cfi_offset 3, -4
 3942 0002 00B5     		push	{lr}
 3943              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 98


 3944              		.cfi_offset 14, -16
 3945 0004 84B0     		sub	sp, sp, #16
 3946              		.cfi_def_cfa_offset 32
 3947 0006 0146     		mov	r1, r0
 3948 0008 05AA     		add	r2, sp, #20
 3949 000a 52F8043B 		ldr	r3, [r2], #4
 875:Core/Src/printf.c ****   va_list va;
 3950              		.loc 1 875 3 is_stmt 1 view .LVU1006
 876:Core/Src/printf.c ****   va_start(va, format);
 3951              		.loc 1 876 3 view .LVU1007
 3952 000e 0392     		str	r2, [sp, #12]
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 3953              		.loc 1 877 3 view .LVU1008
 3954              		.loc 1 877 19 is_stmt 0 view .LVU1009
 3955 0010 0092     		str	r2, [sp]
 3956 0012 4FF0FF32 		mov	r2, #-1
 3957 0016 0448     		ldr	r0, .L339
 3958              	.LVL453:
 3959              		.loc 1 877 19 view .LVU1010
 3960 0018 FFF7FEFF 		bl	_vsnprintf
 3961              	.LVL454:
 878:Core/Src/printf.c ****   va_end(va);
 3962              		.loc 1 878 3 is_stmt 1 view .LVU1011
 879:Core/Src/printf.c ****   return ret;
 3963              		.loc 1 879 3 view .LVU1012
 880:Core/Src/printf.c **** }
 3964              		.loc 1 880 1 is_stmt 0 view .LVU1013
 3965 001c 04B0     		add	sp, sp, #16
 3966              		.cfi_def_cfa_offset 16
 3967              		@ sp needed
 3968 001e 5DF804EB 		ldr	lr, [sp], #4
 3969              		.cfi_restore 14
 3970              		.cfi_def_cfa_offset 12
 3971 0022 03B0     		add	sp, sp, #12
 3972              		.cfi_restore 3
 3973              		.cfi_restore 2
 3974              		.cfi_restore 1
 3975              		.cfi_def_cfa_offset 0
 3976 0024 7047     		bx	lr
 3977              	.L340:
 3978 0026 00BF     		.align	2
 3979              	.L339:
 3980 0028 00000000 		.word	_out_buffer
 3981              		.cfi_endproc
 3982              	.LFE15:
 3984              		.section	.text.snprintf_,"ax",%progbits
 3985              		.align	1
 3986              		.global	snprintf_
 3987              		.syntax unified
 3988              		.thumb
 3989              		.thumb_func
 3991              	snprintf_:
 3992              	.LVL455:
 3993              	.LFB16:
 881:Core/Src/printf.c **** 
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 99


 884:Core/Src/printf.c **** {
 3994              		.loc 1 884 1 is_stmt 1 view -0
 3995              		.cfi_startproc
 3996              		@ args = 4, pretend = 8, frame = 8
 3997              		@ frame_needed = 0, uses_anonymous_args = 1
 3998              		.loc 1 884 1 is_stmt 0 view .LVU1015
 3999 0000 0CB4     		push	{r2, r3}
 4000              		.cfi_def_cfa_offset 8
 4001              		.cfi_offset 2, -8
 4002              		.cfi_offset 3, -4
 4003 0002 10B5     		push	{r4, lr}
 4004              		.cfi_def_cfa_offset 16
 4005              		.cfi_offset 4, -16
 4006              		.cfi_offset 14, -12
 4007 0004 84B0     		sub	sp, sp, #16
 4008              		.cfi_def_cfa_offset 32
 4009 0006 0A46     		mov	r2, r1
 4010 0008 06AC     		add	r4, sp, #24
 4011 000a 54F8043B 		ldr	r3, [r4], #4
 885:Core/Src/printf.c ****   va_list va;
 4012              		.loc 1 885 3 is_stmt 1 view .LVU1016
 886:Core/Src/printf.c ****   va_start(va, format);
 4013              		.loc 1 886 3 view .LVU1017
 4014 000e 0394     		str	r4, [sp, #12]
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4015              		.loc 1 887 3 view .LVU1018
 4016              		.loc 1 887 19 is_stmt 0 view .LVU1019
 4017 0010 0094     		str	r4, [sp]
 4018 0012 0146     		mov	r1, r0
 4019              	.LVL456:
 4020              		.loc 1 887 19 view .LVU1020
 4021 0014 0348     		ldr	r0, .L343
 4022              	.LVL457:
 4023              		.loc 1 887 19 view .LVU1021
 4024 0016 FFF7FEFF 		bl	_vsnprintf
 4025              	.LVL458:
 888:Core/Src/printf.c ****   va_end(va);
 4026              		.loc 1 888 3 is_stmt 1 view .LVU1022
 889:Core/Src/printf.c ****   return ret;
 4027              		.loc 1 889 3 view .LVU1023
 890:Core/Src/printf.c **** }
 4028              		.loc 1 890 1 is_stmt 0 view .LVU1024
 4029 001a 04B0     		add	sp, sp, #16
 4030              		.cfi_def_cfa_offset 16
 4031              		@ sp needed
 4032 001c BDE81040 		pop	{r4, lr}
 4033              		.cfi_restore 14
 4034              		.cfi_restore 4
 4035              		.cfi_def_cfa_offset 8
 4036 0020 02B0     		add	sp, sp, #8
 4037              		.cfi_restore 3
 4038              		.cfi_restore 2
 4039              		.cfi_def_cfa_offset 0
 4040 0022 7047     		bx	lr
 4041              	.L344:
 4042              		.align	2
 4043              	.L343:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 100


 4044 0024 00000000 		.word	_out_buffer
 4045              		.cfi_endproc
 4046              	.LFE16:
 4048              		.section	.text.vprintf_,"ax",%progbits
 4049              		.align	1
 4050              		.global	vprintf_
 4051              		.syntax unified
 4052              		.thumb
 4053              		.thumb_func
 4055              	vprintf_:
 4056              	.LVL459:
 4057              	.LFB17:
 891:Core/Src/printf.c **** 
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 894:Core/Src/printf.c **** {
 4058              		.loc 1 894 1 is_stmt 1 view -0
 4059              		.cfi_startproc
 4060              		@ args = 0, pretend = 0, frame = 8
 4061              		@ frame_needed = 0, uses_anonymous_args = 0
 4062              		.loc 1 894 1 is_stmt 0 view .LVU1026
 4063 0000 00B5     		push	{lr}
 4064              		.cfi_def_cfa_offset 4
 4065              		.cfi_offset 14, -4
 4066 0002 85B0     		sub	sp, sp, #20
 4067              		.cfi_def_cfa_offset 24
 4068 0004 0346     		mov	r3, r0
 895:Core/Src/printf.c ****   char buffer[1];
 4069              		.loc 1 895 3 is_stmt 1 view .LVU1027
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4070              		.loc 1 896 3 view .LVU1028
 4071              		.loc 1 896 10 is_stmt 0 view .LVU1029
 4072 0006 0091     		str	r1, [sp]
 4073 0008 4FF0FF32 		mov	r2, #-1
 4074 000c 03A9     		add	r1, sp, #12
 4075              	.LVL460:
 4076              		.loc 1 896 10 view .LVU1030
 4077 000e 0348     		ldr	r0, .L347
 4078              	.LVL461:
 4079              		.loc 1 896 10 view .LVU1031
 4080 0010 FFF7FEFF 		bl	_vsnprintf
 4081              	.LVL462:
 897:Core/Src/printf.c **** }
 4082              		.loc 1 897 1 view .LVU1032
 4083 0014 05B0     		add	sp, sp, #20
 4084              		.cfi_def_cfa_offset 4
 4085              		@ sp needed
 4086 0016 5DF804FB 		ldr	pc, [sp], #4
 4087              	.L348:
 4088 001a 00BF     		.align	2
 4089              	.L347:
 4090 001c 00000000 		.word	_out_char
 4091              		.cfi_endproc
 4092              	.LFE17:
 4094              		.section	.text.vsnprintf_,"ax",%progbits
 4095              		.align	1
 4096              		.global	vsnprintf_
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 101


 4097              		.syntax unified
 4098              		.thumb
 4099              		.thumb_func
 4101              	vsnprintf_:
 4102              	.LVL463:
 4103              	.LFB18:
 898:Core/Src/printf.c **** 
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:Core/Src/printf.c **** {
 4104              		.loc 1 901 1 is_stmt 1 view -0
 4105              		.cfi_startproc
 4106              		@ args = 0, pretend = 0, frame = 0
 4107              		@ frame_needed = 0, uses_anonymous_args = 0
 4108              		.loc 1 901 1 is_stmt 0 view .LVU1034
 4109 0000 00B5     		push	{lr}
 4110              		.cfi_def_cfa_offset 4
 4111              		.cfi_offset 14, -4
 4112 0002 83B0     		sub	sp, sp, #12
 4113              		.cfi_def_cfa_offset 16
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4114              		.loc 1 902 3 is_stmt 1 view .LVU1035
 4115              		.loc 1 902 10 is_stmt 0 view .LVU1036
 4116 0004 0093     		str	r3, [sp]
 4117 0006 1346     		mov	r3, r2
 4118              	.LVL464:
 4119              		.loc 1 902 10 view .LVU1037
 4120 0008 0A46     		mov	r2, r1
 4121              	.LVL465:
 4122              		.loc 1 902 10 view .LVU1038
 4123 000a 0146     		mov	r1, r0
 4124              	.LVL466:
 4125              		.loc 1 902 10 view .LVU1039
 4126 000c 0248     		ldr	r0, .L351
 4127              	.LVL467:
 4128              		.loc 1 902 10 view .LVU1040
 4129 000e FFF7FEFF 		bl	_vsnprintf
 4130              	.LVL468:
 903:Core/Src/printf.c **** }
 4131              		.loc 1 903 1 view .LVU1041
 4132 0012 03B0     		add	sp, sp, #12
 4133              		.cfi_def_cfa_offset 4
 4134              		@ sp needed
 4135 0014 5DF804FB 		ldr	pc, [sp], #4
 4136              	.L352:
 4137              		.align	2
 4138              	.L351:
 4139 0018 00000000 		.word	_out_buffer
 4140              		.cfi_endproc
 4141              	.LFE18:
 4143              		.section	.text.fctprintf,"ax",%progbits
 4144              		.align	1
 4145              		.global	fctprintf
 4146              		.syntax unified
 4147              		.thumb
 4148              		.thumb_func
 4150              	fctprintf:
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 102


 4151              	.LVL469:
 4152              	.LFB19:
 904:Core/Src/printf.c **** 
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:Core/Src/printf.c **** {
 4153              		.loc 1 907 1 is_stmt 1 view -0
 4154              		.cfi_startproc
 4155              		@ args = 4, pretend = 8, frame = 16
 4156              		@ frame_needed = 0, uses_anonymous_args = 1
 4157              		.loc 1 907 1 is_stmt 0 view .LVU1043
 4158 0000 0CB4     		push	{r2, r3}
 4159              		.cfi_def_cfa_offset 8
 4160              		.cfi_offset 2, -8
 4161              		.cfi_offset 3, -4
 4162 0002 00B5     		push	{lr}
 4163              		.cfi_def_cfa_offset 12
 4164              		.cfi_offset 14, -12
 4165 0004 87B0     		sub	sp, sp, #28
 4166              		.cfi_def_cfa_offset 40
 4167 0006 08AA     		add	r2, sp, #32
 4168 0008 52F8043B 		ldr	r3, [r2], #4
 908:Core/Src/printf.c ****   va_list va;
 4169              		.loc 1 908 3 is_stmt 1 view .LVU1044
 909:Core/Src/printf.c ****   va_start(va, format);
 4170              		.loc 1 909 3 view .LVU1045
 4171 000c 0592     		str	r2, [sp, #20]
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4172              		.loc 1 910 3 view .LVU1046
 4173              		.loc 1 910 27 is_stmt 0 view .LVU1047
 4174 000e 0390     		str	r0, [sp, #12]
 4175 0010 0491     		str	r1, [sp, #16]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4176              		.loc 1 911 3 is_stmt 1 view .LVU1048
 4177              		.loc 1 911 19 is_stmt 0 view .LVU1049
 4178 0012 0092     		str	r2, [sp]
 4179 0014 4FF0FF32 		mov	r2, #-1
 4180 0018 03A9     		add	r1, sp, #12
 4181              	.LVL470:
 4182              		.loc 1 911 19 view .LVU1050
 4183 001a 0448     		ldr	r0, .L355
 4184              	.LVL471:
 4185              		.loc 1 911 19 view .LVU1051
 4186 001c FFF7FEFF 		bl	_vsnprintf
 4187              	.LVL472:
 912:Core/Src/printf.c ****   va_end(va);
 4188              		.loc 1 912 3 is_stmt 1 view .LVU1052
 913:Core/Src/printf.c ****   return ret;
 4189              		.loc 1 913 3 view .LVU1053
 914:Core/Src/printf.c **** }
 4190              		.loc 1 914 1 is_stmt 0 view .LVU1054
 4191 0020 07B0     		add	sp, sp, #28
 4192              		.cfi_def_cfa_offset 12
 4193              		@ sp needed
 4194 0022 5DF804EB 		ldr	lr, [sp], #4
 4195              		.cfi_restore 14
 4196              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 103


 4197 0026 02B0     		add	sp, sp, #8
 4198              		.cfi_restore 3
 4199              		.cfi_restore 2
 4200              		.cfi_def_cfa_offset 0
 4201 0028 7047     		bx	lr
 4202              	.L356:
 4203 002a 00BF     		.align	2
 4204              	.L355:
 4205 002c 00000000 		.word	_out_fct
 4206              		.cfi_endproc
 4207              	.LFE19:
 4209              		.section	.rodata.pow10.0,"a"
 4210              		.align	3
 4213              	pow10.0:
 4214 0000 00000000 		.word	0
 4215 0004 0000F03F 		.word	1072693248
 4216 0008 00000000 		.word	0
 4217 000c 00002440 		.word	1076101120
 4218 0010 00000000 		.word	0
 4219 0014 00005940 		.word	1079574528
 4220 0018 00000000 		.word	0
 4221 001c 00408F40 		.word	1083129856
 4222 0020 00000000 		.word	0
 4223 0024 0088C340 		.word	1086556160
 4224 0028 00000000 		.word	0
 4225 002c 006AF840 		.word	1090021888
 4226 0030 00000000 		.word	0
 4227 0034 80842E41 		.word	1093567616
 4228 0038 00000000 		.word	0
 4229 003c D0126341 		.word	1097011920
 4230 0040 00000000 		.word	0
 4231 0044 84D79741 		.word	1100470148
 4232 0048 00000000 		.word	0
 4233 004c 65CDCD41 		.word	1104006501
 4234              		.text
 4235              	.Letext0:
 4236              		.file 2 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-bet1\\arm-none-eab
 4237              		.file 3 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-bet1\\arm-none-eab
 4238              		.file 4 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-bet1\\lib\\gcc\\ar
 4239              		.file 5 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-bet1\\lib\\gcc\\ar
 4240              		.file 6 "<built-in>"
 4241              		.file 7 "Core/Inc/printf.h"
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:21     .text._out_buffer:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:26     .text._out_buffer:00000000 _out_buffer
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:48     .text._out_null:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:53     .text._out_null:00000000 _out_null
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:71     .text._out_fct:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:76     .text._out_fct:00000000 _out_fct
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:116    .text._atoi:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:121    .text._atoi:00000000 _atoi
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:184    .text._out_rev:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:189    .text._out_rev:00000000 _out_rev
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:317    .text._ntoa_format:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:322    .text._ntoa_format:00000000 _ntoa_format
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:607    .text._ntoa_long:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:612    .text._ntoa_long:00000000 _ntoa_long
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:756    .text._ntoa_long_long:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:761    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:939    .text._etoa:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:944    .text._etoa:00000000 _etoa
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:1620   .text._ftoa:00000000 _ftoa
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:1422   .text._etoa:000002b0 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:1450   .text._etoa:00000314 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:1599   .rodata._ftoa.str1.4:00000000 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:1615   .text._ftoa:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2209   .text._ftoa:000002f8 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4213   .rodata.pow10.0:00000000 pow10.0
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2227   .text._ftoa:0000032c $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2313   .text._vsnprintf:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2318   .text._vsnprintf:00000000 _vsnprintf
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2506   .text._vsnprintf:00000090 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2524   .text._vsnprintf:000000d4 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2580   .text._vsnprintf:00000102 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2798   .text._vsnprintf:000001d0 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2865   .text._vsnprintf:00000256 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3821   .text._vsnprintf:000006b4 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3826   .text._out_char:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3831   .text._out_char:00000000 _out_char
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3860   .text.printf_:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3866   .text.printf_:00000000 printf_
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3918   .text.printf_:00000028 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3923   .text.sprintf_:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3929   .text.sprintf_:00000000 sprintf_
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3980   .text.sprintf_:00000028 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3985   .text.snprintf_:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:3991   .text.snprintf_:00000000 snprintf_
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4044   .text.snprintf_:00000024 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4049   .text.vprintf_:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4055   .text.vprintf_:00000000 vprintf_
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4090   .text.vprintf_:0000001c $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4095   .text.vsnprintf_:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4101   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4139   .text.vsnprintf_:00000018 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4144   .text.fctprintf:00000000 $t
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4150   .text.fctprintf:00000000 fctprintf
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4205   .text.fctprintf:0000002c $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:4210   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s 			page 105


C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2600   .text._vsnprintf:00000115 $d
C:\Users\cordi\AppData\Local\Temp\cc8rmzOd.s:2600   .text._vsnprintf:00000116 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
_putchar
